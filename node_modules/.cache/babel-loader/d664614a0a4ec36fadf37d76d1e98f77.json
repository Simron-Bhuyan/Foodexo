{"ast":null,"code":"var _regeneratorRuntime = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _toConsumableArray = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _assertThisInitialized = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nvar _classCallCheck = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _createForOfIteratorHelper = require(\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n!function (e, t) {\n  if (\"object\" == typeof exports && \"object\" == typeof module) module.exports = t();else if (\"function\" == typeof define && define.amd) define([], t);else {\n    var n = t();\n    for (var r in n) (\"object\" == typeof exports ? exports : e)[r] = n[r];\n  }\n}(self, function () {\n  return function () {\n    var e = [, function (e) {\n        var t = \"api.tomtom.com\";\n        e.exports = {\n          \"sdk.name\": \"MapsWebSDK\",\n          \"sdk.version\": \"6.23.0\",\n          \"sdk.examples.version\": \"SDK-${version}\",\n          \"analytics.header.name\": \"TomTom-User-Agent\",\n          \"analytics.header.sdkName\": \"MapsWebSDK\",\n          \"endpoints.copyrightsV2\": \"\".concat(t, \"/map/2/copyrights\"),\n          \"endpoints.captionV2\": \"\".concat(t, \"/map/2/copyrights/caption.{contentType}\"),\n          \"endpoints.geocode\": \"\".concat(t, \"/search/2/geocode/{query}.{contentType}\"),\n          \"endpoints.structuredGeocode\": \"\".concat(t, \"/search/2/structuredGeocode.{contentType}\"),\n          \"endpoints.search\": \"\".concat(t, \"/search/2/{type}/{query}.{contentType}\"),\n          \"endpoints.nearbySearch\": \"\".concat(t, \"/search/2/nearbySearch/.{contentType}\"),\n          \"endpoints.batchNearbySearchQuery\": \"/{type}/.{contentType}\",\n          \"endpoints.batchSearch\": \"\".concat(t, \"/search/2/batch.{contentType}\"),\n          \"endpoints.batchSyncSearch\": \"\".concat(t, \"/search/2/batch/sync.{contentType}\"),\n          \"endpoints.batchSearchQuery\": \"/{type}/{query}.{contentType}\",\n          \"endpoints.batchStructuredGeocodeQuery\": \"/structuredGeocode.{contentType}\",\n          \"endpoints.adp\": \"\".concat(t, \"/search/2/additionalData.{contentType}\"),\n          \"endpoints.batchAdpQuery\": \"/additionalData.{contentType}\",\n          \"endpoints.reverseGeocode\": \"\".concat(t, \"/search/2/{type}/{position}.{contentType}\"),\n          \"endpoints.batchReverseGeocodeQuery\": \"/{type}/{position}.{contentType}\",\n          \"endpoints.autocomplete\": \"\".concat(t, \"/search/2/autocomplete/{query}.{contentType}\"),\n          \"endpoints.poiCategories\": \"\".concat(t, \"/search/2/poiCategories.{contentType}\"),\n          \"endpoints.chargingAvailability\": \"\".concat(t, \"/search/2/chargingAvailability.{contentType}\"),\n          \"endpoints.batchChargingAvailabilityQuery\": \"/chargingAvailability.{contentType}\",\n          \"endpoints.placeById\": \"\".concat(t, \"/search/2/place.{contentType}\"),\n          \"endpoints.incidentDetailsV5\": \"\".concat(t, \"/traffic/services/5/incidentDetails\"),\n          \"endpoints.incidentViewport\": \"\".concat(t, \"/traffic/services/4/incidentViewport/0,0,.1,.1/0/0,0,.1,.1/0/false/{contentType}\"),\n          \"endpoints.flowSegmentData\": \"\".concat(t, \"/traffic/services/4/flowSegmentData/{style}/{zoom}/{contentType}\"),\n          \"endpoints.incidentRegions\": \"\".concat(t, \"/traffic/services/4/incidentRegions/{contentType}\"),\n          \"endpoints.rasterTrafficIncidentTilesLayer\": \"{s}.\".concat(t, \"/traffic/map/4/tile/incidents/{style}/{z}/{x}/{y}.png?tileSize={tileSize}\"),\n          \"endpoints.vectorTrafficIncidentTilesLayer\": \"{s}.\".concat(t, \"/traffic/map/4/tile/incidents/{z}/{x}/{y}.pbf\"),\n          \"endpoints.rasterTrafficFlowTilesLayer\": \"{s}.\".concat(t, \"/traffic/map/4/tile/flow/{style}/{z}/{x}/{y}.png\"),\n          \"endpoints.vectorTrafficFlowTilesLayer\": \"{s}.\".concat(t, \"/traffic/map/4/tile/flow/{style}/{z}/{x}/{y}.pbf\"),\n          \"endpoints.tileLayer\": \"{s}.\".concat(t, \"/map/1/tile/{layer}/{style}/{z}/{x}/{y}.png?tileSize={tileSize}\"),\n          \"endpoints.wmsLayer\": \"{s}.\".concat(t, \"/map/1/wms/?service=WMS&version=1.1.1&request=GetMap&bbox={bbox-epsg-3857}&srs=EPSG:3857&width=512&height=512&layers=basic&styles=&format={format}\"),\n          \"endpoints.vectorTileLayer\": \"{s}.\".concat(t, \"/map/1/tile/{layer}/{style}/{z}/{x}/{y}.pbf\"),\n          \"endpoints.routing\": \"\".concat(t, \"/routing/1/calculateRoute/{locations}/{contentType}\"),\n          \"endpoints.calculateReachableRange\": \"\".concat(t, \"/routing/1/calculateReachableRange/{origin}/{contentType}\"),\n          \"endpoints.batchRouting\": \"\".concat(t, \"/routing/1/batch/{contentType}\"),\n          \"endpoints.batchSyncRouting\": \"\".concat(t, \"/routing/1/batch/sync/{contentType}\"),\n          \"endpoints.batchRoutingQuery\": \"/calculateRoute/{locations}/{contentType}\",\n          \"endpoints.batchReachableRangeQuery\": \"/calculateReachableRange/{origin}/{contentType}\",\n          \"endpoints.matrixRouting\": \"\".concat(t, \"/routing/1/matrix/{contentType}\"),\n          \"endpoints.matrixSyncRouting\": \"\".concat(t, \"/routing/1/matrix/sync/{contentType}\"),\n          \"endpoints.longDistanceEVRouting\": \"\".concat(t, \"/routing/1/calculateLongDistanceEVRoute/{locations}/{contentType}\"),\n          \"endpoints.staticImage\": \"https://\".concat(t, \"/map/1/staticimage\"),\n          \"vector.glyphs\": \"https://\" + t + \"/maps-sdk-js/6.23.0/glyphs/{fontstack}/{range}.pbf\",\n          \"vector.sprites\": \"https://\" + t + \"/maps-sdk-js/6.23.0/sprites/sprite\",\n          \"endpoints.styles\": \"https://\".concat(t, \"/style/1/style/{version}?map=basic_main&traffic_incidents=incidents_day&traffic_flow=flow_relative0&poi=poi_main\"),\n          origin: t,\n          hostedStylesVersion: \"21.1.0-*\"\n        };\n      }, function (e, t, n) {\n        var r = n(3),\n          o = n(9);\n        e.exports = function (e) {\n          if (!o(e)) return !1;\n          var t = r(e);\n          return \"[object Function]\" == t || \"[object GeneratorFunction]\" == t || \"[object AsyncFunction]\" == t || \"[object Proxy]\" == t;\n        };\n      }, function (e, t, n) {\n        var r = n(4),\n          o = n(7),\n          i = n(8),\n          a = r ? r.toStringTag : void 0;\n        e.exports = function (e) {\n          return null == e ? void 0 === e ? \"[object Undefined]\" : \"[object Null]\" : a && a in Object(e) ? o(e) : i(e);\n        };\n      }, function (e, t, n) {\n        var r = n(5).Symbol;\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(6),\n          o = \"object\" == typeof self && self && self.Object === Object && self,\n          i = r || o || Function(\"return this\")();\n        e.exports = i;\n      }, function (e, t, n) {\n        var r = \"object\" == typeof n.g && n.g && n.g.Object === Object && n.g;\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(4),\n          o = Object.prototype,\n          i = o.hasOwnProperty,\n          a = o.toString,\n          s = r ? r.toStringTag : void 0;\n        e.exports = function (e) {\n          var t = i.call(e, s),\n            n = e[s];\n          try {\n            e[s] = void 0;\n            var r = !0;\n          } catch (e) {}\n          var o = a.call(e);\n          return r && (t ? e[s] = n : delete e[s]), o;\n        };\n      }, function (e) {\n        var t = Object.prototype.toString;\n        e.exports = function (e) {\n          return t.call(e);\n        };\n      }, function (e) {\n        e.exports = function (e) {\n          var t = typeof e;\n          return null != e && (\"object\" == t || \"function\" == t);\n        };\n      }, function (e, t, n) {\n        var r = n(3),\n          o = n(11),\n          i = n(12);\n        e.exports = function (e) {\n          return \"string\" == typeof e || !o(e) && i(e) && \"[object String]\" == r(e);\n        };\n      }, function (e) {\n        var t = Array.isArray;\n        e.exports = t;\n      }, function (e) {\n        e.exports = function (e) {\n          return null != e && \"object\" == typeof e;\n        };\n      }, function (e) {\n        e.exports = function (e) {\n          return null == e;\n        };\n      }, function (e, t, n) {\n        var r = n(15);\n        e.exports = function (e) {\n          return \"number\" == typeof e && e == r(e);\n        };\n      }, function (e, t, n) {\n        var r = n(16);\n        e.exports = function (e) {\n          var t = r(e),\n            n = t % 1;\n          return t == t ? n ? t - n : t : 0;\n        };\n      }, function (e, t, n) {\n        var r = n(17),\n          o = 1 / 0;\n        e.exports = function (e) {\n          return e ? (e = r(e)) === o || e === -1 / 0 ? 17976931348623157e292 * (e < 0 ? -1 : 1) : e == e ? e : 0 : 0 === e ? e : 0;\n        };\n      }, function (e, t, n) {\n        var r = n(9),\n          o = n(18),\n          i = /^\\s+|\\s+$/g,\n          a = /^[-+]0x[0-9a-f]+$/i,\n          s = /^0b[01]+$/i,\n          c = /^0o[0-7]+$/i,\n          l = parseInt;\n        e.exports = function (e) {\n          if (\"number\" == typeof e) return e;\n          if (o(e)) return NaN;\n          if (r(e)) {\n            var t = \"function\" == typeof e.valueOf ? e.valueOf() : e;\n            e = r(t) ? t + \"\" : t;\n          }\n          if (\"string\" != typeof e) return 0 === e ? e : +e;\n          e = e.replace(i, \"\");\n          var n = s.test(e);\n          return n || c.test(e) ? l(e.slice(2), n ? 2 : 8) : a.test(e) ? NaN : +e;\n        };\n      }, function (e, t, n) {\n        var r = n(3),\n          o = n(12);\n        e.exports = function (e) {\n          return \"symbol\" == typeof e || o(e) && \"[object Symbol]\" == r(e);\n        };\n      }, function (e, t, n) {\n        var r = n(20),\n          o = n(21);\n        e.exports = function (e, t) {\n          return null != e && o(e, t, r);\n        };\n      }, function (e) {\n        var t = Object.prototype.hasOwnProperty;\n        e.exports = function (e, n) {\n          return null != e && t.call(e, n);\n        };\n      }, function (e, t, n) {\n        var r = n(22),\n          o = n(60),\n          i = n(11),\n          a = n(62),\n          s = n(63),\n          c = n(64);\n        e.exports = function (e, t, n) {\n          for (var l = -1, u = (t = r(t, e)).length, p = !1; ++l < u;) {\n            var d = c(t[l]);\n            if (!(p = null != e && n(e, d))) break;\n            e = e[d];\n          }\n          return p || ++l != u ? p : !!(u = null == e ? 0 : e.length) && s(u) && a(d, u) && (i(e) || o(e));\n        };\n      }, function (e, t, n) {\n        var r = n(11),\n          o = n(23),\n          i = n(24),\n          a = n(57);\n        e.exports = function (e, t) {\n          return r(e) ? e : o(e, t) ? [e] : i(a(e));\n        };\n      }, function (e, t, n) {\n        var r = n(11),\n          o = n(18),\n          i = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n          a = /^\\w*$/;\n        e.exports = function (e, t) {\n          if (r(e)) return !1;\n          var n = typeof e;\n          return !(\"number\" != n && \"symbol\" != n && \"boolean\" != n && null != e && !o(e)) || a.test(e) || !i.test(e) || null != t && e in Object(t);\n        };\n      }, function (e, t, n) {\n        var r = n(25),\n          o = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n          i = /\\\\(\\\\)?/g,\n          a = r(function (e) {\n            var t = [];\n            return 46 === e.charCodeAt(0) && t.push(\"\"), e.replace(o, function (e, n, r, o) {\n              t.push(r ? o.replace(i, \"$1\") : n || e);\n            }), t;\n          });\n        e.exports = a;\n      }, function (e, t, n) {\n        var r = n(26);\n        e.exports = function (e) {\n          var t = r(e, function (e) {\n              return 500 === n.size && n.clear(), e;\n            }),\n            n = t.cache;\n          return t;\n        };\n      }, function (e, t, n) {\n        var r = n(27);\n        function o(e, t) {\n          if (\"function\" != typeof e || null != t && \"function\" != typeof t) throw new TypeError(\"Expected a function\");\n          var n = function n() {\n            var r = arguments,\n              o = t ? t.apply(this, r) : r[0],\n              i = n.cache;\n            if (i.has(o)) return i.get(o);\n            var a = e.apply(this, r);\n            return n.cache = i.set(o, a) || i, a;\n          };\n          return n.cache = new (o.Cache || r)(), n;\n        }\n        o.Cache = r, e.exports = o;\n      }, function (e, t, n) {\n        var r = n(28),\n          o = n(51),\n          i = n(54),\n          a = n(55),\n          s = n(56);\n        function c(e) {\n          var t = -1,\n            n = null == e ? 0 : e.length;\n          for (this.clear(); ++t < n;) {\n            var r = e[t];\n            this.set(r[0], r[1]);\n          }\n        }\n        c.prototype.clear = r, c.prototype.delete = o, c.prototype.get = i, c.prototype.has = a, c.prototype.set = s, e.exports = c;\n      }, function (e, t, n) {\n        var r = n(29),\n          o = n(42),\n          i = n(50);\n        e.exports = function () {\n          this.size = 0, this.__data__ = {\n            hash: new r(),\n            map: new (i || o)(),\n            string: new r()\n          };\n        };\n      }, function (e, t, n) {\n        var r = n(30),\n          o = n(38),\n          i = n(39),\n          a = n(40),\n          s = n(41);\n        function c(e) {\n          var t = -1,\n            n = null == e ? 0 : e.length;\n          for (this.clear(); ++t < n;) {\n            var r = e[t];\n            this.set(r[0], r[1]);\n          }\n        }\n        c.prototype.clear = r, c.prototype.delete = o, c.prototype.get = i, c.prototype.has = a, c.prototype.set = s, e.exports = c;\n      }, function (e, t, n) {\n        var r = n(31);\n        e.exports = function () {\n          this.__data__ = r ? r(null) : {}, this.size = 0;\n        };\n      }, function (e, t, n) {\n        var r = n(32)(Object, \"create\");\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(33),\n          o = n(37);\n        e.exports = function (e, t) {\n          var n = o(e, t);\n          return r(n) ? n : void 0;\n        };\n      }, function (e, t, n) {\n        var r = n(2),\n          o = n(34),\n          i = n(9),\n          a = n(36),\n          s = /^\\[object .+?Constructor\\]$/,\n          c = Function.prototype,\n          l = Object.prototype,\n          u = c.toString,\n          p = l.hasOwnProperty,\n          d = RegExp(\"^\" + u.call(p).replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");\n        e.exports = function (e) {\n          return !(!i(e) || o(e)) && (r(e) ? d : s).test(a(e));\n        };\n      }, function (e, t, n) {\n        var r,\n          o = n(35),\n          i = (r = /[^.]+$/.exec(o && o.keys && o.keys.IE_PROTO || \"\")) ? \"Symbol(src)_1.\" + r : \"\";\n        e.exports = function (e) {\n          return !!i && i in e;\n        };\n      }, function (e, t, n) {\n        var r = n(5)[\"__core-js_shared__\"];\n        e.exports = r;\n      }, function (e) {\n        var t = Function.prototype.toString;\n        e.exports = function (e) {\n          if (null != e) {\n            try {\n              return t.call(e);\n            } catch (e) {}\n            try {\n              return e + \"\";\n            } catch (e) {}\n          }\n          return \"\";\n        };\n      }, function (e) {\n        e.exports = function (e, t) {\n          return null == e ? void 0 : e[t];\n        };\n      }, function (e) {\n        e.exports = function (e) {\n          var t = this.has(e) && delete this.__data__[e];\n          return this.size -= t ? 1 : 0, t;\n        };\n      }, function (e, t, n) {\n        var r = n(31),\n          o = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          var t = this.__data__;\n          if (r) {\n            var n = t[e];\n            return \"__lodash_hash_undefined__\" === n ? void 0 : n;\n          }\n          return o.call(t, e) ? t[e] : void 0;\n        };\n      }, function (e, t, n) {\n        var r = n(31),\n          o = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          var t = this.__data__;\n          return r ? void 0 !== t[e] : o.call(t, e);\n        };\n      }, function (e, t, n) {\n        var r = n(31);\n        e.exports = function (e, t) {\n          var n = this.__data__;\n          return this.size += this.has(e) ? 0 : 1, n[e] = r && void 0 === t ? \"__lodash_hash_undefined__\" : t, this;\n        };\n      }, function (e, t, n) {\n        var r = n(43),\n          o = n(44),\n          i = n(47),\n          a = n(48),\n          s = n(49);\n        function c(e) {\n          var t = -1,\n            n = null == e ? 0 : e.length;\n          for (this.clear(); ++t < n;) {\n            var r = e[t];\n            this.set(r[0], r[1]);\n          }\n        }\n        c.prototype.clear = r, c.prototype.delete = o, c.prototype.get = i, c.prototype.has = a, c.prototype.set = s, e.exports = c;\n      }, function (e) {\n        e.exports = function () {\n          this.__data__ = [], this.size = 0;\n        };\n      }, function (e, t, n) {\n        var r = n(45),\n          o = Array.prototype.splice;\n        e.exports = function (e) {\n          var t = this.__data__,\n            n = r(t, e);\n          return !(n < 0) && (n == t.length - 1 ? t.pop() : o.call(t, n, 1), --this.size, !0);\n        };\n      }, function (e, t, n) {\n        var r = n(46);\n        e.exports = function (e, t) {\n          for (var n = e.length; n--;) if (r(e[n][0], t)) return n;\n          return -1;\n        };\n      }, function (e) {\n        e.exports = function (e, t) {\n          return e === t || e != e && t != t;\n        };\n      }, function (e, t, n) {\n        var r = n(45);\n        e.exports = function (e) {\n          var t = this.__data__,\n            n = r(t, e);\n          return n < 0 ? void 0 : t[n][1];\n        };\n      }, function (e, t, n) {\n        var r = n(45);\n        e.exports = function (e) {\n          return r(this.__data__, e) > -1;\n        };\n      }, function (e, t, n) {\n        var r = n(45);\n        e.exports = function (e, t) {\n          var n = this.__data__,\n            o = r(n, e);\n          return o < 0 ? (++this.size, n.push([e, t])) : n[o][1] = t, this;\n        };\n      }, function (e, t, n) {\n        var r = n(32)(n(5), \"Map\");\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(52);\n        e.exports = function (e) {\n          var t = r(this, e).delete(e);\n          return this.size -= t ? 1 : 0, t;\n        };\n      }, function (e, t, n) {\n        var r = n(53);\n        e.exports = function (e, t) {\n          var n = e.__data__;\n          return r(t) ? n[\"string\" == typeof t ? \"string\" : \"hash\"] : n.map;\n        };\n      }, function (e) {\n        e.exports = function (e) {\n          var t = typeof e;\n          return \"string\" == t || \"number\" == t || \"symbol\" == t || \"boolean\" == t ? \"__proto__\" !== e : null === e;\n        };\n      }, function (e, t, n) {\n        var r = n(52);\n        e.exports = function (e) {\n          return r(this, e).get(e);\n        };\n      }, function (e, t, n) {\n        var r = n(52);\n        e.exports = function (e) {\n          return r(this, e).has(e);\n        };\n      }, function (e, t, n) {\n        var r = n(52);\n        e.exports = function (e, t) {\n          var n = r(this, e),\n            o = n.size;\n          return n.set(e, t), this.size += n.size == o ? 0 : 1, this;\n        };\n      }, function (e, t, n) {\n        var r = n(58);\n        e.exports = function (e) {\n          return null == e ? \"\" : r(e);\n        };\n      }, function (e, t, n) {\n        var r = n(4),\n          o = n(59),\n          i = n(11),\n          a = n(18),\n          s = r ? r.prototype : void 0,\n          c = s ? s.toString : void 0;\n        e.exports = function e(t) {\n          if (\"string\" == typeof t) return t;\n          if (i(t)) return o(t, e) + \"\";\n          if (a(t)) return c ? c.call(t) : \"\";\n          var n = t + \"\";\n          return \"0\" == n && 1 / t == -Infinity ? \"-0\" : n;\n        };\n      }, function (e) {\n        e.exports = function (e, t) {\n          for (var n = -1, r = null == e ? 0 : e.length, o = Array(r); ++n < r;) o[n] = t(e[n], n, e);\n          return o;\n        };\n      }, function (e, t, n) {\n        var r = n(61),\n          o = n(12),\n          i = Object.prototype,\n          a = i.hasOwnProperty,\n          s = i.propertyIsEnumerable,\n          c = r(function () {\n            return arguments;\n          }()) ? r : function (e) {\n            return o(e) && a.call(e, \"callee\") && !s.call(e, \"callee\");\n          };\n        e.exports = c;\n      }, function (e, t, n) {\n        var r = n(3),\n          o = n(12);\n        e.exports = function (e) {\n          return o(e) && \"[object Arguments]\" == r(e);\n        };\n      }, function (e) {\n        var t = /^(?:0|[1-9]\\d*)$/;\n        e.exports = function (e, n) {\n          var r = typeof e;\n          return !!(n = null == n ? 9007199254740991 : n) && (\"number\" == r || \"symbol\" != r && t.test(e)) && e > -1 && e % 1 == 0 && e < n;\n        };\n      }, function (e) {\n        e.exports = function (e) {\n          return \"number\" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991;\n        };\n      }, function (e, t, n) {\n        var r = n(18);\n        e.exports = function (e) {\n          if (\"string\" == typeof e || r(e)) return e;\n          var t = e + \"\";\n          return \"0\" == t && 1 / e == -Infinity ? \"-0\" : t;\n        };\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), Object.defineProperty(t, \"v1\", {\n          enumerable: !0,\n          get: function get() {\n            return r.default;\n          }\n        }), Object.defineProperty(t, \"v3\", {\n          enumerable: !0,\n          get: function get() {\n            return o.default;\n          }\n        }), Object.defineProperty(t, \"v4\", {\n          enumerable: !0,\n          get: function get() {\n            return i.default;\n          }\n        }), Object.defineProperty(t, \"v5\", {\n          enumerable: !0,\n          get: function get() {\n            return a.default;\n          }\n        }), Object.defineProperty(t, \"NIL\", {\n          enumerable: !0,\n          get: function get() {\n            return s.default;\n          }\n        }), Object.defineProperty(t, \"version\", {\n          enumerable: !0,\n          get: function get() {\n            return c.default;\n          }\n        }), Object.defineProperty(t, \"validate\", {\n          enumerable: !0,\n          get: function get() {\n            return l.default;\n          }\n        }), Object.defineProperty(t, \"stringify\", {\n          enumerable: !0,\n          get: function get() {\n            return u.default;\n          }\n        }), Object.defineProperty(t, \"parse\", {\n          enumerable: !0,\n          get: function get() {\n            return p.default;\n          }\n        });\n        var r = d(n(66)),\n          o = d(n(71)),\n          i = d(n(75)),\n          a = d(n(76)),\n          s = d(n(78)),\n          c = d(n(79)),\n          l = d(n(69)),\n          u = d(n(68)),\n          p = d(n(73));\n        function d(e) {\n          return e && e.__esModule ? e : {\n            default: e\n          };\n        }\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r = i(n(67)),\n          o = i(n(68));\n        function i(e) {\n          return e && e.__esModule ? e : {\n            default: e\n          };\n        }\n        var a,\n          s,\n          c = 0,\n          l = 0;\n        var u = function u(e, t, n) {\n          var i = t && n || 0;\n          var u = t || new Array(16);\n          var p = (e = e || {}).node || a,\n            d = void 0 !== e.clockseq ? e.clockseq : s;\n          if (null == p || null == d) {\n            var _t2 = e.random || (e.rng || r.default)();\n            null == p && (p = a = [1 | _t2[0], _t2[1], _t2[2], _t2[3], _t2[4], _t2[5]]), null == d && (d = s = 16383 & (_t2[6] << 8 | _t2[7]));\n          }\n          var f = void 0 !== e.msecs ? e.msecs : Date.now(),\n            h = void 0 !== e.nsecs ? e.nsecs : l + 1;\n          var y = f - c + (h - l) / 1e4;\n          if (y < 0 && void 0 === e.clockseq && (d = d + 1 & 16383), (y < 0 || f > c) && void 0 === e.nsecs && (h = 0), h >= 1e4) throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n          c = f, l = h, s = d, f += 122192928e5;\n          var v = (1e4 * (268435455 & f) + h) % 4294967296;\n          u[i++] = v >>> 24 & 255, u[i++] = v >>> 16 & 255, u[i++] = v >>> 8 & 255, u[i++] = 255 & v;\n          var g = f / 4294967296 * 1e4 & 268435455;\n          u[i++] = g >>> 8 & 255, u[i++] = 255 & g, u[i++] = g >>> 24 & 15 | 16, u[i++] = g >>> 16 & 255, u[i++] = d >>> 8 | 128, u[i++] = 255 & d;\n          for (var _e2 = 0; _e2 < 6; ++_e2) u[i + _e2] = p[_e2];\n          return t || (0, o.default)(u);\n        };\n        t.default = u;\n      }, function (e, t) {\n        \"use strict\";\n\n        var n;\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = function () {\n          if (!n && (n = \"undefined\" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || \"undefined\" != typeof msCrypto && \"function\" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto), !n)) throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n          return n(r);\n        };\n        var r = new Uint8Array(16);\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r,\n          o = (r = n(69)) && r.__esModule ? r : {\n            default: r\n          };\n        var i = [];\n        for (var _e3 = 0; _e3 < 256; ++_e3) i.push((_e3 + 256).toString(16).substr(1));\n        var a = function a(e) {\n          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var n = (i[e[t + 0]] + i[e[t + 1]] + i[e[t + 2]] + i[e[t + 3]] + \"-\" + i[e[t + 4]] + i[e[t + 5]] + \"-\" + i[e[t + 6]] + i[e[t + 7]] + \"-\" + i[e[t + 8]] + i[e[t + 9]] + \"-\" + i[e[t + 10]] + i[e[t + 11]] + i[e[t + 12]] + i[e[t + 13]] + i[e[t + 14]] + i[e[t + 15]]).toLowerCase();\n          if (!(0, o.default)(n)) throw TypeError(\"Stringified UUID is invalid\");\n          return n;\n        };\n        t.default = a;\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r,\n          o = (r = n(70)) && r.__esModule ? r : {\n            default: r\n          };\n        var i = function i(e) {\n          return \"string\" == typeof e && o.default.test(e);\n        };\n        t.default = i;\n      }, function (e, t) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        t.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r = i(n(72)),\n          o = i(n(74));\n        function i(e) {\n          return e && e.__esModule ? e : {\n            default: e\n          };\n        }\n        var a = (0, r.default)(\"v3\", 48, o.default);\n        t.default = a;\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = function (e, t, n) {\n          function i(e, i, a, s) {\n            if (\"string\" == typeof e && (e = function (e) {\n              e = unescape(encodeURIComponent(e));\n              var t = [];\n              for (var _n2 = 0; _n2 < e.length; ++_n2) t.push(e.charCodeAt(_n2));\n              return t;\n            }(e)), \"string\" == typeof i && (i = (0, o.default)(i)), 16 !== i.length) throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n            var c = new Uint8Array(16 + e.length);\n            if (c.set(i), c.set(e, i.length), c = n(c), c[6] = 15 & c[6] | t, c[8] = 63 & c[8] | 128, a) {\n              s = s || 0;\n              for (var _e4 = 0; _e4 < 16; ++_e4) a[s + _e4] = c[_e4];\n              return a;\n            }\n            return (0, r.default)(c);\n          }\n          try {\n            i.name = e;\n          } catch (e) {}\n          return i.DNS = a, i.URL = s, i;\n        }, t.URL = t.DNS = void 0;\n        var r = i(n(68)),\n          o = i(n(73));\n        function i(e) {\n          return e && e.__esModule ? e : {\n            default: e\n          };\n        }\n        var a = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\n        t.DNS = a;\n        var s = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\n        t.URL = s;\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r,\n          o = (r = n(69)) && r.__esModule ? r : {\n            default: r\n          };\n        var i = function i(e) {\n          if (!(0, o.default)(e)) throw TypeError(\"Invalid UUID\");\n          var t;\n          var n = new Uint8Array(16);\n          return n[0] = (t = parseInt(e.slice(0, 8), 16)) >>> 24, n[1] = t >>> 16 & 255, n[2] = t >>> 8 & 255, n[3] = 255 & t, n[4] = (t = parseInt(e.slice(9, 13), 16)) >>> 8, n[5] = 255 & t, n[6] = (t = parseInt(e.slice(14, 18), 16)) >>> 8, n[7] = 255 & t, n[8] = (t = parseInt(e.slice(19, 23), 16)) >>> 8, n[9] = 255 & t, n[10] = (t = parseInt(e.slice(24, 36), 16)) / 1099511627776 & 255, n[11] = t / 4294967296 & 255, n[12] = t >>> 24 & 255, n[13] = t >>> 16 & 255, n[14] = t >>> 8 & 255, n[15] = 255 & t, n;\n        };\n        t.default = i;\n      }, function (e, t) {\n        \"use strict\";\n\n        function n(e) {\n          return 14 + (e + 64 >>> 9 << 4) + 1;\n        }\n        function r(e, t) {\n          var n = (65535 & e) + (65535 & t);\n          return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n;\n        }\n        function o(e, t, n, o, i, a) {\n          return r((s = r(r(t, e), r(o, a))) << (c = i) | s >>> 32 - c, n);\n          var s, c;\n        }\n        function i(e, t, n, r, i, a, s) {\n          return o(t & n | ~t & r, e, t, i, a, s);\n        }\n        function a(e, t, n, r, i, a, s) {\n          return o(t & r | n & ~r, e, t, i, a, s);\n        }\n        function s(e, t, n, r, i, a, s) {\n          return o(t ^ n ^ r, e, t, i, a, s);\n        }\n        function c(e, t, n, r, i, a, s) {\n          return o(n ^ (t | ~r), e, t, i, a, s);\n        }\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var l = function l(e) {\n          if (\"string\" == typeof e) {\n            var _t3 = unescape(encodeURIComponent(e));\n            e = new Uint8Array(_t3.length);\n            for (var _n3 = 0; _n3 < _t3.length; ++_n3) e[_n3] = _t3.charCodeAt(_n3);\n          }\n          return function (e) {\n            var t = [],\n              n = 32 * e.length,\n              r = \"0123456789abcdef\";\n            for (var _o2 = 0; _o2 < n; _o2 += 8) {\n              var _n4 = e[_o2 >> 5] >>> _o2 % 32 & 255,\n                _i2 = parseInt(r.charAt(_n4 >>> 4 & 15) + r.charAt(15 & _n4), 16);\n              t.push(_i2);\n            }\n            return t;\n          }(function (e, t) {\n            e[t >> 5] |= 128 << t % 32, e[n(t) - 1] = t;\n            var o = 1732584193,\n              l = -271733879,\n              u = -1732584194,\n              p = 271733878;\n            for (var _t4 = 0; _t4 < e.length; _t4 += 16) {\n              var _n5 = o,\n                d = l,\n                f = u,\n                h = p;\n              o = i(o, l, u, p, e[_t4], 7, -680876936), p = i(p, o, l, u, e[_t4 + 1], 12, -389564586), u = i(u, p, o, l, e[_t4 + 2], 17, 606105819), l = i(l, u, p, o, e[_t4 + 3], 22, -1044525330), o = i(o, l, u, p, e[_t4 + 4], 7, -176418897), p = i(p, o, l, u, e[_t4 + 5], 12, 1200080426), u = i(u, p, o, l, e[_t4 + 6], 17, -1473231341), l = i(l, u, p, o, e[_t4 + 7], 22, -45705983), o = i(o, l, u, p, e[_t4 + 8], 7, 1770035416), p = i(p, o, l, u, e[_t4 + 9], 12, -1958414417), u = i(u, p, o, l, e[_t4 + 10], 17, -42063), l = i(l, u, p, o, e[_t4 + 11], 22, -1990404162), o = i(o, l, u, p, e[_t4 + 12], 7, 1804603682), p = i(p, o, l, u, e[_t4 + 13], 12, -40341101), u = i(u, p, o, l, e[_t4 + 14], 17, -1502002290), l = i(l, u, p, o, e[_t4 + 15], 22, 1236535329), o = a(o, l, u, p, e[_t4 + 1], 5, -165796510), p = a(p, o, l, u, e[_t4 + 6], 9, -1069501632), u = a(u, p, o, l, e[_t4 + 11], 14, 643717713), l = a(l, u, p, o, e[_t4], 20, -373897302), o = a(o, l, u, p, e[_t4 + 5], 5, -701558691), p = a(p, o, l, u, e[_t4 + 10], 9, 38016083), u = a(u, p, o, l, e[_t4 + 15], 14, -660478335), l = a(l, u, p, o, e[_t4 + 4], 20, -405537848), o = a(o, l, u, p, e[_t4 + 9], 5, 568446438), p = a(p, o, l, u, e[_t4 + 14], 9, -1019803690), u = a(u, p, o, l, e[_t4 + 3], 14, -187363961), l = a(l, u, p, o, e[_t4 + 8], 20, 1163531501), o = a(o, l, u, p, e[_t4 + 13], 5, -1444681467), p = a(p, o, l, u, e[_t4 + 2], 9, -51403784), u = a(u, p, o, l, e[_t4 + 7], 14, 1735328473), l = a(l, u, p, o, e[_t4 + 12], 20, -1926607734), o = s(o, l, u, p, e[_t4 + 5], 4, -378558), p = s(p, o, l, u, e[_t4 + 8], 11, -2022574463), u = s(u, p, o, l, e[_t4 + 11], 16, 1839030562), l = s(l, u, p, o, e[_t4 + 14], 23, -35309556), o = s(o, l, u, p, e[_t4 + 1], 4, -1530992060), p = s(p, o, l, u, e[_t4 + 4], 11, 1272893353), u = s(u, p, o, l, e[_t4 + 7], 16, -155497632), l = s(l, u, p, o, e[_t4 + 10], 23, -1094730640), o = s(o, l, u, p, e[_t4 + 13], 4, 681279174), p = s(p, o, l, u, e[_t4], 11, -358537222), u = s(u, p, o, l, e[_t4 + 3], 16, -722521979), l = s(l, u, p, o, e[_t4 + 6], 23, 76029189), o = s(o, l, u, p, e[_t4 + 9], 4, -640364487), p = s(p, o, l, u, e[_t4 + 12], 11, -421815835), u = s(u, p, o, l, e[_t4 + 15], 16, 530742520), l = s(l, u, p, o, e[_t4 + 2], 23, -995338651), o = c(o, l, u, p, e[_t4], 6, -198630844), p = c(p, o, l, u, e[_t4 + 7], 10, 1126891415), u = c(u, p, o, l, e[_t4 + 14], 15, -1416354905), l = c(l, u, p, o, e[_t4 + 5], 21, -57434055), o = c(o, l, u, p, e[_t4 + 12], 6, 1700485571), p = c(p, o, l, u, e[_t4 + 3], 10, -1894986606), u = c(u, p, o, l, e[_t4 + 10], 15, -1051523), l = c(l, u, p, o, e[_t4 + 1], 21, -2054922799), o = c(o, l, u, p, e[_t4 + 8], 6, 1873313359), p = c(p, o, l, u, e[_t4 + 15], 10, -30611744), u = c(u, p, o, l, e[_t4 + 6], 15, -1560198380), l = c(l, u, p, o, e[_t4 + 13], 21, 1309151649), o = c(o, l, u, p, e[_t4 + 4], 6, -145523070), p = c(p, o, l, u, e[_t4 + 11], 10, -1120210379), u = c(u, p, o, l, e[_t4 + 2], 15, 718787259), l = c(l, u, p, o, e[_t4 + 9], 21, -343485551), o = r(o, _n5), l = r(l, d), u = r(u, f), p = r(p, h);\n            }\n            return [o, l, u, p];\n          }(function (e) {\n            if (0 === e.length) return [];\n            var t = 8 * e.length,\n              r = new Uint32Array(n(t));\n            for (var _n6 = 0; _n6 < t; _n6 += 8) r[_n6 >> 5] |= (255 & e[_n6 / 8]) << _n6 % 32;\n            return r;\n          }(e), 8 * e.length));\n        };\n        t.default = l;\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r = i(n(67)),\n          o = i(n(68));\n        function i(e) {\n          return e && e.__esModule ? e : {\n            default: e\n          };\n        }\n        var a = function a(e, t, n) {\n          var i = (e = e || {}).random || (e.rng || r.default)();\n          if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, t) {\n            n = n || 0;\n            for (var _e5 = 0; _e5 < 16; ++_e5) t[n + _e5] = i[_e5];\n            return t;\n          }\n          return (0, o.default)(i);\n        };\n        t.default = a;\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r = i(n(72)),\n          o = i(n(77));\n        function i(e) {\n          return e && e.__esModule ? e : {\n            default: e\n          };\n        }\n        var a = (0, r.default)(\"v5\", 80, o.default);\n        t.default = a;\n      }, function (e, t) {\n        \"use strict\";\n\n        function n(e, t, n, r) {\n          switch (e) {\n            case 0:\n              return t & n ^ ~t & r;\n            case 1:\n            case 3:\n              return t ^ n ^ r;\n            case 2:\n              return t & n ^ t & r ^ n & r;\n          }\n        }\n        function r(e, t) {\n          return e << t | e >>> 32 - t;\n        }\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var o = function o(e) {\n          var t = [1518500249, 1859775393, 2400959708, 3395469782],\n            o = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n          if (\"string\" == typeof e) {\n            var _t5 = unescape(encodeURIComponent(e));\n            e = [];\n            for (var _n7 = 0; _n7 < _t5.length; ++_n7) e.push(_t5.charCodeAt(_n7));\n          } else Array.isArray(e) || (e = Array.prototype.slice.call(e));\n          e.push(128);\n          var i = e.length / 4 + 2,\n            a = Math.ceil(i / 16),\n            s = new Array(a);\n          for (var _t6 = 0; _t6 < a; ++_t6) {\n            var _n8 = new Uint32Array(16);\n            for (var _r2 = 0; _r2 < 16; ++_r2) _n8[_r2] = e[64 * _t6 + 4 * _r2] << 24 | e[64 * _t6 + 4 * _r2 + 1] << 16 | e[64 * _t6 + 4 * _r2 + 2] << 8 | e[64 * _t6 + 4 * _r2 + 3];\n            s[_t6] = _n8;\n          }\n          s[a - 1][14] = 8 * (e.length - 1) / Math.pow(2, 32), s[a - 1][14] = Math.floor(s[a - 1][14]), s[a - 1][15] = 8 * (e.length - 1) & 4294967295;\n          for (var _e6 = 0; _e6 < a; ++_e6) {\n            var _i3 = new Uint32Array(80);\n            for (var _t7 = 0; _t7 < 16; ++_t7) _i3[_t7] = s[_e6][_t7];\n            for (var _e7 = 16; _e7 < 80; ++_e7) _i3[_e7] = r(_i3[_e7 - 3] ^ _i3[_e7 - 8] ^ _i3[_e7 - 14] ^ _i3[_e7 - 16], 1);\n            var _a = o[0],\n              c = o[1],\n              l = o[2],\n              u = o[3],\n              p = o[4];\n            for (var _e8 = 0; _e8 < 80; ++_e8) {\n              var _o3 = Math.floor(_e8 / 20),\n                _s = r(_a, 5) + n(_o3, c, l, u) + p + t[_o3] + _i3[_e8] >>> 0;\n              p = u, u = l, l = r(c, 30) >>> 0, c = _a, _a = _s;\n            }\n            o[0] = o[0] + _a >>> 0, o[1] = o[1] + c >>> 0, o[2] = o[2] + l >>> 0, o[3] = o[3] + u >>> 0, o[4] = o[4] + p >>> 0;\n          }\n          return [o[0] >> 24 & 255, o[0] >> 16 & 255, o[0] >> 8 & 255, 255 & o[0], o[1] >> 24 & 255, o[1] >> 16 & 255, o[1] >> 8 & 255, 255 & o[1], o[2] >> 24 & 255, o[2] >> 16 & 255, o[2] >> 8 & 255, 255 & o[2], o[3] >> 24 & 255, o[3] >> 16 & 255, o[3] >> 8 & 255, 255 & o[3], o[4] >> 24 & 255, o[4] >> 16 & 255, o[4] >> 8 & 255, 255 & o[4]];\n        };\n        t.default = o;\n      }, function (e, t) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        t.default = \"00000000-0000-0000-0000-000000000000\";\n      }, function (e, t, n) {\n        \"use strict\";\n\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r,\n          o = (r = n(69)) && r.__esModule ? r : {\n            default: r\n          };\n        var i = function i(e) {\n          if (!(0, o.default)(e)) throw TypeError(\"Invalid UUID\");\n          return parseInt(e.substr(14, 1), 16);\n        };\n        t.default = i;\n      }, function (e) {\n        e.exports = function (e) {\n          return void 0 === e;\n        };\n      }, function (e, t, n) {\n        var r = n(82),\n          o = n(86),\n          i = n(60),\n          a = n(11),\n          s = n(91),\n          c = n(92),\n          l = n(83),\n          u = n(94),\n          p = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          if (null == e) return !0;\n          if (s(e) && (a(e) || \"string\" == typeof e || \"function\" == typeof e.splice || c(e) || u(e) || i(e))) return !e.length;\n          var t = o(e);\n          if (\"[object Map]\" == t || \"[object Set]\" == t) return !e.size;\n          if (l(e)) return !r(e).length;\n          for (var n in e) if (p.call(e, n)) return !1;\n          return !0;\n        };\n      }, function (e, t, n) {\n        var r = n(83),\n          o = n(84),\n          i = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          if (!r(e)) return o(e);\n          var t = [];\n          for (var n in Object(e)) i.call(e, n) && \"constructor\" != n && t.push(n);\n          return t;\n        };\n      }, function (e) {\n        var t = Object.prototype;\n        e.exports = function (e) {\n          var n = e && e.constructor;\n          return e === (\"function\" == typeof n && n.prototype || t);\n        };\n      }, function (e, t, n) {\n        var r = n(85)(Object.keys, Object);\n        e.exports = r;\n      }, function (e) {\n        e.exports = function (e, t) {\n          return function (n) {\n            return e(t(n));\n          };\n        };\n      }, function (e, t, n) {\n        var r = n(87),\n          o = n(50),\n          i = n(88),\n          a = n(89),\n          s = n(90),\n          c = n(3),\n          l = n(36),\n          u = \"[object Map]\",\n          p = \"[object Promise]\",\n          d = \"[object Set]\",\n          f = \"[object WeakMap]\",\n          h = \"[object DataView]\",\n          y = l(r),\n          v = l(o),\n          g = l(i),\n          b = l(a),\n          m = l(s),\n          w = c;\n        (r && w(new r(new ArrayBuffer(1))) != h || o && w(new o()) != u || i && w(i.resolve()) != p || a && w(new a()) != d || s && w(new s()) != f) && (w = function w(e) {\n          var t = c(e),\n            n = \"[object Object]\" == t ? e.constructor : void 0,\n            r = n ? l(n) : \"\";\n          if (r) switch (r) {\n            case y:\n              return h;\n            case v:\n              return u;\n            case g:\n              return p;\n            case b:\n              return d;\n            case m:\n              return f;\n          }\n          return t;\n        }), e.exports = w;\n      }, function (e, t, n) {\n        var r = n(32)(n(5), \"DataView\");\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(32)(n(5), \"Promise\");\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(32)(n(5), \"Set\");\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(32)(n(5), \"WeakMap\");\n        e.exports = r;\n      }, function (e, t, n) {\n        var r = n(2),\n          o = n(63);\n        e.exports = function (e) {\n          return null != e && o(e.length) && !r(e);\n        };\n      }, function (e, t, n) {\n        e = n.nmd(e);\n        var r = n(5),\n          o = n(93),\n          i = t && !t.nodeType && t,\n          a = i && e && !e.nodeType && e,\n          s = a && a.exports === i ? r.Buffer : void 0,\n          c = (s ? s.isBuffer : void 0) || o;\n        e.exports = c;\n      }, function (e) {\n        e.exports = function () {\n          return !1;\n        };\n      }, function (e, t, n) {\n        var r = n(95),\n          o = n(96),\n          i = n(97),\n          a = i && i.isTypedArray,\n          s = a ? o(a) : r;\n        e.exports = s;\n      }, function (e, t, n) {\n        var r = n(3),\n          o = n(63),\n          i = n(12),\n          a = {};\n        a[\"[object Float32Array]\"] = a[\"[object Float64Array]\"] = a[\"[object Int8Array]\"] = a[\"[object Int16Array]\"] = a[\"[object Int32Array]\"] = a[\"[object Uint8Array]\"] = a[\"[object Uint8ClampedArray]\"] = a[\"[object Uint16Array]\"] = a[\"[object Uint32Array]\"] = !0, a[\"[object Arguments]\"] = a[\"[object Array]\"] = a[\"[object ArrayBuffer]\"] = a[\"[object Boolean]\"] = a[\"[object DataView]\"] = a[\"[object Date]\"] = a[\"[object Error]\"] = a[\"[object Function]\"] = a[\"[object Map]\"] = a[\"[object Number]\"] = a[\"[object Object]\"] = a[\"[object RegExp]\"] = a[\"[object Set]\"] = a[\"[object String]\"] = a[\"[object WeakMap]\"] = !1, e.exports = function (e) {\n          return i(e) && o(e.length) && !!a[r(e)];\n        };\n      }, function (e) {\n        e.exports = function (e) {\n          return function (t) {\n            return e(t);\n          };\n        };\n      }, function (e, t, n) {\n        e = n.nmd(e);\n        var r = n(6),\n          o = t && !t.nodeType && t,\n          i = o && e && !e.nodeType && e,\n          a = i && i.exports === o && r.process,\n          s = function () {\n            try {\n              var e = i && i.require && i.require(\"util\").types;\n              return e || a && a.binding && a.binding(\"util\");\n            } catch (e) {}\n          }();\n        e.exports = s;\n      }, function (e, t, n) {\n        var r = n(11);\n        e.exports = function () {\n          if (!arguments.length) return [];\n          var e = arguments[0];\n          return r(e) ? e : [e];\n        };\n      }],\n      t = {};\n    function n(r) {\n      var o = t[r];\n      if (void 0 !== o) return o.exports;\n      var i = t[r] = {\n        id: r,\n        loaded: !1,\n        exports: {}\n      };\n      return e[r](i, i.exports, n), i.loaded = !0, i.exports;\n    }\n    n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, {\n        a: t\n      }), t;\n    }, n.d = function (e, t) {\n      for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {\n        enumerable: !0,\n        get: t[r]\n      });\n    }, n.g = function () {\n      if (\"object\" == typeof globalThis) return globalThis;\n      try {\n        return this || new Function(\"return this\")();\n      } catch (e) {\n        if (\"object\" == typeof window) return window;\n      }\n    }(), n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, n.nmd = function (e) {\n      return e.paths = [], e.children || (e.children = []), e;\n    };\n    var r = {};\n    return function () {\n      \"use strict\";\n\n      n.r(r), n.d(r, {\n        default: function _default() {\n          return Ki;\n        }\n      });\n      var e = {};\n      n.r(e), n.d(e, {\n        adpEndpoint: function adpEndpoint() {\n          return xt;\n        },\n        autocompleteEndpoint: function autocompleteEndpoint() {\n          return kt;\n        },\n        batchAdpQueryEndpoint: function batchAdpQueryEndpoint() {\n          return It;\n        },\n        batchChargingAvailabilityQueryEndpoint: function batchChargingAvailabilityQueryEndpoint() {\n          return Lt;\n        },\n        batchNearbySearchQueryEndpoint: function batchNearbySearchQueryEndpoint() {\n          return At;\n        },\n        batchReachableRangeQueryEndpoint: function batchReachableRangeQueryEndpoint() {\n          return Wt;\n        },\n        batchReverseGeocodeQueryEndpoint: function batchReverseGeocodeQueryEndpoint() {\n          return St;\n        },\n        batchRoutingEndpoint: function batchRoutingEndpoint() {\n          return Ft;\n        },\n        batchRoutingQueryEndpoint: function batchRoutingQueryEndpoint() {\n          return Ut;\n        },\n        batchSearchEndpoint: function batchSearchEndpoint() {\n          return bt;\n        },\n        batchSearchQueryEndpoint: function batchSearchQueryEndpoint() {\n          return wt;\n        },\n        batchStructuredGeocodeQueryEndpoint: function batchStructuredGeocodeQueryEndpoint() {\n          return Tt;\n        },\n        batchSyncRoutingEndpoint: function batchSyncRoutingEndpoint() {\n          return Nt;\n        },\n        batchSyncSearchEndpoint: function batchSyncSearchEndpoint() {\n          return mt;\n        },\n        calculateReachableRangeEndpoint: function calculateReachableRangeEndpoint() {\n          return Mt;\n        },\n        captionV2Endpoint: function captionV2Endpoint() {\n          return gt;\n        },\n        chargingAvailabilityEndpoint: function chargingAvailabilityEndpoint() {\n          return Ct;\n        },\n        copyrightsV2Endpoint: function copyrightsV2Endpoint() {\n          return vt;\n        },\n        flowSegmentDataEndpoint: function flowSegmentDataEndpoint() {\n          return Kt;\n        },\n        geocodeEndpoint: function geocodeEndpoint() {\n          return _t;\n        },\n        incidentDetailsV5Endpoint: function incidentDetailsV5Endpoint() {\n          return zt;\n        },\n        incidentRegionsEndpoint: function incidentRegionsEndpoint() {\n          return Qt;\n        },\n        incidentViewportEndpoint: function incidentViewportEndpoint() {\n          return Ht;\n        },\n        longDistanceEVRoutingEndpoint: function longDistanceEVRoutingEndpoint() {\n          return qt;\n        },\n        matrixRoutingEndpoint: function matrixRoutingEndpoint() {\n          return Bt;\n        },\n        matrixSyncRoutingEndpoint: function matrixSyncRoutingEndpoint() {\n          return Gt;\n        },\n        nearbySearchEndpoint: function nearbySearchEndpoint() {\n          return jt;\n        },\n        origin: function origin() {\n          return en;\n        },\n        placeByIdEndpoint: function placeByIdEndpoint() {\n          return Dt;\n        },\n        poiCategoriesEndpoint: function poiCategoriesEndpoint() {\n          return Rt;\n        },\n        rasterTrafficFlowTilesLayerEndpoint: function rasterTrafficFlowTilesLayerEndpoint() {\n          return $t;\n        },\n        reverseGeocodeEndpoint: function reverseGeocodeEndpoint() {\n          return Et;\n        },\n        routingEndpoint: function routingEndpoint() {\n          return Vt;\n        },\n        searchEndpoint: function searchEndpoint() {\n          return Pt;\n        },\n        staticMapImageEndpoint: function staticMapImageEndpoint() {\n          return Jt;\n        },\n        structuredGeocodeEndpoint: function structuredGeocodeEndpoint() {\n          return Ot;\n        },\n        tileLayerEndpoint: function tileLayerEndpoint() {\n          return Yt;\n        },\n        trafficLayerEndpoint: function trafficLayerEndpoint() {\n          return Zt;\n        },\n        vectorTrafficFlowTilesLayerEndpoint: function vectorTrafficFlowTilesLayerEndpoint() {\n          return Xt;\n        }\n      });\n      var t = {};\n      n.r(t), n.d(t, {\n        additionalData: function additionalData() {\n          return Sr;\n        },\n        alongRouteSearch: function alongRouteSearch() {\n          return Hr;\n        },\n        autocomplete: function autocomplete() {\n          return Co;\n        },\n        categorySearch: function categorySearch() {\n          return go;\n        },\n        crossStreetLookup: function crossStreetLookup() {\n          return Yo;\n        },\n        evChargingStationsAvailability: function evChargingStationsAvailability() {\n          return mo;\n        },\n        fuzzySearch: function fuzzySearch() {\n          return _o;\n        },\n        geocode: function geocode() {\n          return Xo;\n        },\n        geometrySearch: function geometrySearch() {\n          return So;\n        },\n        nearbySearch: function nearbySearch() {\n          return Po;\n        },\n        placeById: function placeById() {\n          return xo;\n        },\n        poiCategories: function poiCategories() {\n          return jo;\n        },\n        poiSearch: function poiSearch() {\n          return ko;\n        },\n        reverseGeocode: function reverseGeocode() {\n          return Ho;\n        },\n        structuredGeocode: function structuredGeocode() {\n          return ti;\n        }\n      });\n      var o = {};\n      n.r(o), n.d(o, {\n        calculateReachableRange: function calculateReachableRange() {\n          return ci;\n        },\n        calculateRoute: function calculateRoute() {\n          return gi;\n        },\n        longDistanceEVRouting: function longDistanceEVRouting() {\n          return wi;\n        },\n        matrixRouting: function matrixRouting() {\n          return Pi;\n        }\n      });\n      var i = {};\n      n.r(i), n.d(i, {\n        incidentDetailsV5: function incidentDetailsV5() {\n          return Di;\n        },\n        incidentViewport: function incidentViewport() {\n          return xi;\n        },\n        trafficFlowSegmentData: function trafficFlowSegmentData() {\n          return Ci;\n        }\n      });\n      var a = {};\n      n.r(a), n.d(a, {\n        copyrightsCaptionV2: function copyrightsCaptionV2() {\n          return Wi;\n        },\n        copyrightsV2: function copyrightsV2() {\n          return Bi;\n        },\n        staticImage: function staticImage() {\n          return Fi;\n        }\n      });\n      var s = n(1),\n        c = n.n(s);\n      var l = c()[\"analytics.header.sdkName\"] + \"/\" + c()[\"sdk.version\"],\n        u = c()[\"analytics.header.name\"],\n        p = function p() {\n          return n.g.__tomtomAnalyticsInfo_ = n.g.__tomtomAnalyticsInfo_ ? n.g.__tomtomAnalyticsInfo_ : {}, n.g.__tomtomAnalyticsInfo_;\n        },\n        d = function d() {\n          var e = void 0 !== p().productInfo ? \" \" + p().productInfo : \"\";\n          return l + e;\n        },\n        f = function f() {\n          var e = {};\n          return e[u] = d(), e;\n        },\n        h = \"EXTENDED_SEARCH\",\n        y = \"MAP\",\n        v = \"ROUTING\",\n        g = \"SEARCH\",\n        b = \"TRAFFIC_FLOW\",\n        m = \"TRAFFIC_INCIDENTS\";\n      function w(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function _(e) {\n        for (var t = 1; t < arguments.length; t++) {\n          var n = null != arguments[t] ? arguments[t] : {};\n          t % 2 ? w(Object(n), !0).forEach(function (t) {\n            E(e, t, n[t]);\n          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : w(Object(n)).forEach(function (t) {\n            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n          });\n        }\n        return e;\n      }\n      function E(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function S(e) {\n        return \"number\" == typeof e && isFinite(e);\n      }\n      function O(e) {\n        return null != e && !function (e) {\n          return e != e;\n        }(e);\n      }\n      function P(e, t) {\n        for (var _n9 in e) Object.prototype.hasOwnProperty.call(e, _n9) && (Array.isArray(e[_n9]) ? t[_n9] = e[_n9].slice(0) : \"object\" == typeof e[_n9] ? (t[_n9] = {}, P(e[_n9], t[_n9])) : t[_n9] = e[_n9]);\n      }\n      function T(e, t, n) {\n        var r;\n        e[t] = void 0 === (r = e[t]) ? {} : r;\n        for (var _r3 in n[t]) Object.prototype.hasOwnProperty.call(n[t], _r3) && (e[t][_r3] = n[t][_r3]);\n      }\n      function x(e, t) {\n        for (var _n10 in t) Object.prototype.hasOwnProperty.call(t, _n10) && (e[_n10] = t[_n10]);\n        return e;\n      }\n      function I(e, t, n) {\n        if (-1 === t.indexOf(e)) throw new TypeError(n);\n        return e;\n      }\n      function j(e) {\n        if (\"string\" != typeof e) return {};\n        var t = -1;\n        var n = new RegExp(\"[a-zA-Z]\");\n        return function r(o) {\n          var i = {},\n            a = \"\";\n          for (; ++t < e.length;) {\n            var _s2 = e.charAt(t);\n            switch (_s2) {\n              case \"}\":\n                return \"\" !== a && (i[a] = !0), i;\n              case \"{\":\n                \"\" === a ? o ? i = r() : r() : (i[a] = r(), a = \"\");\n                break;\n              case \",\":\n                \"\" !== a && (i[a] = !0), a = \"\";\n                break;\n              default:\n                n.test(_s2) && (a += _s2);\n            }\n          }\n          return \"\" !== a && (i[a] = !0), i;\n        }(!0);\n      }\n      function A(e) {\n        var t = {};\n        return P(e, t), t;\n      }\n      var k = /(-?\\d+(?:\\.\\d+)?)(?:\\s+|\\s*,\\s*)(-?\\d+(?:\\.\\d+)?)/,\n        R = /circle\\((-?\\d+(?:\\.\\d+)?)\\s*,\\s*(-?\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+)\\)/;\n      function C(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n        var n = _({}, t);\n        for (var _t8 in e) Object.prototype.hasOwnProperty.call(e, _t8) && T(n, _t8, e);\n        return n;\n      }\n      var L = n(2),\n        D = n.n(L),\n        V = n(10),\n        M = n.n(V),\n        U = n(13),\n        F = n.n(U),\n        N = n(14),\n        B = n.n(N);\n      var G = {\n          \"af-ZA\": {\n            synonyms: {\n              af: null,\n              afr: null,\n              \"af-za\": null,\n              af_za: null,\n              afrikaans: null\n            },\n            label: \"Afrikaans\"\n          },\n          ar: {\n            synonyms: {\n              ar: null,\n              ara: null,\n              \"ar-ar\": null,\n              ar_ar: null,\n              arabic: null\n            },\n            label: \"Arabic\"\n          },\n          \"bg-BG\": {\n            synonyms: {\n              bg: null,\n              bul: null,\n              \"bg-bg\": null,\n              bg_bg: null,\n              bulgarian: null\n            },\n            label: \"Bulgarian\"\n          },\n          \"ca-ES\": {\n            synonyms: {\n              ca: null,\n              cat: null,\n              \"ca-fr\": null,\n              ca_fr: null,\n              \"ca-es\": null,\n              ca_es: null,\n              catalan: null\n            },\n            label: \"Catalan\"\n          },\n          \"zh-CN\": {\n            synonyms: {\n              \"zh-cn\": null,\n              zh_cn: null\n            },\n            label: \"Chinese (PRC)\"\n          },\n          \"zh-TW\": {\n            synonyms: {\n              zh: null,\n              chi: null,\n              \"zh-tw\": null,\n              zh_tw: null,\n              chinese: null\n            },\n            label: \"Chinese (Taiwan)\"\n          },\n          \"cs-CZ\": {\n            synonyms: {\n              cs: null,\n              cz: null,\n              cze: null,\n              \"cs-cz\": null,\n              cs_cz: null,\n              czech: null\n            },\n            label: \"Czech\"\n          },\n          \"da-DK\": {\n            synonyms: {\n              da: null,\n              dan: null,\n              \"da-dk\": null,\n              da_dk: null,\n              danish: null\n            },\n            label: \"Danish\"\n          },\n          \"nl-BE\": {\n            synonyms: {\n              \"nl-be\": null,\n              nl_be: null,\n              \"dutch belgium\": null\n            },\n            label: \"Dutch (Belgium)\"\n          },\n          \"nl-NL\": {\n            synonyms: {\n              nl: null,\n              dut: null,\n              \"nl-nl\": null,\n              nl_nl: null,\n              dutch: null\n            },\n            label: \"Dutch\"\n          },\n          \"en-AU\": {\n            synonyms: {\n              aue: null,\n              aus: null,\n              \"en-au\": null,\n              en_au: null,\n              \"english au\": null\n            },\n            label: \"English (Australia)\"\n          },\n          \"en-GB\": {\n            synonyms: {\n              en: null,\n              eng: null,\n              \"en-gb\": null,\n              en_gb: null,\n              english: null,\n              default: null\n            },\n            label: \"English (Great Britain)\"\n          },\n          \"en-NZ\": {\n            synonyms: {\n              \"en-nz\": null,\n              en_nz: null,\n              \"english new zealand\": null\n            },\n            label: \"English (New Zealand)\"\n          },\n          \"en-US\": {\n            synonyms: {\n              us: null,\n              ame: null,\n              \"en-us\": null,\n              en_us: null,\n              \"english us\": null\n            },\n            label: \"English (US)\"\n          },\n          \"et-EE\": {\n            synonyms: {\n              \"et-ee\": null,\n              et_ee: null,\n              estonian: null\n            },\n            label: \"Estonian\"\n          },\n          \"eu-ES\": {\n            synonyms: {\n              \"eu-es\": null,\n              eu_es: null,\n              basque: null\n            },\n            label: \"Basque (Spain)\"\n          },\n          \"fi-FI\": {\n            synonyms: {\n              fi: null,\n              fin: null,\n              \"fi-fi\": null,\n              fi_fi: null,\n              finnish: null\n            },\n            label: \"Finnish\"\n          },\n          \"fr-CA\": {\n            synonyms: {\n              \"fr-ca\": null,\n              fr_ca: null,\n              \"french canadian\": null\n            },\n            label: \"French (Canadian)\"\n          },\n          \"fr-FR\": {\n            synonyms: {\n              fr: null,\n              fre: null,\n              \"fr-fr\": null,\n              fr_fr: null,\n              french: null\n            },\n            label: \"French\"\n          },\n          \"de-DE\": {\n            synonyms: {\n              de: null,\n              ger: null,\n              \"de-de\": null,\n              de_de: null,\n              german: null\n            },\n            label: \"German\"\n          },\n          \"el-GR\": {\n            synonyms: {\n              el: null,\n              gre: null,\n              \"el-gr\": null,\n              el_gr: null,\n              greek: null\n            },\n            label: \"Greek\"\n          },\n          \"gl-ES\": {\n            synonyms: {\n              \"gl-es\": null,\n              gl_es: null,\n              galician: null\n            },\n            label: \"Galician (Spain)\"\n          },\n          \"he-IL\": {\n            synonyms: {\n              \"he-il\": null,\n              he_il: null,\n              hebrew: null\n            },\n            label: \"Hebrew (Israel)\"\n          },\n          \"hr-HR\": {\n            synonyms: {\n              hr: null,\n              \"hr-hr\": null,\n              hr_hr: null,\n              croatian: null\n            },\n            label: \"Croatian\"\n          },\n          \"hu-HU\": {\n            synonyms: {\n              hu: null,\n              hun: null,\n              \"hu-hu\": null,\n              hu_hu: null,\n              hungarian: null\n            },\n            label: \"Hungarian\"\n          },\n          \"id-ID\": {\n            synonyms: {\n              id: null,\n              ind: null,\n              \"id-id\": null,\n              id_id: null,\n              indonesian: null\n            },\n            label: \"Indonesian\"\n          },\n          \"it-IT\": {\n            synonyms: {\n              it: null,\n              ita: null,\n              \"it-it\": null,\n              it_it: null,\n              italian: null\n            },\n            label: \"Italian\"\n          },\n          \"kk-KZ\": {\n            synonyms: {\n              \"kk-kz\": null,\n              kk_kz: null,\n              kazakh: null\n            },\n            label: \"Kazakh (Kazakhstan)\"\n          },\n          \"lv-LV\": {\n            synonyms: {\n              lt: null,\n              \"lv-lv\": null,\n              lv_lv: null,\n              latvian: null\n            },\n            label: \"Latvian\"\n          },\n          \"lt-LT\": {\n            synonyms: {\n              lt: null,\n              lit: null,\n              \"lt-lt\": null,\n              lt_lt: null,\n              lithuanian: null\n            },\n            label: \"Lithuanian\"\n          },\n          \"ms-MY\": {\n            synonyms: {\n              ms: null,\n              mal: null,\n              \"ms-my\": null,\n              ms_my: null,\n              malay: null\n            },\n            label: \"Malay\"\n          },\n          \"no-NO\": {\n            synonyms: {\n              no: null,\n              nb: null,\n              nor: null,\n              \"nb-no\": null,\n              nb_no: null,\n              \"no-no\": null,\n              no_no: null,\n              norwegian: null\n            },\n            label: \"Norwegian\"\n          },\n          \"pl-PL\": {\n            synonyms: {\n              pl: null,\n              pol: null,\n              \"pl-pl\": null,\n              pl_pl: null,\n              polish: null\n            },\n            label: \"Polish\"\n          },\n          \"ro-RO\": {\n            synonyms: {\n              \"ro-ro\": null,\n              ro_ro: null,\n              romanian: null\n            },\n            label: \"Romanian\"\n          },\n          \"ru-RU\": {\n            synonyms: {\n              ru: null,\n              rus: null,\n              \"ru-ru\": null,\n              ru_ru: null,\n              russian: null\n            },\n            label: \"Russian\"\n          },\n          \"sr-RS\": {\n            synonyms: {\n              \"sr-rs\": null,\n              sr_rs: null,\n              serbian: null\n            },\n            label: \"Serbian\"\n          },\n          \"sk-SK\": {\n            synonyms: {\n              sk: null,\n              slo: null,\n              \"sk-sk\": null,\n              sk_sk: null,\n              slovak: null\n            },\n            label: \"Slovak\"\n          },\n          \"sl-SI\": {\n            synonyms: {\n              sl: null,\n              slv: null,\n              \"sl-si\": null,\n              sl_si: null,\n              slovenian: null\n            },\n            label: \"Slovenian\"\n          },\n          \"es-ES\": {\n            synonyms: {\n              es: null,\n              spa: null,\n              \"es-es\": null,\n              es_es: null,\n              spanish: null\n            },\n            label: \"Spanish\"\n          },\n          \"es-419\": {\n            synonyms: {\n              \"es-419\": null,\n              es_419: null,\n              \"latin america spanish\": null\n            },\n            label: \"Latin American Spanish\"\n          },\n          \"sv-SE\": {\n            synonyms: {\n              sv: null,\n              swe: null,\n              \"sv-se\": null,\n              sv_se: null,\n              swedish: null\n            },\n            label: \"Swedish\"\n          },\n          \"th-TH\": {\n            synonyms: {\n              th: null,\n              tha: null,\n              \"th-th\": null,\n              th_th: null,\n              thai: null\n            },\n            label: \"Thai\"\n          },\n          \"tr-TR\": {\n            synonyms: {\n              tr: null,\n              tur: null,\n              \"tr-tr\": null,\n              tr_tr: null,\n              turkish: null\n            },\n            label: \"Turkish\"\n          },\n          \"uk-UA\": {\n            synonyms: {\n              \"uk-ua\": null,\n              uk_ua: null,\n              ukrainian: null\n            },\n            label: \"Ukrainian\"\n          },\n          \"vi-VN\": {\n            synonyms: {\n              \"vi-vn\": null,\n              vi_vn: null,\n              vietnamese: null\n            },\n            label: \"Vietnamese (Viet Nam)\"\n          },\n          NGT: {\n            synonyms: {\n              ngt: null\n            },\n            label: \"Neutral Ground Truth\"\n          },\n          \"NGT-Latn\": {\n            synonyms: {\n              \"ngt-latn\": null\n            },\n            label: \"Neutral Ground Truth - Latin exonyms\"\n          },\n          \"en-CA\": {\n            synonyms: {\n              \"en-ca\": null,\n              en_ca: null,\n              \"english canadian\": null\n            },\n            label: \"English (Canada)\"\n          },\n          \"ko-KR\": {\n            synonyms: {\n              ko: null,\n              kor: null,\n              \"ko-kr\": null,\n              ko_kr: null,\n              korean: null\n            },\n            label: \"Korean\"\n          },\n          \"nb-NO\": {\n            synonyms: {\n              nb: null,\n              nor: null,\n              \"nb-no\": null,\n              nb_no: null,\n              norwegian: null\n            },\n            label: \"Norwegian\"\n          },\n          \"pt-BR\": {\n            synonyms: {\n              br: null,\n              pob: null,\n              \"pt-br\": null,\n              pt_br: null,\n              \"portuguese br\": null\n            },\n            label: \"Portuguese (BR)\"\n          },\n          \"pt-PT\": {\n            synonyms: {\n              pt: null,\n              por: null,\n              \"pt-pt\": null,\n              pt_pt: null,\n              portuguese: null\n            },\n            label: \"Portuguese\"\n          },\n          \"ru-Latn-RU\": {\n            synonyms: {\n              \"ru-latn-ru\": null,\n              ru_latn_ru: null\n            },\n            label: \"Russian (Latin)\"\n          },\n          \"ru-Cyrl-RU\": {\n            synonyms: {\n              \"ru-cyrl-ru\": null,\n              ru_cyrl_ru: null\n            },\n            label: \"Russian (Cyrlic)\"\n          },\n          \"es-MX\": {\n            synonyms: {\n              mx: null,\n              spm: null,\n              \"es-mx\": null,\n              es_mx: null,\n              \"spanish mx\": null\n            },\n            label: \"Spanish (Mexico)\"\n          },\n          defaultValue: {\n            value: \"en-GB\",\n            label: \"English (Great Britain)\"\n          }\n        },\n        W = {\n          ar: G.ar,\n          \"af-ZA\": G[\"af-ZA\"],\n          \"bg-BG\": G[\"bg-BG\"],\n          \"zh-TW\": G[\"zh-TW\"],\n          \"cs-CZ\": G[\"cs-CZ\"],\n          \"da-DK\": G[\"da-DK\"],\n          \"nl-NL\": G[\"nl-NL\"],\n          \"en-GB\": G[\"en-GB\"],\n          \"en-US\": G[\"en-US\"],\n          \"fi-FI\": G[\"fi-FI\"],\n          \"fr-FR\": G[\"fr-FR\"],\n          \"de-DE\": G[\"de-DE\"],\n          \"el-GR\": G[\"el-GR\"],\n          \"hu-HU\": G[\"hu-HU\"],\n          \"id-ID\": G[\"id-ID\"],\n          \"it-IT\": G[\"it-IT\"],\n          \"ko-KR\": G[\"ko-KR\"],\n          \"lt-LT\": G[\"lt-LT\"],\n          \"ms-MY\": G[\"ms-MY\"],\n          \"nb-NO\": G[\"nb-NO\"],\n          \"pl-PL\": G[\"pl-PL\"],\n          \"pt-BR\": G[\"pt-BR\"],\n          \"pt-PT\": G[\"pt-PT\"],\n          \"ru-RU\": G[\"ru-RU\"],\n          \"sk-SK\": G[\"sk-SK\"],\n          \"sl-SI\": G[\"sl-SI\"],\n          \"es-ES\": G[\"es-ES\"],\n          \"es-MX\": G[\"es-MX\"],\n          \"sv-SE\": G[\"sv-SE\"],\n          \"th-TH\": G[\"th-TH\"],\n          \"tr-TR\": G[\"tr-TR\"],\n          defaultValue: G.defaultValue\n        },\n        q = {\n          NGT: G.NGT,\n          \"NGT-Latn\": G[\"NGT-Latn\"],\n          \"af-ZA\": G[\"af-ZA\"],\n          ar: G.ar,\n          \"eu-ES\": G[\"eu-ES\"],\n          \"bg-BG\": G[\"bg-BG\"],\n          \"ca-ES\": G[\"ca-ES\"],\n          \"zh-CN\": G[\"zh-CN\"],\n          \"zh-TW\": G[\"zh-TW\"],\n          \"cs-CZ\": G[\"cs-CZ\"],\n          \"da-DK\": G[\"da-DK\"],\n          \"nl-BE\": G[\"nl-BE\"],\n          \"nl-NL\": G[\"nl-NL\"],\n          \"en-AU\": G[\"en-AU\"],\n          \"en-NZ\": G[\"en-NZ\"],\n          \"en-GB\": G[\"en-GB\"],\n          \"en-US\": G[\"en-US\"],\n          \"et-EE\": G[\"et-EE\"],\n          \"fi-FI\": G[\"fi-FI\"],\n          \"fr-CA\": G[\"fr-CA\"],\n          \"fr-FR\": G[\"fr-FR\"],\n          \"gl-ES\": G[\"gl-ES\"],\n          \"de-DE\": G[\"de-DE\"],\n          \"el-GR\": G[\"el-GR\"],\n          \"hr-HR\": G[\"hr-HR\"],\n          \"he-IL\": G[\"he-IL\"],\n          \"hu-HU\": G[\"hu-HU\"],\n          \"id-ID\": G[\"id-ID\"],\n          \"it-IT\": G[\"it-IT\"],\n          \"kk-KZ\": G[\"kk-KZ\"],\n          \"lv-LV\": G[\"lv-LV\"],\n          \"lt-LT\": G[\"lt-LT\"],\n          \"ms-MY\": G[\"ms-MY\"],\n          \"no-NO\": G[\"no-NO\"],\n          \"nb-NO\": G[\"nb-NO\"],\n          \"pl-PL\": G[\"pl-PL\"],\n          \"pt-BR\": G[\"pt-BR\"],\n          \"pt-PT\": G[\"pt-PT\"],\n          \"ro-RO\": G[\"ro-RO\"],\n          \"ru-RU\": G[\"ru-RU\"],\n          \"ru-Latn-RU\": G[\"ru-Latn-RU\"],\n          \"ru-Cyrl-RU\": G[\"ru-Cyrl-RU\"],\n          \"sr-RS\": G[\"sr-RS\"],\n          \"sk-SK\": G[\"sk-SK\"],\n          \"sl-SI\": G[\"sl-SI\"],\n          \"es-ES\": G[\"es-ES\"],\n          \"es-419\": G[\"es-419\"],\n          \"sv-SE\": G[\"sv-SE\"],\n          \"th-TH\": G[\"th-TH\"],\n          \"tr-TR\": G[\"tr-TR\"],\n          \"uk-UA\": G[\"uk-UA\"],\n          \"vi-VN\": G[\"vi-VN\"],\n          defaultValue: G.defaultValue\n        },\n        z = {\n          ar: G.ar,\n          \"ca-ES\": G[\"ca-ES\"],\n          \"cs-CZ\": G[\"cs-CZ\"],\n          \"da-DK\": G[\"da-DK\"],\n          \"de-DE\": G[\"de-DE\"],\n          \"el-GR\": G[\"el-GR\"],\n          \"en-GB\": G[\"en-GB\"],\n          \"en-US\": G[\"en-US\"],\n          \"es-ES\": G[\"es-ES\"],\n          \"et-EE\": G[\"et-EE\"],\n          \"fi-FI\": G[\"fi-FI\"],\n          \"fr-FR\": G[\"fr-FR\"],\n          \"he-IL\": G[\"he-IL\"],\n          \"hu-HU\": G[\"hu-HU\"],\n          \"id-ID\": G[\"id-ID\"],\n          \"it-IT\": G[\"it-IT\"],\n          \"lt-LT\": G[\"lt-LT\"],\n          \"lv-LV\": G[\"lv-LV\"],\n          \"nb-NO\": G[\"nb-NO\"],\n          \"nl-NL\": G[\"nl-NL\"],\n          \"pl-PL\": G[\"pl-PL\"],\n          \"pt-PT\": G[\"pt-PT\"],\n          \"ro-RO\": G[\"ro-RO\"],\n          \"ru-RU\": G[\"ru-RU\"],\n          \"sk-SK\": G[\"sk-SK\"],\n          \"sv-SE\": G[\"sv-SE\"],\n          \"th-TH\": G[\"th-TH\"],\n          \"tr-TR\": G[\"tr-TR\"],\n          \"zh-TW\": G[\"zh-TW\"],\n          defaultValue: G.defaultValue\n        };\n      function H(e) {\n        if (!M()(e) && !D()(e)) throw new TypeError(\"Unsupported key type\", e);\n        return e;\n      }\n      function K(e) {\n        var t = parseFloat(e);\n        if (!isFinite(t)) throw new TypeError(\"a number is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t;\n      }\n      function Q(e, t) {\n        return function (n) {\n          return I(n, e, \"Supported \" + t + \" is expected (one of: \" + e + \"), but \" + n + \" [\" + typeof n + \"] was given.\");\n        };\n      }\n      var Z = [\"StandardHouseholdCountrySpecific\", \"IEC62196Type2CableAttached\", \"IEC60309AC1PhaseBlue\", \"IEC60309AC3PhaseRed\", \"IEC62196Type2Outlet\", \"IEC62196Type1CCS\", \"IEC62196Type2CCS\", \"IEC60309DCWhite\", \"IEC62196Type1\", \"IEC62196Type3\", \"GBT20234Part2\", \"GBT20234Part3\", \"Chademo\", \"Tesla\"],\n        $ = [\"Small_Paddle_Inductive\", \"Large_Paddle_Inductive\", \"IEC_60309_1_Phase\", \"IEC_60309_3_Phase\", \"IEC_62196_Type_1_Outlet\", \"IEC_62196_Type_2_Outlet\", \"IEC_62196_Type_3_Outlet\", \"IEC_62196_Type_1_Connector_Cable_Attached\", \"IEC_62196_Type_2_Connector_Cable_Attached\", \"IEC_62196_Type_3_Connector_Cable_Attached\", \"Combo_to_IEC_62196_Type_1_Base\", \"Combo_to_IEC_62196_Type_2_Base\", \"Type_E_French_Standard_CEE_7_5\", \"Type_F_Schuko_CEE_7_4\", \"Type_G_British_Standard_BS_1363\", \"Type_J_Swiss_Standard_SEV_1011\", \"China_GB_Part_2\", \"China_GB_Part_3\", \"IEC_309_DC_Plug\", \"AVCON_Connector\", \"Tesla_Connector\", \"NEMA_5_20\", \"CHAdeMO\", \"SAE_J1772\", \"TEPCO\", \"Better_Place_Socket\", \"Marechal_Socket\", \"Standard_Household_Country_Specific\"],\n        X = [\"Battery_Exchange\", \"Charge_100_to_120V_1_Phase_at_8A\", \"Charge_100_to_120V_1_Phase_at_10A\", \"Charge_100_to_120V_1_Phase_at_12A\", \"Charge_100_to_120V_1_Phase_at_13A\", \"Charge_100_to_120V_1_Phase_at_16A\", \"Charge_100_to_120V_1_Phase_at_32A\", \"Charge_200_to_240V_1_Phase_at_8A\", \"Charge_200_to_240V_1_Phase_at_10A\", \"Charge_200_to_240V_1_Phase_at_12A\", \"Charge_200_to_240V_1_Phase_at_16A\", \"Charge_200_to_240V_1_Phase_at_20A\", \"Charge_200_to_240V_1_Phase_at_32A\", \"Charge_200_to_240V_1_Phase_above_32A\", \"Charge_200_to_240V_3_Phase_at_16A\", \"Charge_200_to_240V_3_Phase_at_32A\", \"Charge_380_to_480V_3_Phase_at_16A\", \"Charge_380_to_480V_3_Phase_at_32A\", \"Charge_380_to_480V_3_Phase_at_63A\", \"Charge_50_to_500V_Direct_Current_at_62A_25kW\", \"Charge_50_to_500V_Direct_Current_at_125A_50kW\", \"Charge_200_to_450V_Direct_Current_at_200A_90kW\", \"Charge_200_to_480V_Direct_Current_at_255A_120kW\", \"Charge_Direct_Current_at_20kW\", \"Charge_Direct_Current_at_50kW\", \"Charge_Direct_Current_above_50kW\"],\n        Y = [\"NGT\", \"NGT-Latn\", \"ar\", \"bg-BG\", \"zh-TW\", \"cs-CZ\", \"da-DK\", \"nl-NL\", \"en-AU\", \"en-CA\", \"en-GB\", \"en-NZ\", \"en-US\", \"fi-FI\", \"fr-FR\", \"de-DE\", \"el-GR\", \"hu-HU\", \"id-ID\", \"it-IT\", \"ko-KR\", \"lt-LT\", \"ms-MY\", \"nb-NO\", \"pl-PL\", \"pt-BR\", \"pt-PT\", \"ru-RU\", \"ru-Latn-RU\", \"ru-Cyrl-RU\", \"sk-SK\", \"sl-SI\", \"es-ES\", \"es-MX\", \"sv-SE\", \"th-TH\", \"tr-TR\"],\n        J = [\"Petrol\", \"LPG\", \"Diesel\", \"Biodiesel\", \"DieselForCommercialVehicles\", \"E85\", \"LNG\", \"CNG\", \"Hydrogen\", \"AdBlue\"],\n        ee = \"\\n    {\\n        incidents {\\n            type,\\n            geometry {\\n                type,\\n                coordinates\\n            },\\n            properties {\\n                id,\\n                iconCategory,\\n                magnitudeOfDelay,\\n                events {\\n                    description,\\n                    code,\\n                    iconCategory\\n                },\\n                startTime,\\n                endTime,\\n                from,\\n                to,\\n                length,\\n                delay,\\n                roadNumbers,\\n                aci {\\n                    probabilityOfOccurrence,\\n                    numberOfReports,\\n                    lastReportTime\\n                }\\n            }\\n        }\\n    }\";\n      function te(e) {\n        return e.toString().match(/(\\d\\d\\d\\d)(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))/);\n      }\n      function ne(e, t, n) {\n        return isFinite(e) && e >= t && e <= n;\n      }\n      function re(e) {\n        return e.constructor.toString().indexOf(\"Array\") < 0;\n      }\n      function oe(e, t) {\n        if (e) throw new TypeError(t);\n      }\n      function ie(e) {\n        var t = parseFloat(e);\n        if (!ne(t, -180, 180)) throw new TypeError(\"an longitude <-180,180> is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t;\n      }\n      function ae(e) {\n        var t;\n        return oe((t = e, !(Object.prototype.hasOwnProperty.call(t, \"chargingConnections\") && Object.prototype.hasOwnProperty.call(t, \"chargingCurve\"))), \"a chargingMode is expected, but \" + e + \" [\" + typeof e + \"] given\"), se(e.chargingCurve), de(e.chargingConnections), e;\n      }\n      function se(e) {\n        if (e.length > 10) throw new Error(\"Given chargingCurve array contains more than 10 elements.\");\n        return e.forEach(function (e) {\n          ce(e);\n        }), e;\n      }\n      function ce(e) {\n        var t;\n        return oe((t = e, !(Object.prototype.hasOwnProperty.call(t, \"chargeInkWh\") && Object.prototype.hasOwnProperty.call(t, \"timeToChargeInSeconds\"))), \"a chargingCurveSupportPoint is expected, but \" + e + \" [\" + typeof e + \"] given\"), oe(!ne(e.chargeInkWh, 0, Number.MAX_VALUE), \"a chargeInkWh is expected, but \" + e.chargeInkWh + \" [\" + typeof e.chargeInkWh + \"] given\"), oe(!ne(e.timeToChargeInSeconds, 0, Number.MAX_VALUE), \"a timeToChargeInSeconds is expected, but \" + e.timeToChargeInSeconds + \" [\" + typeof e.timeToChargeInSeconds + \"] given\"), e;\n      }\n      function le(e) {\n        var t;\n        return oe((t = e, !(Object.prototype.hasOwnProperty.call(t, \"facilityType\") && Object.prototype.hasOwnProperty.call(t, \"plugType\"))), \"a chargingConnection is expected, but \" + e + \" [\" + typeof e + \"] given\"), ue(e.plugType), pe(e.facilityType), e;\n      }\n      function ue(e) {\n        return I(e, $, \"Plug type is expected to be one of supported values, but \" + e + \" [\" + typeof e + \"] given\");\n      }\n      function pe(e) {\n        return I(e, X, \"Facility type is expected to be one of supported values, but \" + e + \" [\" + typeof e + \"] given\");\n      }\n      function de(e) {\n        if (e.length > 20) throw new Error(\"Given chargingConnections array contains more than 20 elements.\");\n        return e.forEach(function (e) {\n          le(e);\n        }), e;\n      }\n      function fe(e) {\n        var t = parseFloat(e);\n        if (!ne(t, -90, 90)) throw new TypeError(\"an latitude <-90,90> is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t;\n      }\n      function he(e) {\n        var t, n;\n        if (Array.isArray(e)) {\n          if (2 !== e.length || 2 !== e.filter(isFinite).length) throw new TypeError(\"Invalid point array in route points\");\n          t = e[1], n = e[0];\n        } else {\n          if (!isFinite(e.lat) || !isFinite(e.lon) && !isFinite(e.lng)) throw new TypeError(\"Invalid point object in route points\");\n          t = e.lat, n = void 0 !== e.lon ? e.lon : e.lng;\n        }\n        if (!(\"number\" == typeof t || t instanceof Number) || !(\"number\" == typeof n || n instanceof Number)) throw new TypeError(\"Lat and lon components of point should be finite numbers\");\n        ie(n), fe(t);\n      }\n      function ye(e, t) {\n        for (var _n11 in e) if (Object.prototype.hasOwnProperty.call(e, _n11)) {\n          if (Object.prototype.hasOwnProperty.call(t, _n11) && Array.isArray(e[_n11].validators)) {\n            var _iterator = _createForOfIteratorHelper(e[_n11].validators),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _r4 = _step.value;\n                D()(_r4) && (t[_n11] = _r4(t[_n11]));\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n          if (!0 === e[_n11].required && !Object.prototype.hasOwnProperty.call(t, _n11)) throw new Error(\"Missing required \" + _n11);\n        }\n      }\n      function ve(e, t, n, r) {\n        if (F()(e) || F()(t)) throw new TypeError(\"Number in interval validator requires min and max value parameters\");\n        return function (o) {\n          var i = parseFloat(o);\n          if (!ne(i, e, t) || r && !B()(i)) throw new TypeError(n + \", but \" + o + \" [\" + typeof o + \"] given\");\n          return i;\n        };\n      }\n      function ge(e, t, n) {\n        return ve(e, t, n, !0);\n      }\n      function be(e, t, n) {\n        if (M()(e) && (e = e.split(\",\")), Array.isArray(e) && e.length > 0) {\n          for (var _r5 = 0; _r5 < e.length; _r5 += 1) I(e[_r5], n, t);\n          return e.join(\",\");\n        }\n        throw new TypeError(t);\n      }\n      function me(e, t) {\n        if (!te(e)) throw new TypeError('Invalid \"'.concat(t, '\" parameter value.\\n        Valid format: YYYY-MM-DDThh:mm:ss.SSSTZD'));\n        return e;\n      }\n      function we(e) {\n        if (M()(e) && /^[a-zA-Z0-9-]{1,100}$/.test(e)) return e;\n        throw new TypeError(\"a string matching regular expression ^[a-zA-Z0-9-]{1,100}$ is expected, but \" + e + \" [\" + typeof e + \"] given\");\n      }\n      function _e(e) {\n        return \"false\" !== e && Boolean(e);\n      }\n      function Ee(e) {\n        var t = parseFloat(e);\n        if (!B()(t) || t < 0) throw new TypeError(\"a natural integer (greater than or equal 0) is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t;\n      }\n      function Se(e) {\n        var t = parseFloat(e);\n        if (!B()(t) || t <= 0) throw new TypeError(\"a positive integer (greater than 0) is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t;\n      }\n      function Oe(e) {\n        return oe(!function (e) {\n          return Object.prototype.hasOwnProperty.call(e, \"minLon\") && Object.prototype.hasOwnProperty.call(e, \"maxLon\") && Object.prototype.hasOwnProperty.call(e, \"minLat\") && Object.prototype.hasOwnProperty.call(e, \"maxLat\");\n        }(e), \"a bounding box is expected, but \" + e + \" [\" + typeof e + \"] given\"), oe(!ne(e.minLat, -90, 90), \"a bounding box minimal latitude is expected \" + e.minLat + \" [\" + typeof e.minLat + \"] given\"), oe(!ne(e.maxLat, -90, 90), \"a bounding box maximal latitude is expected \" + e.maxLat + \" [\" + typeof e.maxLat + \"] given\"), oe(!ne(e.minLon, -270, 180), \"a bounding box minimal longitude is expected \" + e.minLon + \" [\" + typeof e.minLon + \"] given\"), oe(!ne(e.maxLon, -180, 270), \"a bounding box maximal longitude is expected \" + e.maxLon + \" [\" + typeof e.maxLon + \"] given\"), oe(function (e) {\n          return parseFloat(e.maxLat) <= parseFloat(e.minLat) || parseFloat(e.maxLon) <= parseFloat(e.minLon);\n        }(e), \"a bounding box expected but max <= min\"), e;\n      }\n      function Pe(e, t) {\n        return ve(e, t, \"a number in interval <\" + e + \", \" + t + \"> is expected\");\n      }\n      function Te(e, t) {\n        return ge(e, t, \"an integer in interval <\" + e + \", \" + t + \"> is expected\");\n      }\n      function xe(e) {\n        if (!M()(e)) throw new TypeError(\"a string is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return e;\n      }\n      function Ie(e) {\n        if (!M()(e) || 3 !== e.length && 2 !== e.length) throw new TypeError(\"a 2 or 3-characters long country name is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return e;\n      }\n      function je(e) {\n        var t = Object.keys(q);\n        if (!M()(e) || t.indexOf(e) < 0) throw new TypeError(\"One of pre-defined language codes was expected: \" + t + \", but \" + e + \" [\" + typeof e + \"] given\");\n        return e;\n      }\n      function Ae(e) {\n        oe(!M()(e) && re(e), \"An array of string country names or string (divided with commas) of country names (two or three-characters long) is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        var t = M()(e) ? e : e.join();\n        return oe(!t.match(/^([a-zA-z]{2,3},)*[a-zA-z]{2,3}$/), \"An array of string country names or string (divided with commas) of country names (two or three-characters long) is expected, but \" + e + \" [\" + typeof e + \"] given\"), t;\n      }\n      function ke(e) {\n        return be(e, \"List of pre-defined EV connector names was expected,but \" + e + \" [\" + typeof e + \"] given\", Z);\n      }\n      function Re(e) {\n        return be(e, \"List of pre-defined Fuel types names was expected,but \" + e + \" [\" + typeof e + \"] given\", J);\n      }\n      function Ce(e) {\n        var t = [\"Local\", \"International\", \"Alternative\"],\n          n = \"List of pre-defined mapcode types names was expected,but \" + e + \" [\" + typeof e + \"] given\";\n        if (M()(e) && (e = e.split(\",\")), Array.isArray(e) && e.length > 0) {\n          for (var _r6 = 0; _r6 < e.length; _r6 += 1) I(e[_r6], t, n);\n          return e.join(\",\");\n        }\n        throw new TypeError(n);\n      }\n      function Le(e, t) {\n        oe(!M()(t) && re(t), \"An array of string country names or string (divided with commas) of country names (three-characters long) is expected, but \" + t + \" [\" + typeof t + \"] given\");\n        var n = M()(t) ? t : t.join();\n        return e && \"\" === n || oe(!n.match(/^([a-zA-z]{3},)*[a-zA-z]{3}$/), \"An array of string country names or string (divided with commas) of country names (three-characters long) is expected, but \" + t + \" [\" + typeof t + \"] given\"), t;\n      }\n      function De(e) {\n        return function (e) {\n          if (!M()(e) || !k.test(e)) throw new TypeError(\"A point is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        }(e), e;\n      }\n      function Ve(e) {\n        return ge(1, 4, \"Fuzziness level value (a positive integer lower than 5) is expected\")(e);\n      }\n      function Me(e) {\n        return ge(1, 100, \"Limit value (a positive integer lower than 100) is expected\")(e);\n      }\n      function Ue(e) {\n        return ge(0, 1900, \"Offset an integer value <0, 1900> is expected\")(e);\n      }\n      function Fe(e) {\n        var t = [\"Country\", \"CountrySubdivision\", \"CountrySecondarySubdivision\", \"CountryTertiarySubdivision\", \"Municipality\", \"MunicipalitySubdivision\", \"Neighbourhood\", \"PostalCodeArea\"];\n        var _iterator2 = _createForOfIteratorHelper(e.split(\",\")),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _n12 = _step2.value;\n            if (-1 === t.indexOf(_n12)) throw new TypeError(\"Entity type (\".concat(t, \") is expected, but \").concat(e, \" [\").concat(typeof e, \"] given\"));\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return e;\n      }\n      function Ne(e, t) {\n        return function (n) {\n          var r = \"Supported \" + t + \" type is expected (array with one of: \" + e + \"), but \" + n + \" [\" + typeof n + \"] given\";\n          if (re(n)) throw new TypeError(\"an array is expected, but \" + n + \"  [\" + typeof n + \"] given\");\n          for (var _t9 = 0; _t9 < n.length; _t9 += 1) I(n[_t9], e, r);\n          return n;\n        };\n      }\n      function Be(e) {\n        if (oe(re(e), \"An array of geometry objects is expected, but \" + e + \" [\" + typeof e + \"] given\"), !(e.length > 0)) throw new TypeError(\"An array of geometry objects is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        for (var _t10 = 0; _t10 < e.length; _t10 += 1) {\n          var _n13 = e[_t10];\n          oe(!(Object.prototype.hasOwnProperty.call(_n13, \"type\") && (Object.prototype.hasOwnProperty.call(_n13, \"vertices\") || Object.prototype.hasOwnProperty.call(_n13, \"position\") && Object.prototype.hasOwnProperty.call(_n13, \"radius\"))), \"An array of geometry objects is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        }\n        return e;\n      }\n      function Ge(e) {\n        if (isNaN(e) || !B()(e) || !(120 === e || e >= 5 && e <= 60)) throw new TypeError(\"Invalid `waitTimeSeconds` parameter value. Must be 120 or an integer between 5 and 60.\");\n        return e;\n      }\n      function We(e) {\n        return me(e, \"clientTime\");\n      }\n      var qe = [\"adpEndpoint\", \"autocompleteEndpoint\", \"batchRoutingEndpoint\", \"batchSearchEndpoint\", \"batchSyncRoutingEndpoint\", \"batchSyncSearchEndpoint\", \"calculateReachableRangeEndpoint\", \"captionV2Endpoint\", \"chargingAvailabilityEndpoint\", \"copyrightsV2Endpoint\", \"flowSegmentDataEndpoint\", \"geocodeEndpoint\", \"incidentDetailsV5Endpoint\", \"incidentRegionsEndpoint\", \"incidentViewportEndpoint\", \"longDistanceEVRoutingEndpoint\", \"matrixRoutingEndpoint\", \"matrixSyncRoutingEndpoint\", \"nearbySearchEndpoint\", \"placeByIdEndpoint\", \"poiCategoriesEndpoint\", \"reverseGeocodeEndpoint\", \"routingEndpoint\", \"searchEndpoint\", \"staticMapImageEndpoint\", \"structuredGeocodeEndpoint\"],\n        ze = [\"batchAdpQueryEndpoint\", \"batchChargingAvailabilityQueryEndpoint\", \"batchNearbySearchQueryEndpoint\", \"batchReachableRangeQueryEndpoint\", \"batchReverseGeocodeQueryEndpoint\", \"batchRoutingQueryEndpoint\", \"batchSearchQueryEndpoint\", \"batchStructuredGeocodeQueryEndpoint\"];\n      function He(e) {\n        try {\n          !function (e) {\n            if (\"object\" != typeof e || e.constructor !== Object) throw new TypeError(\"an object is expected, but \" + e + \"  [\" + typeof e + \"] given\");\n          }(e);\n          for (var _t11 in e) if (qe.includes(_t11)) Ke(e[_t11]);else {\n            if (!ze.includes(_t11)) throw new TypeError(\"Endpoint name is expected to be one of supported values, but \" + e + \"given\");\n            Qe(e[_t11]);\n          }\n        } catch (e) {\n          throw new TypeError(\"Invalid custom endpoints object. \".concat(e.message));\n        }\n        return e;\n      }\n      function Ke(e) {\n        if (!M()(e)) throw new TypeError(\"Invalid custom URL. A string URL is expected, \".concat(e, \" [\").concat(typeof e, \"] given\"));\n        if (new RegExp(/(https:\\/\\/|http:\\/\\/).*/).test(e)) throw new TypeError(\"Invalid custom URL. URL without protocol (http/https) is expected, \".concat(e, \" given\"));\n        if (!new RegExp(/^[0-9a-zA-Z-.]+(\\.tomtom\\.com)(\\/.*)?$/).test(e)) throw new TypeError(\"Invalid custom URL. URL in TomTom domain (*.tomtom.com) is expected, \".concat(e, \" given\"));\n        return e;\n      }\n      function Qe(e) {\n        if (!M()(e)) throw new TypeError(\"Invalid custom query. A string URL is expected, \".concat(e, \" [\").concat(typeof e, \"] given\"));\n        if (!new RegExp(/^\\//).test(e)) throw new TypeError(\"Invalid custom query. A string starting with / is expected, \".concat(e, \" given\"));\n        return e;\n      }\n      var Ze = n(19),\n        $e = n.n(Ze);\n      var Xe = /*#__PURE__*/function () {\n        function Xe() {\n          _classCallCheck(this, Xe);\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n          this.options = e;\n        }\n        _createClass(Xe, [{\n          key: \"convert\",\n          value: function convert(e) {\n            return this._isSinglePoint(e) ? this._convertPoint(e) : this._convertToArrayOfPoints(e);\n          }\n        }, {\n          key: \"_isSinglePoint\",\n          value: function _isSinglePoint(e) {\n            if (Array.isArray(e)) return 2 === e.length && \"object\" != typeof e[0];\n            if (M()(e)) {\n              if (e.split(\":\").length >= 2) return !1;\n            }\n            return !0;\n          }\n        }, {\n          key: \"_convertToArrayOfPoints\",\n          value: function _convertToArrayOfPoints(e) {\n            return M()(e) ? e.split(\":\").map(this._convertPoint.bind(this)) : e.map(this._convertPoint.bind(this));\n          }\n        }, {\n          key: \"_convertPoint\",\n          value: function _convertPoint(e) {\n            return $e()(e, \"lat\") && $e()(e, \"lon\") ? this._covertToDefaultFormat(e.lon, e.lat) : $e()(e, \"latitude\") && $e()(e, \"longitude\") ? this._covertToDefaultFormat(e.longitude, e.latitude) : $e()(e, \"x\") && $e()(e, \"y\") ? this._covertToDefaultFormat(e.x, e.y) : Array.isArray(e) && 2 === e.length ? this.options.isLatLon ? this._covertToDefaultFormat(e[1], e[0]) : this._covertToDefaultFormat(e[0], e[1]) : M()(e) ? this._convertStringPoint(e) : e;\n          }\n        }, {\n          key: \"_convertStringPoint\",\n          value: function _convertStringPoint(e) {\n            var t = e.split(\",\");\n            if (!/^-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?$/.test(e) || 2 !== t.length) throw new Error(\"The point is not valid: \" + e);\n            return this.options.isLatLon ? this._covertToDefaultFormat(t[1], t[0]) : this._covertToDefaultFormat(t[0], t[1]);\n          }\n        }, {\n          key: \"_covertToDefaultFormat\",\n          value: function _covertToDefaultFormat(e, t) {\n            if (!e && 0 !== e || !t && 0 !== t) throw new Error(\"Longitude and latitude must be provided.\");\n            return D()(this.options.customPointConverter) ? this.options.customPointConverter(e, t) : {\n              lng: parseFloat(e),\n              lat: parseFloat(t)\n            };\n          }\n        }]);\n        return Xe;\n      }();\n      var Ye = n(9),\n        Je = n.n(Ye);\n      var et = new Xe(),\n        tt = function tt(e) {\n          e && (e.boundingBox && (e.boundingBox.btmRightPoint = et.convert(e.boundingBox.btmRightPoint), e.boundingBox.topLeftPoint = et.convert(e.boundingBox.topLeftPoint)), e.viewport && (e.viewport.btmRightPoint = et.convert(e.viewport.btmRightPoint), e.viewport.topLeftPoint = et.convert(e.viewport.topLeftPoint)), e.position && (e.position = et.convert(e.position)), e.summary && e.summary.geoBias && (e.summary.geoBias = et.convert(e.summary.geoBias)));\n        },\n        nt = function nt(e) {\n          var t = {};\n          t.id = e.id, Je()(e) && Object.keys(e).forEach(function (n) {\n            (function (e, t, n) {\n              F()(n) || (e[t] = n);\n            })(t, n, e[n]);\n          });\n          var n = function (e, t) {\n            return {\n              type: \"Feature\",\n              geometry: {\n                type: t,\n                coordinates: []\n              },\n              properties: e\n            };\n          }(t, \"Point\");\n          return n.geometry.coordinates = [e.position.lng, e.position.lat], n;\n        },\n        rt = function rt(e) {\n          var t = {\n            type: \"FeatureCollection\",\n            features: []\n          };\n          for (var _n14 = 0; _n14 < e.results.length; _n14++) {\n            var _r7 = nt(e.results[_n14]);\n            t.features.push(_r7);\n          }\n          return t;\n        };\n      function ot(e) {\n        e && e.entryPoints && Array.isArray(e.entryPoints) && e.entryPoints.forEach(function (e) {\n          tt(e);\n        });\n      }\n      function it(e) {\n        return e ? (Array.isArray(e.results) ? e.results.forEach(function (e) {\n          Array.isArray(e) ? e.forEach(function (e) {\n            tt(e), ot(e);\n          }) : (tt(e), ot(e));\n        }) : (tt(e), ot(e)), Object.assign(e, {\n          toGeoJson: function toGeoJson() {\n            return rt(e);\n          }\n        })) : e;\n      }\n      function at(e) {\n        return Array.isArray(e.batchItems) ? (e.batchItems = e.batchItems.map(function (e) {\n          return e.response.error ? {\n            error: e.response.error\n          } : it(e.response);\n        }), e) : null;\n      }\n      var st = \"POST\",\n        ct = \"PATH\",\n        lt = \"QUERY\",\n        ut = \"OTHER\",\n        pt = \"HEADER\";\n      function dt(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function ft(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function ht(e, t) {\n        var n = e.data,\n          r = e.trackingId;\n        var o = \"string\" == typeof n ? {\n            data: n\n          } : function (e) {\n            for (var t = 1; t < arguments.length; t++) {\n              var n = null != arguments[t] ? arguments[t] : {};\n              t % 2 ? dt(Object(n), !0).forEach(function (t) {\n                ft(e, t, n[t]);\n              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : dt(Object(n)).forEach(function (t) {\n                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n              });\n            }\n            return e;\n          }({}, n),\n          i = t ? t(n) : o;\n        return i.getTrackingId = function () {\n          return r || null;\n        }, i;\n      }\n      var yt = n(65);\n      var vt = c()[\"endpoints.copyrightsV2\"],\n        gt = c()[\"endpoints.captionV2\"],\n        bt = c()[\"endpoints.batchSearch\"],\n        mt = c()[\"endpoints.batchSyncSearch\"],\n        wt = c()[\"endpoints.batchSearchQuery\"],\n        _t = c()[\"endpoints.geocode\"],\n        Et = c()[\"endpoints.reverseGeocode\"],\n        St = c()[\"endpoints.batchReverseGeocodeQuery\"],\n        Ot = c()[\"endpoints.structuredGeocode\"],\n        Pt = c()[\"endpoints.search\"],\n        Tt = c()[\"endpoints.batchStructuredGeocodeQuery\"],\n        xt = c()[\"endpoints.adp\"],\n        It = c()[\"endpoints.batchAdpQuery\"],\n        jt = c()[\"endpoints.nearbySearch\"],\n        At = c()[\"endpoints.batchNearbySearchQuery\"],\n        kt = c()[\"endpoints.autocomplete\"],\n        Rt = c()[\"endpoints.poiCategories\"],\n        Ct = c()[\"endpoints.chargingAvailability\"],\n        Lt = c()[\"endpoints.batchChargingAvailabilityQuery\"],\n        Dt = c()[\"endpoints.placeById\"],\n        Vt = c()[\"endpoints.routing\"],\n        Mt = c()[\"endpoints.calculateReachableRange\"],\n        Ut = c()[\"endpoints.batchRoutingQuery\"],\n        Ft = c()[\"endpoints.batchRouting\"],\n        Nt = c()[\"endpoints.batchSyncRouting\"],\n        Bt = c()[\"endpoints.matrixRouting\"],\n        Gt = c()[\"endpoints.matrixSyncRouting\"],\n        Wt = c()[\"endpoints.batchReachableRangeQuery\"],\n        qt = c()[\"endpoints.longDistanceEVRouting\"],\n        zt = c()[\"endpoints.incidentDetailsV5\"],\n        Ht = c()[\"endpoints.incidentViewport\"],\n        Kt = c()[\"endpoints.flowSegmentData\"],\n        Qt = c()[\"endpoints.incidentRegions\"],\n        Zt = c()[\"endpoints.trafficLayer\"],\n        $t = c()[\"endpoints.rasterTrafficFlowTilesLayer\"],\n        Xt = c()[\"endpoints.vectorTrafficFlowTilesLayer\"],\n        Yt = c()[\"endpoints.tileLayer\"],\n        Jt = c()[\"endpoints.staticImage\"],\n        en = c().origin;\n      var tn = /*#__PURE__*/function () {\n        function tn(e) {\n          _classCallCheck(this, tn);\n          void 0 !== (null == e ? void 0 : e.customEndpoints) && (this._customEndpoints = He(e.customEndpoints)), void 0 !== (null == e ? void 0 : e.customDomain) && (this._customDomain = Ke(e.customDomain), this._customDomain = this._customDomain.replace(new RegExp(/\\/$/), \"\"));\n        }\n        _createClass(tn, [{\n          key: \"resolve\",\n          value: function resolve(t) {\n            var n;\n            if (void 0 !== (null === (n = this._customEndpoints) || void 0 === n ? void 0 : n[t])) return this._customEndpoints[t];\n            var r = e[t];\n            return void 0 !== this._customDomain ? this._changeDomain(r, this._customDomain) : r;\n          }\n        }, {\n          key: \"_changeDomain\",\n          value: function _changeDomain(e, t) {\n            return e.replace(en, t);\n          }\n        }]);\n        return tn;\n      }();\n      var nn = /*#__PURE__*/function (_Error) {\n        _inherits(nn, _Error);\n        var _super = _createSuper(nn);\n        function nn(e) {\n          var _this;\n          _classCallCheck(this, nn);\n          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];\n          _this = _super.call.apply(_super, [this].concat(n)), Error.captureStackTrace && Error.captureStackTrace(_assertThisInitialized(_this), nn);\n          var o = \"\\n\";\n          e.forEach(function (e) {\n            o += e.message + \"\\n\";\n          }), _this.errors = e, _this.message = \"Validation errors occured: \" + o;\n          return _this;\n        }\n        return _createClass(nn);\n      }( /*#__PURE__*/_wrapNativeSuper(Error));\n      var rn = /^\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}$/;\n      var on = /*#__PURE__*/function () {\n        function on(e) {\n          _classCallCheck(this, on);\n          var t = e.validators,\n            n = e.converters,\n            r = e.required,\n            o = e.defaultValue,\n            i = e.deprecationDate;\n          Object.assign(this, {\n            validators: t,\n            converters: n,\n            required: r,\n            defaultValue: o,\n            deprecationDate: i\n          }), this._validateFields();\n        }\n        _createClass(on, [{\n          key: \"_isArrayOfFunctions\",\n          value: function _isArrayOfFunctions(e) {\n            if (!Array.isArray(e)) return !1;\n            for (var _t12 = 0; _t12 < e.length; _t12++) if (!D()(e[_t12])) return !1;\n            return !0;\n          }\n        }, {\n          key: \"_validateFields\",\n          value: function _validateFields() {\n            if (null === this.validators || this.validators && !this._isArrayOfFunctions(this.validators)) throw new Error(\"Validators are not an array of functions.\");\n            if (null === this.converters || this.converters && !this._isArrayOfFunctions(this.converters)) throw new Error(\"Converters are not an array of functions.\");\n            if (void 0 !== this.required && \"boolean\" != typeof this.required) throw new Error(\"Required must be a Boolean.\");\n            if (this.deprecationDate && (Number.isNaN(Date.parse(this.deprecationDate)) || !rn.test(this.deprecationDate))) throw new Error(\"deprecationDate must contain a valid date\");\n          }\n        }, {\n          key: \"getDefaultValue\",\n          value: function getDefaultValue() {\n            return D()(this.defaultValue) ? this.defaultValue() : this.defaultValue;\n          }\n        }, {\n          key: \"getConverters\",\n          value: function getConverters() {\n            return this.converters ? this.converters : [];\n          }\n        }, {\n          key: \"getValidators\",\n          value: function getValidators() {\n            return this.validators ? this.validators : [];\n          }\n        }, {\n          key: \"getDeprecationDate\",\n          value: function getDeprecationDate() {\n            return this.deprecationDate;\n          }\n        }, {\n          key: \"isRequired\",\n          value: function isRequired() {\n            return !0 === this.required;\n          }\n        }]);\n        return on;\n      }();\n      var an = new ( /*#__PURE__*/function () {\n        function _class() {\n          _classCallCheck(this, _class);\n          this.log = {};\n        }\n        _createClass(_class, [{\n          key: \"_isLogPrinted\",\n          value: function _isLogPrinted(e, t) {\n            var n = this.log[e];\n            return !!n && n[t];\n          }\n        }, {\n          key: \"_setLog\",\n          value: function _setLog(e, t) {\n            this.log[e] = this.log[e] || {}, this.log[e][t] = !0;\n          }\n        }, {\n          key: \"_displayWarning\",\n          value: function _displayWarning(e, t, n) {\n            var r = Date.now() > Date.parse(t),\n              o = \"default\" !== n ? \"(used in \".concat(n, \") \") : \"\";\n            r ? console.error(\"[DEPRECATION WARNING] The parameter '\".concat(e, \"' \").concat(o, \" deprecation period \") + \"has ended. It is recommended to stop using it as it may stop working. Please refer to https://developer.tomtom.com/maps-sdk-web-js/documentation for more information\") : console.warn(\"[DEPRECATION NOTICE] The parameter '\".concat(e, \"' \").concat(o, \"is deprecated. \") + \"By \".concat(t, \" we can not guarantee that it will continue to work. \") + \"Please refer to https://developer.tomtom.com/maps-sdk-web-js/documentation for more information\");\n          }\n        }, {\n          key: \"checkDeprecation\",\n          value: function checkDeprecation(e, t) {\n            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"default\";\n            F()(e) || F()(t) || this._isLogPrinted(n, e) || (this._displayWarning(e, t, n), this._setLog(n, e));\n          }\n        }]);\n        return _class;\n      }())();\n      function sn(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function cn(e) {\n        for (var t = 1; t < arguments.length; t++) {\n          var n = null != arguments[t] ? arguments[t] : {};\n          t % 2 ? sn(Object(n), !0).forEach(function (t) {\n            ln(e, t, n[t]);\n          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : sn(Object(n)).forEach(function (t) {\n            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n          });\n        }\n        return e;\n      }\n      function ln(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function un(e, t, n, r, o, i, a) {\n        try {\n          var s = e[i](a),\n            c = s.value;\n        } catch (e) {\n          return void n(e);\n        }\n        s.done ? t(c) : Promise.resolve(c).then(r, o);\n      }\n      function pn(e) {\n        return function () {\n          var t = this,\n            n = arguments;\n          return new Promise(function (r, o) {\n            var i = e.apply(t, n);\n            function a(e) {\n              un(i, r, o, a, s, \"next\", e);\n            }\n            function s(e) {\n              un(i, r, o, a, s, \"throw\", e);\n            }\n            a(void 0);\n          });\n        };\n      }\n      var dn = function dn(e, t, n, r) {\n          var o = [];\n          var _iterator3 = _createForOfIteratorHelper(t),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _i4 = _step3.value;\n              try {\n                _i4(e, n, r);\n              } catch (e) {\n                o.push(e);\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n          return o;\n        },\n        fn = function fn(e) {\n          var t = {};\n          for (var _i5 = 0, _Object$entries = Object.entries(e); _i5 < _Object$entries.length; _i5++) {\n            var _Object$entries$_i = _slicedToArray(_Object$entries[_i5], 2),\n              _n15 = _Object$entries$_i[0],\n              _r8 = _Object$entries$_i[1];\n            t[_n15] = new on(_r8);\n          }\n          return t;\n        },\n        hn = function hn(e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            n = arguments.length > 2 ? arguments[2] : void 0;\n          var r = fn(e);\n          var o = [];\n          for (var _i6 = 0, _Object$entries2 = Object.entries(r); _i6 < _Object$entries2.length; _i6++) {\n            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i6], 2),\n              _e9 = _Object$entries2$_i[0],\n              _i7 = _Object$entries2$_i[1];\n            var _r9 = t[_e9],\n              _a2 = \"__all\" === _e9;\n            if (F()(_r9) && _i7.isRequired()) o.push(new Error(\"\".concat(_e9, \" is a required field.\")));else if (!F()(_r9) || _a2) {\n              an.checkDeprecation(_e9, _i7.getDeprecationDate(), n);\n              var _a3 = dn(_r9, _i7.getValidators(), t, _e9);\n              o = [].concat(_toConsumableArray(o), _toConsumableArray(_a3));\n            }\n          }\n          return o;\n        },\n        yn = function yn(e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            n = arguments.length > 2 ? arguments[2] : void 0;\n          var r = fn(e),\n            o = {};\n          for (var _i8 = 0, _Object$entries3 = Object.entries(r); _i8 < _Object$entries3.length; _i8++) {\n            var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i8], 2),\n              _e10 = _Object$entries3$_i[0],\n              _i9 = _Object$entries3$_i[1];\n            var _r10 = _i9.getDefaultValue();\n            var _a4 = t[_e10];\n            if (F()(_a4) || \"\" === _a4) {\n              if (F()(_r10)) continue;\n              _a4 = _r10;\n            }\n            var _s3 = _i9.getConverters();\n            o[_e10] = _s3.reduce(function (e, t) {\n              return t(e, n);\n            }, _a4);\n          }\n          return o;\n        };\n      function vn(e, t, n, r) {\n        var o = {};\n        var i = [];\n        if (e.batchItems && t.batchItems && (o.batchItems = t.batchItems.map(function (t) {\n          var o = yn(e.batchItems, t, n);\n          return i = i.concat(hn(e.batchItems, o, r)), o;\n        }), t.batchMode && (o.batchMode = Q([\"sync\", \"async\", \"redirect\"], \"batchMode\")(t.batchMode)), t.key && (o.key = H(t.key)), o.trackingId = t.trackingId ? we(t.trackingId) : (0, yt.v4)(), t.waitTimeSeconds)) {\n          if (K(t.waitTimeSeconds), !(120 === t.waitTimeSeconds || t.waitTimeSeconds >= 5 && t.waitTimeSeconds <= 60)) throw new Error(\"Invalid `waitTimeSeconds` parameter value. Must be 120 or an integer between 5 and 60.\");\n          o.waitTimeSeconds = t.waitTimeSeconds;\n        }\n        return {\n          batchProperties: o,\n          batchErrors: i\n        };\n      }\n      function gn(e) {\n        return bn.apply(this, arguments);\n      }\n      function bn() {\n        return bn = pn( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n          var t,\n            n,\n            r,\n            o,\n            i,\n            a,\n            s,\n            _vn,\n            _o4,\n            _i10,\n            _args = arguments;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                t = _args.length > 1 && void 0 !== _args[1] ? _args[1] : {}, n = _args.length > 2 ? _args[2] : void 0, r = _args.length > 3 ? _args[3] : void 0, o = _args.length > 4 ? _args[4] : void 0, i = _args.length > 5 ? _args[5] : void 0, a = yn(e, t, n), s = hn(e, a, r);\n                if (e.batchItems && t.batchItems) {\n                  _vn = vn(e, t, n, r), _o4 = _vn.batchProperties, _i10 = _vn.batchErrors;\n                  a = cn(cn({}, a), _o4), s = s.concat(_i10);\n                }\n                if (!s.length) {\n                  _context.next = 4;\n                  break;\n                }\n                throw new nn(s);\n              case 4:\n                return _context.abrupt(\"return\", o(a, i));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })), bn.apply(this, arguments);\n      }\n      function mn(e, t, n, r, o) {\n        var i = {\n          batchItems: e\n        };\n        return function () {\n          var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            c = r,\n            l = a,\n            u = e;\n          return a.batchItems && D()(o) && (l = {\n            trackingId: a.trackingId,\n            batchMode: a.batchMode,\n            waitTimeSeconds: a.waitTimeSeconds,\n            batchItems: a.batchItems,\n            key: a.key\n          }, c = o, u = i), gn(u, l, t, n, c, s.abortSignal);\n        };\n      }\n      var wn = n(80),\n        _n = n.n(wn);\n      function En(e, t) {\n        return e.replace(/\\{ *([\\w_]+) *\\}/g, function (e, n) {\n          var r = t[n];\n          return _n()(r) ? \"{\" + n + \"}\" : (D()(r) && (r = r(n)), \"query\" === n ? encodeURIComponent(r) : r);\n        });\n      }\n      var Sn = window.fetch;\n      function On(e, t, n, r, o, i, a) {\n        try {\n          var s = e[i](a),\n            c = s.value;\n        } catch (e) {\n          return void n(e);\n        }\n        s.done ? t(c) : Promise.resolve(c).then(r, o);\n      }\n      function Pn(e) {\n        return function () {\n          var t = this,\n            n = arguments;\n          return new Promise(function (r, o) {\n            var i = e.apply(t, n);\n            function a(e) {\n              On(i, r, o, a, s, \"next\", e);\n            }\n            function s(e) {\n              On(i, r, o, a, s, \"throw\", e);\n            }\n            a(void 0);\n          });\n        };\n      }\n      function Tn(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function xn(e) {\n        for (var t = 1; t < arguments.length; t++) {\n          var n = null != arguments[t] ? arguments[t] : {};\n          t % 2 ? Tn(Object(n), !0).forEach(function (t) {\n            In(e, t, n[t]);\n          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Tn(Object(n)).forEach(function (t) {\n            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n          });\n        }\n        return e;\n      }\n      function In(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function jn(e, t, n) {\n        e.pathParameters = e.pathParameters || {}, e.pathParameters.contentType = n, e.pathParameters.protocol = e.pathParameters.protocol || \"https\";\n        var r = En(e.url, e.pathParameters),\n          o = f();\n        o.Accept = \"application/json\", e.headers && e.headers.trackingId && (o[\"Tracking-ID\"] = e.headers.trackingId);\n        var i = xn({\n          method: \"GET\",\n          headers: o,\n          mode: \"cors\"\n        }, e.abortSignal && {\n          signal: e.abortSignal\n        });\n        return t && (i = xn(xn({}, i), {}, {\n          transformResponse: t\n        })), {\n          options: e,\n          url: r,\n          requestOptions: i\n        };\n      }\n      function An(e, t) {\n        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n          r = arguments.length > 3 ? arguments[3] : void 0;\n        return Sn(Ln(e, t), n).then(function () {\n          var t = Pn( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t) {\n            var n, o;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return r(t);\n                case 2:\n                  n = _context2.sent;\n                  if (t.ok) {\n                    _context2.next = 5;\n                    break;\n                  }\n                  return _context2.abrupt(\"return\", Promise.reject({\n                    response: t,\n                    data: n\n                  }));\n                case 5:\n                  if (!e._getOriginalResponse) {\n                    _context2.next = 7;\n                    break;\n                  }\n                  return _context2.abrupt(\"return\", t);\n                case 7:\n                  if (!(\"batch\" === e.requestType && 202 === t.status)) {\n                    _context2.next = 9;\n                    break;\n                  }\n                  return _context2.abrupt(\"return\", t.headers.location);\n                case 9:\n                  o = t.headers && (t.headers.get(\"tracking-id\") || t.headers.get(\"Tracking-ID\"));\n                  return _context2.abrupt(\"return\", xn({\n                    data: n\n                  }, o && {\n                    trackingId: o\n                  }));\n                case 11:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          return function (e) {\n            return t.apply(this, arguments);\n          };\n        }()).catch(function () {\n          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n          if (n.signal && !0 === n.signal.aborted) return Promise.reject(t);\n          var r = t.response,\n            o = t.data,\n            i = e._getOriginalResponse ? r || t : Cn(o, r && r.status) || t;\n          return Promise.reject(i);\n        });\n      }\n      function kn(e) {\n        return e.text();\n      }\n      function Rn(e) {\n        return e.json();\n      }\n      var Cn = function Cn(e, t) {\n        if (!e) return;\n        var n = e.error,\n          r = e.detailedError;\n        return n && r ? {\n          message: n.description,\n          data: r,\n          status: t\n        } : e;\n      };\n      function Ln(e, t) {\n        if (!e.queryParameters) return t;\n        return t + \"?\" + Object.keys(e.queryParameters).map(function (t) {\n          return function (e, t) {\n            var n = e.queryParameters[t];\n            var r = \"\";\n            r = Array.isArray(n) ? n.map(function (e) {\n              return Dn(t, e);\n            }).join(\"&\") : Dn(t, e.queryParameters[t]);\n            return r;\n          }(e, t);\n        }).join(\"&\");\n      }\n      function Dn(e, t) {\n        return encodeURIComponent(e) + \"=\" + encodeURIComponent(t);\n      }\n      function Vn(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function Mn(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function Un(e, t) {\n        var n = function (e) {\n          try {\n            return JSON.stringify(e);\n          } catch (e) {\n            return null;\n          }\n        }(e);\n        if (!n) throw new Error(\"Unsupported request body type: \" + e);\n        return function (e, t, n) {\n          e.headers || (e.headers = {}), e.headers[t] || e.headers[t.toLowerCase()] || (e.headers[t] = n);\n        }(t, \"Content-Type\", \"application/json\"), n;\n      }\n      var Fn = function Fn(e, t) {\n          var n = jn(e, t, \"json\");\n          return An(n.options, n.url, n.requestOptions, Rn);\n        },\n        Nn = function Nn(e) {\n          e.pathParameters = e.pathParameters || {}, e.pathParameters.contentType = \"json\", e.pathParameters.protocol = e.pathParameters.protocol || \"https\";\n          var t = En(e.url, e.pathParameters),\n            n = f();\n          n.Accept = \"application/json\", e.headers && e.headers.trackingId && (n[\"Tracking-ID\"] = e.headers.trackingId);\n          var r = function (e) {\n            for (var t = 1; t < arguments.length; t++) {\n              var n = null != arguments[t] ? arguments[t] : {};\n              t % 2 ? Vn(Object(n), !0).forEach(function (t) {\n                Mn(e, t, n[t]);\n              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Vn(Object(n)).forEach(function (t) {\n                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n              });\n            }\n            return e;\n          }({\n            method: \"POST\",\n            headers: n,\n            mode: \"cors\",\n            redirect: \"follow\"\n          }, e.abortSignal && {\n            signal: e.abortSignal\n          });\n          return function (e, t) {\n            var n = e.bodyParameters;\n            var r;\n            n && (Je()(n) ? r = Un(n, t) : M()(n) && (r = n), t.body = r);\n          }(e, r), An(e, t, r, Rn);\n        },\n        Bn = function Bn(e, t) {\n          var n = jn(e, t, \"text\");\n          return An(n.options, n.url, n.requestOptions, kn);\n        };\n      var Gn = !1;\n      var Wn = function Wn() {\n        return Gn ? \"http\" : \"https\";\n      };\n      var qn = function qn(e, t) {\n          e.protocol = e && e.protocol || Wn();\n          var n = e.pathParameters;\n          return n && \"text\" === n.contentType ? Bn(e, t) : Fn(e, t);\n        },\n        zn = function zn(e) {\n          return e.protocol = e.protocol || Wn(), Nn(e);\n        };\n      function Hn(e) {\n        var t = e[1];\n        return !t.application || t.application === lt;\n      }\n      function Kn(e) {\n        return e[1].application === ct;\n      }\n      function Qn(e) {\n        return e[1].application === st;\n      }\n      function Zn(e) {\n        return e[1].application === ut;\n      }\n      function $n(e) {\n        return e[1].application === pt;\n      }\n      function Xn(e) {\n        return {\n          name: e[0],\n          fieldName: e[2]\n        };\n      }\n      function Yn(e, t) {\n        var n = Object.keys(e).map((r = e, function (e) {\n          return [r[e] && r[e].name || e, r[e], e];\n        }));\n        var r;\n        return n = n.filter(t), n = n.map(Xn), n;\n      }\n      function Jn(e) {\n        return Yn(e, Hn);\n      }\n      function er(e) {\n        return Yn(e, Kn);\n      }\n      function tr(e) {\n        return Yn(e, Qn);\n      }\n      function nr(e) {\n        return Yn(e, Zn);\n      }\n      function rr(e) {\n        return Yn(e, $n);\n      }\n      function or(e, t, n) {\n        var r = {};\n        return t(e).forEach(function (t) {\n          if (t.fieldName in n) {\n            var _o5 = e[t.fieldName],\n              _i11 = n[t.fieldName];\n            _o5.cast ? _o5.cast(_i11, r) : r[t.name] = _i11;\n          }\n        }), r;\n      }\n      function ir(e, t) {\n        return {\n          pathParams: or(e, er, t),\n          queryParams: or(e, Jn, t),\n          postParams: or(e, tr, t),\n          otherParams: or(e, nr, t),\n          headerParams: or(e, rr, t)\n        };\n      }\n      var ar = n(81),\n        sr = n.n(ar);\n      var cr = \"contentType\";\n      function lr(e) {\n        var t = Object.assign({}, e);\n        return t[cr] = {\n          application: ct\n        }, t;\n      }\n      function ur(e) {\n        return e[cr] = e[cr] || \"json\", e;\n      }\n      var pr = function pr(e) {\n        return function (t, n, r) {\n          var _ir = ir(lr(t), ur(n)),\n            o = _ir.pathParams,\n            i = _ir.queryParams,\n            a = _ir.postParams,\n            s = _ir.headerParams,\n            c = {\n              headers: s,\n              url: \"{protocol}://\" + e,\n              pathParameters: o,\n              queryParameters: i,\n              abortSignal: r\n            };\n          return sr()(a) ? qn(c) : (c.bodyParameters = a, zn(c));\n        };\n      };\n      var dr = function dr(e, t) {\n        if (null == e) throw new TypeError(t);\n        return e;\n      };\n      function fr(e, t) {\n        return encodeURIComponent(e) + \"=\" + encodeURIComponent(t);\n      }\n      function hr(e, t) {\n        if (!t) return e;\n        return e + \"?\" + Object.keys(t).map(function (e) {\n          return function (e, t) {\n            var n = t[e];\n            var r = \"\";\n            return r = Array.isArray(n) ? n.map(function (t) {\n              return fr(e, t);\n            }).join(\"&\") : fr(e, t[e]), r;\n          }(e, t);\n        }).join(\"&\");\n      }\n      var yr = function yr(e, t, n) {\n        return hr(En(e, t), n);\n      };\n      function vr(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function gr(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function br(e) {\n        var t;\n        switch (e.batchMode) {\n          case \"async\":\n            t = e.endpoints.async;\n            break;\n          case \"sync\":\n            t = e.endpoints.sync;\n            break;\n          default:\n            t = e.endpoints.async, e.queryParams.redirectMode = \"manual\";\n        }\n        return \"sync\" !== e.batchMode && e.waitTimeSeconds ? e.queryParams.waitTimeSeconds = e.waitTimeSeconds : e.queryParams && e.queryParams.waitTimeSeconds && delete e.queryParams.waitTimeSeconds, zn(function (e) {\n          for (var t = 1; t < arguments.length; t++) {\n            var n = null != arguments[t] ? arguments[t] : {};\n            t % 2 ? vr(Object(n), !0).forEach(function (t) {\n              gr(e, t, n[t]);\n            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : vr(Object(n)).forEach(function (t) {\n              Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n            });\n          }\n          return e;\n        }({\n          url: \"{protocol}://\" + t,\n          queryParameters: e.queryParams,\n          bodyParameters: e.bodyParams,\n          headers: e.headers,\n          requestType: \"batch\"\n        }, e.abortSignal && {\n          abortSignal: e.abortSignal\n        })).then(function (t) {\n          return \"manual\" === e.queryParams.redirectMode ? qn({\n            url: \"{protocol}://\" + en + t\n          }) : t;\n        });\n      }\n      var mr = function mr(e, t) {\n          return function (n, r, o) {\n            var i = {},\n              a = {};\n            i.key = r.key;\n            var s = {};\n            r.trackingId && (s.trackingId = r.trackingId);\n            var c = dr(r.batchItems);\n            n = lr(n), a.batchItems = c.map(function (e) {\n              var _ir2 = ir(n, ur(e)),\n                r = _ir2.pathParams,\n                o = _ir2.queryParams,\n                i = _ir2.postParams,\n                a = {\n                  query: yr(t.single, r, o)\n                };\n              return sr()(i) || (a.post = i), a;\n            });\n            return br({\n              batchMode: r.batchMode || (a.batchItems.length <= e ? \"sync\" : \"redirect\"),\n              waitTimeSeconds: r.waitTimeSeconds,\n              queryParams: i,\n              bodyParams: a,\n              headers: s,\n              endpoints: {\n                sync: t.batchSync,\n                async: t.batch\n              },\n              abortSignal: o\n            });\n          };\n        },\n        wr = [\"origins\", \"destinations\"];\n      function _r(e) {\n        var t = {\n            origins: e.origins,\n            destinations: e.destinations\n          },\n          n = function (e) {\n            var t = Object.keys(e).filter(function (e) {\n              return -1 === wr.indexOf(e);\n            });\n            return t.length ? t.reduce(function (t, n) {\n              return t[n] = e[n], t;\n            }, {}) : null;\n          }(e);\n        return n && (t.options = {\n          post: n\n        }), t;\n      }\n      var Er = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        geometries: {\n          validators: [function (e) {\n            if (re(e)) throw new TypeError(\"an array is expected, but \" + e + \"  [\" + typeof e + \"] given\");\n            return e;\n          }],\n          required: !0\n        },\n        geometriesZoom: {\n          validators: [function (e) {\n            return ve(0, 22, \"a geometries zoom value <0, 22> is expected\")(e);\n          }]\n        }\n      };\n      function Sr(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"adpEndpoint\")),\n          o = mr(100, {\n            single: n.resolve(\"batchAdpQueryEndpoint\"),\n            batchSync: n.resolve(\"batchSyncSearchEndpoint\"),\n            batch: n.resolve(\"batchSearchEndpoint\")\n          });\n        return mn(Er, g, \"additionalData\", function (e, t) {\n          return r(Er, e, t).then(ht);\n        }, function (e, t) {\n          return o(Er, e, t).then(function (e) {\n            return ht(e, at);\n          });\n        })(e, t);\n      }\n      var Or = n(98),\n        Pr = n.n(Or);\n      function Tr(e, t) {\n        if (e) throw new TypeError(t);\n      }\n      function xr(e) {\n        var t = parseFloat(e);\n        if (!isFinite(t)) throw new TypeError(\"an number is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t - 180 * Math.ceil((t - 90) / 180);\n      }\n      function Ir(e) {\n        var t = parseFloat(e);\n        if (!isFinite(t)) throw new TypeError(\"an number is expected, but \" + e + \" [\" + typeof e + \"] given\");\n        return t - 360 * Math.ceil((t - 180) / 360);\n      }\n      function jr(e) {\n        if (Array.isArray(e) && 2 === e.length) return _toConsumableArray(e).reverse();\n        if (M()(e)) {\n          var _t13 = e.match(k);\n          return Tr(!_t13 || !_t13[1] || !_t13[2], \"A point is expected, but \" + e + \" [\" + typeof e + \"] given\"), [_t13[2], _t13[1]];\n        }\n        if (function (e) {\n          return D()(e.lat) && D()(e.lng);\n        }(e)) return [e.lat(), e.lng()];\n        if (r = e, Object.prototype.hasOwnProperty.call(r, \"lat\") && (Object.prototype.hasOwnProperty.call(r, \"lon\") || Object.prototype.hasOwnProperty.call(r, \"lng\"))) return [e.lat, (t = e.lon, n = e.lng, void 0 === t ? n : t)];\n        var t, n, r, o;\n        if (o = e, Object.prototype.hasOwnProperty.call(o, \"x\") && Object.prototype.hasOwnProperty.call(o, \"y\")) return [e.y, e.x];\n        if (function (e) {\n          return Object.prototype.hasOwnProperty.call(e, \"latitude\") && Object.prototype.hasOwnProperty.call(e, \"longitude\");\n        }(e)) return [e.latitude, e.longitude];\n        throw new TypeError(\"A point is expected, but \" + e + \" [\" + typeof e + \"] given\");\n      }\n      function Ar(e) {\n        var t, n;\n        if (function (e) {\n          return Object.prototype.hasOwnProperty.call(e, \"minLon\") && Object.prototype.hasOwnProperty.call(e, \"minLat\") && Object.prototype.hasOwnProperty.call(e, \"maxLon\") && Object.prototype.hasOwnProperty.call(e, \"maxLat\");\n        }(e)) return e;\n        if (function (e) {\n          return Object.prototype.hasOwnProperty.call(e, \"left\") && Object.prototype.hasOwnProperty.call(e, \"bottom\") && Object.prototype.hasOwnProperty.call(e, \"right\") && Object.prototype.hasOwnProperty.call(e, \"top\");\n        }(e)) return {\n          minLon: e.left,\n          minLat: e.bottom,\n          maxLon: e.right,\n          maxLat: e.top\n        };\n        if (function (e) {\n          return D()(e.getWest) && D()(e.getEast) && D()(e.getSouth) && D()(e.getNorth);\n        }(e)) return {\n          minLon: e.getWest(),\n          minLat: e.getSouth(),\n          maxLon: e.getEast(),\n          maxLat: e.getNorth()\n        };\n        if (D()(e.getNorthEast) && D()(e.getSouthWest)) return n = jr(e.getNorthEast()), t = jr(e.getSouthWest()), {\n          minLon: t[1],\n          minLat: t[0],\n          maxLon: n[1],\n          maxLat: n[0]\n        };\n        if (Array.isArray(e) && 4 === e.length) return {\n          minLon: e[0],\n          minLat: e[1],\n          maxLon: e[2],\n          maxLat: e[3]\n        };\n        if (Array.isArray(e) && 2 === e.length) return t = jr(e[0]), n = jr(e[1]), {\n          minLon: t[1],\n          minLat: t[0],\n          maxLon: n[1],\n          maxLat: n[0]\n        };\n        if (M()(e) && 4 === (e = e.trim().split(/\\s*,\\s*/)).length) return {\n          minLon: parseFloat(e[0]),\n          minLat: parseFloat(e[1]),\n          maxLon: parseFloat(e[2]),\n          maxLat: parseFloat(e[3])\n        };\n        throw new TypeError(\"Unable to cast \" + e + \" [\" + typeof e + \"] to bounding box\");\n      }\n      function kr(e, t) {\n        if (F()(e) || \"\" === e) return \"\";\n        if (t[e]) return e;\n        e = e.toLowerCase();\n        for (var _n16 in t) if (Object.prototype.hasOwnProperty.call(t, _n16) && \"defaultValue\" !== _n16 && Object.prototype.hasOwnProperty.call(t[_n16].synonyms, e)) return _n16;\n        return console.warn(\"Value provided is invalid (\" + e + \"). Default value (\" + t.defaultValue.value + \") will be used instead.\"), t.defaultValue.value;\n      }\n      function Rr(e) {\n        var t = jr(e);\n        return xr(t[0]) + \",\" + Ir(t[1]);\n      }\n      function Cr(e) {\n        return M()(e) && e.indexOf(\"circle\") > -1 ? function (e) {\n          var t = e.match(R);\n          Tr(!(t && t[1] && t[2] && t[3]), \"Unable to cast \" + e + \" [\" + typeof e + \"] to circle\");\n          var n = parseFloat(t[2]),\n            r = parseFloat(t[1]),\n            o = parseFloat(t[3]);\n          return Tr(!isFinite(n) || !isFinite(r), \"Unable to cast \" + e + \" [\" + typeof e + \"] to circle\"), \"circle(\" + n + \",\" + r + \",\" + o + \")\";\n        }(e) : Array.isArray(e) && 3 === e.length ? \"circle(\" + xr(e[1]) + \",\" + Ir(e[0]) + \",\" + e[2] + \")\" : Rr(e);\n      }\n      function Lr(e) {\n        var t = [];\n        for (var _n17 in e) Object.prototype.hasOwnProperty.call(e, _n17) && t.push(Rr(e[_n17]));\n        return t;\n      }\n      function Dr(e) {\n        if (!M()(e)) return e;\n        var t = e.split(\",\");\n        return {\n          latitude: t[0],\n          longitude: t[1]\n        };\n      }\n      function Vr(e) {\n        return function (e) {\n          var t = e.minLon,\n            n = e.maxLon,\n            r = e.minLat,\n            o = e.maxLat;\n          if (n - t > 360) n = 180, t = -180;else {\n            if (n > 270) {\n              var _e11 = Math.ceil(t / 360);\n              n -= 360 * _e11, t -= 360 * _e11;\n            }\n            if (t < -270) {\n              var _e12 = Math.ceil(-n / 360);\n              n += 360 * _e12, t += 360 * _e12;\n            }\n          }\n          return r = r < -90 ? -90 : r, o = o > 90 ? 90 : o, {\n            minLon: t,\n            minLat: r,\n            maxLon: n,\n            maxLat: o\n          };\n        }(Ar(e));\n      }\n      function Mr(e) {\n        return Rr(e);\n      }\n      function Ur(e) {\n        if (e && e instanceof Date) return e.toISOString();\n        if (!e || !M()(e)) throw new TypeError(\"Unable to cast \" + e + \" [\" + typeof e + \"] to datetime value.\");\n        return \"now\" !== e && (e = new Date(e).toISOString()), e;\n      }\n      function Fr(e) {\n        var t;\n        Tr(!e || !Array.isArray(e), \"Unable to cast \" + e + \" [\" + typeof e + \"] to geometry list (array)\");\n        for (var _n18 in e) Object.prototype.hasOwnProperty.call(e, _n18) && (t = e[_n18], \"POLYGON\" === t.type ? t.vertices = Lr(t.vertices) : \"CIRCLE\" === t.type && (t.position = Rr(t.position)));\n        return e;\n      }\n      function Nr(e) {\n        return kr(e, q);\n      }\n      function Br(e) {\n        if (!e) return [];\n        if (M()(e)) return (e = e.trim().replace(/\\s*[,;]\\s*/g, \",\")).split(/[,;]+/);\n        if (Array.isArray(e)) return e;\n        throw new TypeError(\"Unable to cast \" + e + \" [\" + typeof e + \"] to array of strings\");\n      }\n      function Gr(e) {\n        if (M()(e)) return e;\n        if (!Array.isArray(e)) throw new TypeError(\"An array is required\");\n        return e.join(\":\");\n      }\n      function Wr(e) {\n        if (Array.isArray(e)) return e.join();\n        throw new TypeError(\"An array is required\");\n      }\n      function qr(e) {\n        return Pr()(e);\n      }\n      var zr = {\n        key: {\n          validators: [H]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        maxDetourTime: {\n          validators: [Te(1, 3600)],\n          required: !0\n        },\n        spreadingMode: {\n          validators: [Q([\"auto\"], \"spreading mode\")]\n        },\n        route: {\n          required: !0,\n          converters: [function (e) {\n            return {\n              points: e.map(jr).map(function (e) {\n                var _e13 = _slicedToArray(e, 2),\n                  t = _e13[0],\n                  n = _e13[1];\n                return {\n                  lat: t,\n                  lon: n\n                };\n              })\n            };\n          }],\n          validators: [function (e) {\n            var t;\n            if (void 0 === e.points) throw new TypeError(\"Invalid structure of the route object\");\n            if (t = e.points, t && !(Array.isArray(t) && t.length > 2)) throw new TypeError(\"Provided route array \" + t + \" is not valid. It should be an array with at least 2 points.\");\n            return t.forEach(he), e;\n          }],\n          application: st\n        },\n        query: {\n          required: !0,\n          validators: [xe],\n          application: ct\n        },\n        limit: {\n          validators: [Te(1, 20)]\n        },\n        type: {\n          validators: [xe],\n          defaultValue: \"searchAlongRoute\",\n          application: ct\n        },\n        brandSet: {\n          validators: [xe]\n        },\n        categorySet: {\n          validators: [xe]\n        },\n        connectorSet: {\n          validators: [ke]\n        },\n        minPowerKW: {\n          validators: [K]\n        },\n        maxPowerKW: {\n          validators: [K]\n        },\n        openingHours: {\n          validators: [Q([\"nextSevenDays\"], \"openingHours parameter\")]\n        },\n        timeZone: {\n          validators: [Q([\"iana\"], \"timeZone parameter\")]\n        },\n        sortBy: {\n          validators: [Q([\"detourTime\", \"detourOffset\", \"detourDistance\"], \"sortBy\")]\n        },\n        detourOffset: {\n          validators: [_e]\n        },\n        view: {\n          validators: [xe]\n        }\n      };\n      function Hr(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"searchEndpoint\")),\n          o = mr(100, {\n            single: n.resolve(\"batchSearchQueryEndpoint\"),\n            batchSync: n.resolve(\"batchSyncSearchEndpoint\"),\n            batch: n.resolve(\"batchSearchEndpoint\")\n          });\n        return mn(zr, g, \"alongRouteSearch\", function (e, t) {\n          return r(zr, e, t).then(function (e) {\n            return ht(e, it);\n          });\n        }, function (e, t) {\n          return o(zr, e, t).then(function (e) {\n            return ht(e, it);\n          });\n        })(e, t);\n      }\n      var Kr = \"combustion\",\n        Qr = \"electric\",\n        Zr = \"any\";\n      function $r(e) {\n        if (isNaN(parseFloat(e)) || !isFinite(e)) throw new Error(\"A value parsable to float is expected, but \" + e + \" [\" + typeof e + \"] given\");\n      }\n      function Xr(e) {\n        var t = {};\n        e.forEach(function (e) {\n          var n = e.split(\",\");\n          if (2 !== n.length) throw new Error(\"Invalid number of parameters in the pair around \" + e);\n          if (0 === n[0].trim().length) throw new Error(\"Speed value must not be empty.\");\n          if (0 === n[1].trim().length) throw new Error(\"Consumption value must not be empty.\");\n          if ($r(n[0]), $r(n[1]), Object.prototype.hasOwnProperty.call(t, parseFloat(n[0]))) throw new Error(\"Duplicate speed: \" + n[0]);\n          t[parseFloat(n[0])] = parseFloat(n[1]);\n        }), Object.keys(t).length > 1 && function (e) {\n          var t = Object.keys(e).sort(function (e, t) {\n              return parseFloat(e) > parseFloat(t);\n            }),\n            n = t.length;\n          if (e[t[n - 2]] > e[t[n - 1]]) throw new Error(\"Consumption for two highest speeds should be increasing\");\n        }(t);\n      }\n      function Yr(e, t) {\n        if (e.vehicleEngineType && e.vehicleEngineType !== t && t !== Zr) throw new Error(\"Expecting vehicleEngineType set to \" + t);\n      }\n      function Jr(e, t, n) {\n        if (!e[t] || !e[n]) throw new Error(\"Missing dependant parameter. Expecting both defined: \" + t + \", \" + n);\n      }\n      function eo(e) {\n        if (\"bicycle\" === e.travelMode || \"pedestrian\" === e.travelMode) throw new Error(\"Consumption model parameters cannot be set if travelMode is set to bicycle or pedestrian\");\n      }\n      function to(e) {\n        if (!e.constantSpeedConsumptionInLitersPerHundredkm && !e.constantSpeedConsumptionInkWhPerHundredkm) throw new Error(\"Consumption model cannot be used without setting constant speed consumption parameter\");\n      }\n      function no(e) {\n        return function (t, n) {\n          if (null == t) return;\n          if (eo(n), Yr(n, e), !M()(t)) throw new TypeError('Expecting a String like \"15.2,12.2:8.0,9.0\"');\n          var r = t.split(\":\");\n          if (r.length < 1 || r.length > 25) throw new Error(\"Incorrect amount of speed-consumption pairs provided. Expecting 1-25, but got \" + t.length);\n          Xr(r);\n        };\n      }\n      function ro(e, t) {\n        return function (n, r) {\n          if (n && (eo(r), to(r), Yr(r, e), $r(n), n < 0)) throw new Error(t + \": Expecting positive value\");\n        };\n      }\n      function oo(e, t) {\n        return function (n, r) {\n          n && (eo(r), to(r), Yr(r, Zr), Jr(r, e, t), Jr(r, e, \"vehicleWeight\"), r.vehicleEngineType === Kr && Jr(r, e, \"fuelEnergyDensityInMJoulesPerLiter\"), function (e, t, n) {\n            if (e[t] * e[n] > 1) throw new Error(\"Product of \" + t + \" and \" + n + \" cannot exceed 1\");\n          }(r, e, t), $r(n));\n        };\n      }\n      function io(e, t) {\n        return function (n, r) {\n          n && (eo(r), to(r), Yr(r, Qr), Jr(r, e, t), $r(n));\n        };\n      }\n      function ao(e, t) {\n        var n, r;\n        if (\"electric\" === t.vehicleEngineType) {\n          if (n = t.currentChargeInkWh, r = t.energyBudgetInkWh, r > n) throw new Error(\"Energy budget may not be greater than current energy.\");\n        } else if (n = t.currentFuelInLiters, r = t.fuelBudgetInLiters, r > n) throw new Error(\"Fuel budget may not be greater than current fuel.\");\n        if (r < 0) throw new Error(\"Budget may not be negative.\");\n      }\n      function so(e, t, n) {\n        var r = (\"constantSpeedConsumptionInLitersPerHundredkm\" in t),\n          o = (\"constantSpeedConsumptionInkWhPerHundredkm\" in t),\n          i = \"electric\" === t.vehicleEngineType;\n        if (\"energyBudgetInkWh\" === n && e) {\n          if (!i) throw new Error('Engine type should be \"electric\" when energyBudgetInkWh is set');\n          if (!o) throw new Error(\"Missing constant speed consumption for electric engine.\");\n        } else if (\"fuelBudgetInLiters\" === n && e) {\n          if (i) throw new Error('Engine type should be \"combustion\" or undefined when fuelBudgetInLiters is set');\n          if (!r) throw new Error(\"Missing constant speed consumption for combustion engine.\");\n        }\n      }\n      function co(e, t) {\n        return function (n, r) {\n          if (n && Object.prototype.hasOwnProperty.call(r, t) && O(r[t])) throw new Error(e + \" parameter cannot be used in conjunction with \" + t);\n        };\n      }\n      function lo(e, t) {\n        return function (n, r) {\n          if (n && !Object.prototype.hasOwnProperty.call(r, t)) throw new Error(t + \" must be specified when using with \" + e);\n        };\n      }\n      function uo(e, t) {\n        var n = sr()(t.query),\n          r = sr()(t.brandSet),\n          o = sr()(t.categorySet);\n        if (n && r && o) throw new Error(\"Empty query parameter is only allowed when used with brandSet or categorySet filters\");\n      }\n      function po(e, t) {\n        var n = t.recuperationInkWhPerkmAltitudeLoss,\n          r = t.consumptionInkWhPerkmAltitudeGain;\n        if ($r(n), $r(r), r < n) throw new Error(\"consumptionInkWhPerkmAltitudeGain must be greater than recuperationInkWhPerkmAltitudeLoss\");\n        if (r > 500) throw new Error(\"recuperationInkWhPerkmAltitudeLoss and less than 500.0\");\n        if (n < 0) throw new Error(\"recuperationInkWhPerkmAltitudeLoss must be greater than 0.0\");\n      }\n      var fo = function fo() {\n        return {\n          __all: {\n            validators: [uo]\n          },\n          key: {\n            validators: [xe]\n          },\n          trackingId: {\n            validators: [we],\n            application: pt,\n            defaultValue: yt.v4\n          },\n          query: {\n            validators: [xe],\n            application: ct,\n            defaultValue: \"\"\n          },\n          typeahead: {\n            validators: [_e]\n          },\n          limit: {\n            validators: [Me]\n          },\n          offset: {\n            validators: [Ue],\n            name: \"ofs\"\n          },\n          language: {\n            validators: [je],\n            converters: [Nr]\n          },\n          countrySet: {\n            validators: [Ae]\n          },\n          radius: {\n            validators: [Ee]\n          },\n          center: {\n            converters: [Mr],\n            validators: [De],\n            cast: function cast(e, t) {\n              var n = e.split(\",\");\n              t.lat = n[0], t.lon = n[1];\n            }\n          },\n          type: {\n            validators: [xe],\n            defaultValue: \"search\",\n            application: ct\n          },\n          bestResult: {\n            validators: [_e],\n            cast: function cast(e, t) {\n              e && (t.limit = 1, t.ofs = 0);\n            }\n          },\n          protocol: {\n            validators: [Q([\"http\", \"https\"], \"protocol\")]\n          },\n          extendedPostalCodesFor: {\n            validators: [xe]\n          },\n          view: {\n            validators: [Q([\"IL\", \"MA\", \"IN\", \"PK\", \"Unified\", \"RU\", \"TR\", \"AR\", \"CN\"], \"view\")]\n          },\n          brandSet: {\n            validators: [xe]\n          },\n          categorySet: {\n            validators: [xe]\n          },\n          connectorSet: {\n            validators: [ke]\n          },\n          minPowerKW: {\n            validators: [K]\n          },\n          maxPowerKW: {\n            validators: [K]\n          },\n          openingHours: {\n            validators: [Q([\"nextSevenDays\"], \"openingHours parameter\")]\n          },\n          timeZone: {\n            validators: [Q([\"iana\"], \"timeZone parameter\")]\n          },\n          mapcodes: {\n            validators: [Ce]\n          },\n          fuelSet: {\n            validators: [Re]\n          },\n          relatedPois: {\n            validators: [Q([\"off\", \"child\", \"parent\", \"all\"], \"relatedPois\")]\n          }\n        };\n      };\n      var ho = function ho() {\n        return {\n          validators: [Oe],\n          converters: [Vr],\n          cast: function cast(e, t) {\n            t.topLeft = \"\".concat(e.maxLat, \",\").concat(e.minLon), t.btmRight = \"\".concat(e.minLat, \",\").concat(e.maxLon);\n          }\n        };\n      };\n      var yo = /*#__PURE__*/function () {\n        function yo(e, t) {\n          _classCallCheck(this, yo);\n          this.options = e, this.additionalOptions = t, this.defaultFields = A(fo()), this.fields = {};\n        }\n        _createClass(yo, [{\n          key: \"_getRestService\",\n          value: function _getRestService() {\n            var e = new tn(this.additionalOptions);\n            return {\n              search: pr(e.resolve(\"searchEndpoint\")),\n              batch: mr(100, {\n                single: e.resolve(\"batchSearchQueryEndpoint\"),\n                batchSync: e.resolve(\"batchSyncSearchEndpoint\"),\n                batch: e.resolve(\"batchSearchEndpoint\")\n              })\n            };\n          }\n        }, {\n          key: \"handleBatchServiceCall\",\n          value: function handleBatchServiceCall(e, t) {\n            return this._getRestService().batch(this.fields, e, t).then(function (e) {\n              return ht(e, at);\n            });\n          }\n        }, {\n          key: \"handleServiceCall\",\n          value: function handleServiceCall(e, t) {\n            return this._getRestService().search(this.fields, e, t).then(function (t) {\n              var n = t.data,\n                r = t.trackingId;\n              return ht({\n                data: e.bestResult ? n.results[0] : n,\n                trackingId: r\n              }, it);\n            });\n          }\n        }, {\n          key: \"construct\",\n          value: function construct(e) {\n            this.fields = C(this.fields, this.defaultFields);\n            return mn(this.fields, g, e || \"search\", this.handleServiceCall.bind(this), this.handleBatchServiceCall.bind(this))(this.options, this.additionalOptions);\n          }\n        }]);\n        return yo;\n      }();\n      var vo = /*#__PURE__*/function (_yo) {\n        _inherits(vo, _yo);\n        var _super2 = _createSuper(vo);\n        function vo(e, t) {\n          var _this2;\n          _classCallCheck(this, vo);\n          _this2 = _super2.call(this, e, t), _this2.fields.type = {\n            defaultValue: \"categorySearch\",\n            visible: !1\n          }, _this2.fields.boundingBox = ho();\n          return _this2;\n        }\n        return _createClass(vo);\n      }(yo);\n      function go(e, t) {\n        return new vo(e, t).construct(\"categorySearch\");\n      }\n      var bo = {\n        key: {\n          validators: [H]\n        },\n        chargingAvailability: {\n          validators: [xe],\n          required: !0\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        connectorSet: {\n          validators: [ke]\n        },\n        minPowerKW: {\n          validators: [K]\n        },\n        maxPowerKW: {\n          validators: [K]\n        }\n      };\n      function mo(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"chargingAvailabilityEndpoint\")),\n          o = mr(100, {\n            single: n.resolve(\"batchChargingAvailabilityQueryEndpoint\"),\n            batchSync: n.resolve(\"batchSyncSearchEndpoint\"),\n            batch: n.resolve(\"batchSearchEndpoint\")\n          });\n        return mn(bo, h, \"chargingAvailability\", function (e, t) {\n          return r(bo, e, t).then(ht);\n        }, function (e, t) {\n          return o(bo, e, t).then(function (e) {\n            return ht(e, at);\n          });\n        })(e, t);\n      }\n      var wo = /*#__PURE__*/function (_yo2) {\n        _inherits(wo, _yo2);\n        var _super3 = _createSuper(wo);\n        function wo(e, t) {\n          var _this3;\n          _classCallCheck(this, wo);\n          _this3 = _super3.call(this, e, t), _this3.fields.minFuzzyLevel = {\n            validators: [Ve],\n            defaultValue: 1\n          }, _this3.fields.maxFuzzyLevel = {\n            validators: [Ve],\n            defaultValue: 2\n          }, _this3.fields.idxSet = {\n            validators: [xe]\n          }, _this3.fields.entityTypeSet = {\n            converters: [qr, Wr],\n            validators: [Fe]\n          }, _this3.fields.sessionId = {\n            validators: [xe]\n          }, _this3.fields.clientTime = {\n            validators: [We]\n          }, _this3.fields.boundingBox = ho();\n          return _this3;\n        }\n        return _createClass(wo);\n      }(yo);\n      function _o(e, t) {\n        return new wo(e, t).construct(\"fuzzySearch\");\n      }\n      var Eo = /*#__PURE__*/function (_yo3) {\n        _inherits(Eo, _yo3);\n        var _super4 = _createSuper(Eo);\n        function Eo(e, t) {\n          var _this4;\n          _classCallCheck(this, Eo);\n          _this4 = _super4.call(this, e, t), _this4.fields.type = {\n            defaultValue: \"geometrySearch\",\n            visible: !1,\n            application: ct\n          }, _this4.fields.key = {\n            validators: [H]\n          }, _this4.fields.limit = {\n            validators: [Me]\n          }, _this4.fields.language = {\n            validators: [je]\n          }, _this4.fields.geometryList = {\n            validators: [Be],\n            converters: [Fr],\n            application: st\n          }, _this4.fields.idxSet = {\n            validators: [xe]\n          }, _this4.fields.protocol = {\n            validators: [Q([\"http\", \"https\"], \"protocol\")]\n          }, _this4.fields.extendedPostalCodesFor = {\n            validators: [xe]\n          }, _this4.fields.entityTypeSet = {\n            converters: [qr, Wr],\n            validators: [Fe]\n          }, _this4.fields.boundingBox = ho();\n          return _this4;\n        }\n        return _createClass(Eo);\n      }(yo);\n      function So(e, t) {\n        return new Eo(e, t).construct(\"geometrySearch\");\n      }\n      var Oo = /*#__PURE__*/function (_yo4) {\n        _inherits(Oo, _yo4);\n        var _super5 = _createSuper(Oo);\n        function Oo(e, t) {\n          var _this5;\n          _classCallCheck(this, Oo);\n          _this5 = _super5.call(this, e, t), _this5.fields.__all = {\n            validators: []\n          }, _this5.fields.type = {\n            defaultValue: \"nearbySearch\",\n            visible: !1\n          }, _this5.fields.query = {\n            visible: !1\n          }, _this5.fields.center = {\n            required: !0\n          }, _this5.fields.radius = {\n            required: !1,\n            validators: [Pe(1, 5e4)]\n          }, _this5.fields.typeahead = {\n            visible: !1\n          };\n          return _this5;\n        }\n        _createClass(Oo, [{\n          key: \"_getRestService\",\n          value: function _getRestService() {\n            var e = new tn(this.additionalOptions);\n            return {\n              search: pr(e.resolve(\"nearbySearchEndpoint\")),\n              batch: mr(100, {\n                single: e.resolve(\"batchNearbySearchQueryEndpoint\"),\n                batchSync: e.resolve(\"batchSyncSearchEndpoint\"),\n                batch: e.resolve(\"batchSearchEndpoint\")\n              })\n            };\n          }\n        }]);\n        return Oo;\n      }(yo);\n      function Po(e, t) {\n        return new Oo(e, t).construct(\"nearbySearch\");\n      }\n      var To = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        entityId: {\n          validators: [xe],\n          required: !0\n        },\n        language: {\n          validators: [je],\n          converters: [Nr]\n        },\n        relatedPois: {\n          validators: [Q([\"off\", \"child\", \"parent\", \"all\"], \"relatedPois\")]\n        },\n        mapcodes: {\n          validators: [Ce]\n        },\n        timeZone: {\n          validators: [Q([\"iana\"], \"timeZone parameter\")]\n        },\n        openingHours: {\n          validators: [Q([\"nextSevenDays\"], \"openingHours parameter\")]\n        },\n        view: {\n          validators: [Q([\"AR\", \"IL\", \"MA\", \"IN\", \"PK\", \"Unified\", \"RU\", \"TR\", \"CN\"], \"view\")]\n        }\n      };\n      function xo(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"placeByIdEndpoint\"));\n        return mn(To, g, \"placeById\", function (e, t) {\n          return r(To, e, t).then(function (e) {\n            return ht(e, it);\n          });\n        })(e, t);\n      }\n      var Io = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        language: {\n          validators: [je]\n        }\n      };\n      function jo(e, t) {\n        return mn(Io, g, \"poiCategories\", function (e, n) {\n          var r = new tn(t);\n          return pr(r.resolve(\"poiCategoriesEndpoint\"))(Io, e, n).then(ht);\n        })(e, t);\n      }\n      var Ao = /*#__PURE__*/function (_yo5) {\n        _inherits(Ao, _yo5);\n        var _super6 = _createSuper(Ao);\n        function Ao(e, t) {\n          var _this6;\n          _classCallCheck(this, Ao);\n          _this6 = _super6.call(this, e, t), _this6.fields.type = {\n            defaultValue: \"poiSearch\",\n            visible: !1\n          }, _this6.fields.boundingBox = ho();\n          return _this6;\n        }\n        return _createClass(Ao);\n      }(yo);\n      function ko(e, t) {\n        return new Ao(e, t).construct(\"poiSearch\");\n      }\n      var Ro = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        query: {\n          validators: [xe],\n          required: !0,\n          application: ct\n        },\n        language: {\n          validators: [je],\n          converters: [Nr],\n          required: !0\n        },\n        limit: {\n          validators: [Me]\n        },\n        countrySet: {\n          validators: [Ae]\n        },\n        radius: {\n          validators: [Ee]\n        },\n        resultSet: {\n          validators: [xe]\n        },\n        center: {\n          converters: [Mr],\n          validators: [De],\n          cast: function cast(e, t) {\n            var n = e.split(\",\");\n            t.lat = n[0], t.lon = n[1];\n          }\n        },\n        sessionId: {\n          validators: [xe]\n        },\n        clientTime: {\n          validators: [We]\n        }\n      };\n      function Co(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"autocompleteEndpoint\"));\n        return mn(Ro, g, \"autocomplete\", function (e, t) {\n          return r(Ro, e, t).then(function (e) {\n            return ht(e);\n          });\n        })(e, t);\n      }\n      var Lo = new Xe({\n          isLatLon: !0\n        }),\n        Do = function Do(e) {\n          e.position && (e.position = Lo.convert(e.position)), e.address && e.address.boundingBox && (e.address.boundingBox.northEast = Lo.convert(e.address.boundingBox.northEast), e.address.boundingBox.southWest = Lo.convert(e.address.boundingBox.southWest));\n        };\n      function Vo(e) {\n        return e.addresses.forEach(function (e) {\n          Array.isArray(e) && e.forEach(function (e) {\n            Do(e);\n          }), Do(e);\n        }), e;\n      }\n      function Mo(e) {\n        return e.batchItems instanceof Array ? (e.batchItems = e.batchItems.map(function (e) {\n          return e.response.error ? {\n            error: e.response.error\n          } : Vo(e.response);\n        }), e) : null;\n      }\n      function Uo(e, t) {\n        this.options = e, this.additionalOptions = t, this.fields = {};\n      }\n      function Fo(e) {\n        return new Uo(e).construct();\n      }\n      Uo.prototype.TYPE = {\n        reverseGeocode: \"reverseGeocode\",\n        crossStreetLookup: \"reverseGeocode/crossStreet\"\n      }, Uo.prototype.construct = function (e) {\n        return mn(C(this.fields, this.defaultFields), g, e || \"reverseGeocodeBase\", this.handleServiceCall.bind(this), this.handleBatchServiceCall.bind(this))(this.options, this.additionalOptions);\n      }, Uo.prototype.handleServiceCall = function (e, t) {\n        var n = new tn(this.additionalOptions);\n        return pr(n.resolve(\"reverseGeocodeEndpoint\"))(this.fields, e, t).then(function (e) {\n          return ht(e, Vo);\n        });\n      }, Uo.prototype.handleBatchServiceCall = function (e, t) {\n        var n = new tn(this.additionalOptions);\n        return mr(100, {\n          single: n.resolve(\"batchReverseGeocodeQueryEndpoint\"),\n          batch: n.resolve(\"batchSearchEndpoint\"),\n          batchSync: n.resolve(\"batchSyncSearchEndpoint\")\n        })(this.fields, e, t).then(function (e) {\n          return ht(e, Mo);\n        });\n      }, Fo.prototype.constructor = Uo;\n      var No = \"reverseGeocode\",\n        Bo = \"reverseGeocode/crossStreet\",\n        Go = {\n          key: {\n            validators: [xe]\n          },\n          trackingId: {\n            validators: [we],\n            application: pt,\n            defaultValue: yt.v4\n          },\n          language: {\n            validators: [je]\n          },\n          position: {\n            converters: [Mr],\n            validators: [De],\n            required: !0,\n            application: ct\n          },\n          heading: {\n            validators: [K]\n          },\n          radius: {\n            validators: [Ee]\n          },\n          protocol: {\n            validators: [Q([\"http\", \"https\"], \"protocol\")]\n          },\n          view: {\n            validators: [Q([\"AR\", \"IL\", \"MA\", \"IN\", \"PK\", \"Unified\", \"RU\", \"TR\", \"CN\"], \"view\")]\n          },\n          allowFreeformNewline: {\n            validators: [_e]\n          }\n        },\n        Wo = {\n          type: {\n            defaultValue: No,\n            visible: !1,\n            application: ct\n          },\n          entityType: {\n            converters: [qr, Wr],\n            validators: [Fe]\n          },\n          returnSpeedLimit: {\n            validators: [_e]\n          },\n          number: {\n            validators: [xe]\n          },\n          returnRoadUse: {\n            validators: [_e]\n          },\n          roadUse: {\n            converters: [function (e) {\n              if (M()(e)) return '[\"' + e.replace(/[\"']|^\\s+|\\s+$/g, \"\").split(/[\\s,]+/).join('\",\"') + '\"]';\n              if (Array.isArray(e)) {\n                for (var _t14 = 0; _t14 < e.length; _t14 += 1) e[_t14] = String(e[_t14]).replace(/[\"']|^\\s+|\\s+$/g, \"\");\n                return '[\"' + e.join('\",\"') + '\"]';\n              }\n              throw new TypeError(\"Unable to cast \" + e + \" [\" + typeof e + \"] to road use string\");\n            }],\n            validators: [function (e) {\n              var t = [\"LimitedAccess\", \"Arterial\", \"Terminal\", \"Ramp\", \"Rotary\", \"LocalStreet\"];\n              oe(!M()(e) || !e.match(/^\\[(\"\\w*\",?)+\\]$/), \"Road use is expected, but \" + e + \"  [\" + typeof e + \"] given\");\n              var n = e.replace(/[\"[\\]]/g, \"\").split(\",\");\n              for (var _r11 = 0; _r11 < n.length; _r11 += 1) oe(t.indexOf(n[_r11]) < 0, \"Road use (\" + t + \") is expected, but \" + e + \"  [\" + typeof e + \"] given\");\n              return e;\n            }]\n          },\n          streetNumber: {\n            validators: [xe]\n          },\n          returnMatchType: {\n            validators: [_e]\n          },\n          mapcodes: {\n            validators: [Ce]\n          },\n          dateTime: {\n            validators: [function (e) {\n              return me(e, \"dateTime\");\n            }]\n          }\n        },\n        qo = {\n          type: {\n            defaultValue: Bo,\n            visible: !1,\n            application: ct\n          },\n          limit: {\n            validators: [Me]\n          }\n        };\n      function zo(e) {\n        if (e === No) return Object.assign({}, Go, Wo);\n        if (e === Bo) return Object.assign({}, Go, qo);\n        throw new Error(\"Unsupported geocode type: \" + e);\n      }\n      function Ho(e, t) {\n        var n = Fo.prototype.constructor;\n        function r(e, t) {\n          n.call(this, e, t), this.fields = zo(No);\n        }\n        return r.prototype = new n(), r.prototype.constructor = r, new r(e, t).construct(\"reverseGeocode\");\n      }\n      function Ko(e) {\n        return e ? (Array.isArray(e.results) && e.results.forEach(function (e) {\n          Array.isArray(e) ? e.forEach(function (e) {\n            tt(e);\n          }) : tt(e);\n        }), tt(e), Object.assign(e, {\n          toGeoJson: function toGeoJson() {\n            return rt(e);\n          }\n        })) : e;\n      }\n      function Qo(e) {\n        return e.batchItems instanceof Array ? (e.batchItems = e.batchItems.map(function (e) {\n          return e.response.error ? {\n            error: e.response.error\n          } : Ko(e.response);\n        }), e) : null;\n      }\n      var Zo = function Zo() {\n        return {\n          extendedPostalCodesFor: {\n            validators: [xe]\n          },\n          type: {\n            defaultValue: \"geocode\",\n            application: ct\n          },\n          key: {\n            validators: [xe]\n          },\n          trackingId: {\n            validators: [we],\n            application: pt,\n            defaultValue: yt.v4\n          },\n          query: {\n            validators: [xe],\n            required: !0,\n            application: ct\n          },\n          typeahead: {\n            validators: [_e]\n          },\n          limit: {\n            validators: [Se]\n          },\n          view: {\n            validators: [Q([\"AR\", \"IL\", \"MA\", \"IN\", \"PK\", \"Unified\", \"RU\", \"TR\", \"CN\"], \"view\")]\n          },\n          offset: {\n            validators: [Ee],\n            name: \"ofs\"\n          },\n          language: {\n            validators: [je]\n          },\n          boundingBox: {\n            validators: [Oe],\n            converters: [Vr],\n            cast: function cast(e, t) {\n              t.topLeft = \"\".concat(e.maxLat, \",\").concat(e.minLon), t.btmRight = \"\".concat(e.minLat, \",\").concat(e.maxLon);\n            }\n          },\n          center: {\n            converters: [Mr],\n            validators: [De],\n            cast: function cast(e, t) {\n              var n = e.split(\",\");\n              t.lat = n[0], t.lon = n[1];\n            }\n          },\n          countrySet: {\n            validators: [Ae]\n          },\n          radius: {\n            validators: [Ee]\n          },\n          bestResult: {\n            validators: [_e],\n            cast: function cast(e, t) {\n              e && (t.limit = 1, t.ofs = 0);\n            }\n          },\n          protocol: {\n            validators: [Q([\"http\", \"https\"], \"protocol\")]\n          },\n          timeZone: {\n            validators: [Q([\"iana\"], \"timeZone parameter\")]\n          },\n          entityTypeSet: {\n            converters: [qr, Wr],\n            validators: [Fe]\n          }\n        };\n      };\n      var $o = Zo();\n      function Xo(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"geocodeEndpoint\")),\n          o = mr(100, {\n            single: n.resolve(\"batchSearchQueryEndpoint\"),\n            batchSync: n.resolve(\"batchSyncSearchEndpoint\"),\n            batch: n.resolve(\"batchSearchEndpoint\")\n          });\n        return mn($o, g, \"geocode\", function (e, t) {\n          return r($o, e, t).then(function (t) {\n            var n = t.data,\n              r = t.trackingId;\n            return ht({\n              data: e.bestResult ? n.results[0] : n,\n              trackingId: r\n            }, Ko);\n          });\n        }, function (e, t) {\n          return o($o, e, t).then(function (e) {\n            return ht(e, Qo);\n          });\n        })(e, t);\n      }\n      function Yo(e, t) {\n        var n = Fo.prototype.constructor;\n        function r(e, t) {\n          n.call(this, e, t), this.fields = zo(Bo);\n        }\n        return r.prototype = new n(), r.prototype.constructor = r, new r(e, t).construct(\"crossStreetLookup\");\n      }\n      var Jo = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        countryCode: {\n          validators: [Ie],\n          required: !0\n        },\n        limit: {\n          validators: [Me]\n        },\n        view: {\n          validators: [Q([\"AR\", \"IL\", \"MA\", \"IN\", \"PK\", \"Unified\", \"RU\", \"TR\", \"CN\"], \"view\")]\n        },\n        offset: {\n          validator: [Ee],\n          name: \"ofs\"\n        },\n        language: {\n          validators: [je]\n        },\n        streetNumber: {\n          validators: [xe]\n        },\n        streetName: {\n          validators: [xe]\n        },\n        crossStreet: {\n          validators: [xe]\n        },\n        municipality: {\n          validators: [xe]\n        },\n        municipalitySubdivision: {\n          validators: [xe]\n        },\n        countryTertiarySubdivision: {\n          validators: [xe]\n        },\n        countrySecondarySubdivision: {\n          validators: [xe]\n        },\n        countrySubdivision: {\n          validators: [xe]\n        },\n        postalCode: {\n          validators: [xe]\n        },\n        protocol: {\n          validators: [Q([\"http\", \"https\"], \"protocol\")]\n        },\n        bestResult: {\n          validators: [_e]\n        },\n        timeZone: {\n          validators: [Q([\"iana\"], \"timeZone parameter\")]\n        },\n        extendedPostalCodesFor: {\n          validators: [xe]\n        },\n        entityTypeSet: {\n          converters: [qr, Wr],\n          validators: [Fe]\n        }\n      };\n      function ei(e) {\n        var t = function (e) {\n          var t = Boolean(e.bestResult);\n          return delete e.bestResult, t;\n        }(e);\n        t && (e.limit = 1, e.offset = 0);\n      }\n      function ti(e, t) {\n        var n = new tn(t),\n          r = mr(100, {\n            single: n.resolve(\"batchStructuredGeocodeQueryEndpoint\"),\n            batch: n.resolve(\"batchSearchEndpoint\"),\n            batchSync: n.resolve(\"batchSyncSearchEndpoint\")\n          }),\n          o = pr(n.resolve(\"structuredGeocodeEndpoint\"));\n        return mn(Jo, g, \"structuredGeocode\", function (e, t) {\n          var n = Boolean(e.bestResult);\n          return ei(e), o(Jo, e, t).then(function (e) {\n            var t = e.data,\n              r = e.trackingId;\n            return ht({\n              data: n ? t.results[0] : t,\n              trackingId: r\n            }, Ko);\n          });\n        }, function (e, t) {\n          return e.batchItems.forEach(ei), r(Jo, e, t).then(function (e) {\n            return ht(e, Qo);\n          });\n        })(e, t);\n      }\n      var ni = {\n        key: {\n          validators: [H]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        routeType: {\n          validators: [Q([\"fastest\", \"shortest\", \"eco\", \"thrilling\"], \"route type\")]\n        },\n        traffic: {\n          validators: [_e]\n        },\n        avoid: {\n          validators: [Ne([\"tollRoads\", \"motorways\", \"ferries\", \"unpavedRoads\", \"carpools\", \"alreadyUsedRoads\"], \"avoid\")],\n          converters: [Br]\n        },\n        departAt: {\n          validators: [function (e) {\n            if (\"now\" === e || te(e) && Date.now() < Date.parse(e)) return e;\n            throw new TypeError(\"Supported departAt is now or rfc3339 format and no earlier than now(), but \" + e + \" [\" + typeof e + \"] given\");\n          }],\n          converters: [Ur]\n        },\n        arriveAt: {\n          validators: [function (e) {\n            if (te(e) && Date.now() < Date.parse(e)) return e;\n            throw new TypeError(\"Supported arriveAt is rfc3339 format, but and no earlier than now() \" + e + \" [\" + typeof e + \"] given\");\n          }],\n          converters: [Ur]\n        },\n        travelMode: {\n          validators: [Q([\"car\", \"truck\", \"taxi\", \"bus\", \"van\", \"motorcycle\", \"bicycle\", \"pedestrian\"], \"travel mode\")]\n        },\n        hilliness: {\n          validators: [Q([\"low\", \"normal\", \"high\"], \"hilliness\")]\n        },\n        windingness: {\n          validators: [Q([\"low\", \"normal\", \"high\"], \"windingness\")]\n        },\n        report: {\n          validators: [Q([\"effectiveSettings\"], \"report\")]\n        },\n        vehicleEngineType: {\n          validators: [Q([\"combustion\", \"electric\"], \"vehicle engine type\")]\n        },\n        vehicleMaxSpeed: {\n          validators: [Ee]\n        },\n        vehicleWeight: {\n          validators: [Ee, function (e, t) {\n            if (function (e) {\n              return e.accelerationEfficiency || e.decelerationEfficiency || e.uphillEfficiency || e.downhillEfficiency;\n            }(t) && void 0 === e) throw new Error(\"vehicleWeight parameter must be set if any efficiency parameters is present\");\n          }]\n        },\n        vehicleAxleWeight: {\n          validators: [Ee]\n        },\n        vehicleLength: {\n          validators: [Pe(0, Number.MAX_VALUE)]\n        },\n        vehicleWidth: {\n          validators: [Pe(0, Number.MAX_VALUE)]\n        },\n        vehicleHeight: {\n          validators: [Pe(0, Number.MAX_VALUE)]\n        },\n        vehicleCommercial: {\n          validators: [_e]\n        },\n        vehicleLoadType: {\n          validators: [Ne([\"USHazmatClass1\", \"USHazmatClass2\", \"USHazmatClass3\", \"USHazmatClass4\", \"USHazmatClass5\", \"USHazmatClass6\", \"USHazmatClass7\", \"USHazmatClass8\", \"USHazmatClass9\", \"otherHazmatExplosive\", \"otherHazmatGeneral\", \"otherHazmatHarmfulToWater\"], \"vehicle load type\")],\n          converters: [Br]\n        },\n        constantSpeedConsumptionInLitersPerHundredkm: {\n          validators: [no(\"combustion\")],\n          converters: [Gr]\n        },\n        currentFuelInLiters: {\n          validators: [ro(\"combustion\", \"currentFuelInLiters\")]\n        },\n        auxiliaryPowerInLitersPerHour: {\n          validators: [ro(\"combustion\", \"auxiliaryPowerInLitersPerHour\")]\n        },\n        fuelEnergyDensityInMJoulesPerLiter: {\n          validators: [function (e, t) {\n            e && (eo(t), $r(e), to(t), Yr(t, \"combustion\"), function (e, t) {\n              if (!(O(e.accelerationEfficiency) && O(e.decelerationEfficiency) && O(e.uphillEfficiency) && O(e.downhillEfficiency))) throw new Error(\"Efficiency parameters are required when using \" + t);\n            }(t, \"fuelEnergyDensityInMJoulesPerLiter\"));\n          }]\n        },\n        accelerationEfficiency: {\n          validators: [oo(\"accelerationEfficiency\", \"decelerationEfficiency\")]\n        },\n        decelerationEfficiency: {\n          validators: [oo(\"decelerationEfficiency\", \"accelerationEfficiency\")]\n        },\n        uphillEfficiency: {\n          validators: [oo(\"uphillEfficiency\", \"downhillEfficiency\")]\n        },\n        downhillEfficiency: {\n          validators: [oo(\"downhillEfficiency\", \"uphillEfficiency\")]\n        },\n        constantSpeedConsumptionInkWhPerHundredkm: {\n          validators: [no(\"electric\")],\n          converters: [Gr]\n        },\n        currentChargeInkWh: {\n          validators: [io(\"currentChargeInkWh\", \"maxChargeInkWh\")]\n        },\n        maxChargeInkWh: {\n          validators: [io(\"maxChargeInkWh\", \"currentChargeInkWh\")]\n        },\n        auxiliaryPowerInkW: {\n          validators: [ro(\"electric\", \"auxiliaryPowerInkW\")]\n        },\n        protocol: {\n          validators: [Q([\"http\", \"https\"], \"protocol\")]\n        },\n        avoidAreas: {\n          converters: [function (e) {\n            if (!Array.isArray(e)) throw new TypeError(\"An array is required\");\n            return {\n              rectangles: e.map(function (e) {\n                return {\n                  southWestCorner: Dr(Rr(e.southWestCorner)),\n                  northEastCorner: Dr(Rr(e.northEastCorner))\n                };\n              })\n            };\n          }],\n          application: st\n        },\n        avoidVignette: {\n          validators: [Le.bind(void 0, !1), co(\"avoidVignette\", \"allowVignette\")],\n          converters: [Br],\n          application: st\n        },\n        allowVignette: {\n          validators: [Le.bind(void 0, !0), co(\"allowVignette\", \"avoidVignette\")],\n          converters: [Br],\n          application: st\n        },\n        recuperationInkWhPerkmAltitudeLoss: {\n          validators: [lo(\"recuperationInkWhPerkmAltitudeLoss\", \"consumptionInkWhPerkmAltitudeGain\"), po]\n        },\n        consumptionInkWhPerkmAltitudeGain: {\n          validators: [lo(\"consumptionInkWhPerkmAltitudeGain\", \"recuperationInkWhPerkmAltitudeLoss\"), po]\n        },\n        vehicleAdrTunnelRestrictionCode: {\n          validators: [Q([\"B\", \"C\", \"D\", \"E\"], \"vehicleAdrTunnelRestrictionCode\")]\n        }\n      };\n      var ri = {\n        __all: {\n          validators: [function (e, t) {\n            var n = [\"fuelBudgetInLiters\" in t, \"energyBudgetInkWh\" in t, \"timeBudgetInSec\" in t, \"distanceBudgetInMeters\" in t].filter(function (e) {\n              return e;\n            }).length;\n            if (0 === n || n > 1) throw new Error(\"Exactly one of fuelBudgetInLiters, energyBudgetInkWh, timeBudgetInSec and distanceBudgetInMeters must be set.\");\n          }, function (e, t) {\n            var n = \"alreadyUsedRoads\";\n            if (\"avoid\" in t && t.avoid.indexOf(n) > -1) throw new Error(n + \" is not allowed value for avoid parameter in Calculate Reachable Route request.\");\n            if (\"travelMode\" in t && [\"bicycle\", \"pedestrian\"].indexOf(t.travelMode) > -1) throw new Error(t.travelMode + \" is not allowed value for travelMode parameter in Calculate Reachable Route request.\");\n            if (\"arriveAt\" in t) throw new Error(\"arriveAt parameter is not allowed in Calculate Reachable Route request.\");\n          }]\n        },\n        origin: {\n          validators: [De],\n          converters: [Mr],\n          application: ct\n        },\n        fuelBudgetInLiters: {\n          validators: [so, ao]\n        },\n        energyBudgetInkWh: {\n          validators: [so, ao]\n        },\n        distanceBudgetInMeters: {\n          validators: [Pe(0, Number.MAX_VALUE)]\n        },\n        timeBudgetInSec: {\n          validators: [Pe(0, Number.MAX_VALUE)]\n        }\n      };\n      ri = x(ri, ni);\n      var oi = new Xe();\n      var ii = function ii(e) {\n          return e.reachableRange && e.reachableRange.boundary && Array.isArray(e.reachableRange.boundary) && (e.reachableRange.boundary = oi.convert(e.reachableRange.boundary), e.reachableRange.center = oi.convert(e.reachableRange.center)), Object.assign(e, {\n            toGeoJson: function toGeoJson() {\n              return function (e) {\n                return {\n                  type: \"Feature\",\n                  geometry: {\n                    type: \"Polygon\",\n                    coordinates: [e.reachableRange.boundary.map(function (e) {\n                      return [e.lng, e.lat];\n                    })]\n                  }\n                };\n              }(e);\n            }\n          });\n        },\n        ai = function ai(e) {\n          return Array.isArray(e.batchItems) ? (e.batchItems = e.batchItems.map(function (e) {\n            return e.response.error ? {\n              error: e.response.error\n            } : ii(e.response);\n          }), e) : null;\n        };\n      var si = function (e) {\n        var t = A(ri);\n        return e instanceof Array && e.forEach(function (e) {\n          delete t[e];\n        }), t;\n      }();\n      function ci(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"calculateReachableRangeEndpoint\")),\n          o = mr(100, {\n            batchSync: n.resolve(\"batchSyncRoutingEndpoint\"),\n            batch: n.resolve(\"batchRoutingEndpoint\"),\n            single: n.resolve(\"batchReachableRangeQueryEndpoint\")\n          });\n        return mn(si, v, \"calculateReachableRange\", function (e, t) {\n          return r(si, e, t).then(function (e) {\n            return ht(e, ii);\n          });\n        }, function (e, t) {\n          return o(si, e, t).then(function (e) {\n            return ht(e, ai);\n          });\n        })(e, t);\n      }\n      function li(e) {\n        var t = [];\n        for (var _n19 = 0; _n19 < e.length; _n19 += 1) t.push([e[_n19].lng, e[_n19].lat]);\n        return t;\n      }\n      function ui(e) {\n        var t = e.legs.length > 1,\n          n = function (e) {\n            return {\n              type: \"Feature\",\n              properties: {\n                summary: e.summary,\n                sections: e.sections,\n                segmentSummary: []\n              }\n            };\n          }(e);\n        for (var _r12 = 0; _r12 < e.legs.length; _r12 += 1) n.properties.segmentSummary.push(e.legs[_r12].summary), e.legs[_r12].points && (n.geometry = n.geometry || {\n          coordinates: []\n        }, t ? (n.geometry.type = \"MultiLineString\", n.geometry.coordinates.push(li(e.legs[_r12].points))) : (n.geometry.type = \"LineString\", n.geometry.coordinates = li(e.legs[_r12].points)));\n        return e.guidance && (n.properties.guidance = e.guidance), n;\n      }\n      var pi = new Xe(),\n        di = function di(e, t, n) {\n          n && (e[t] = n);\n        };\n      function fi(e) {\n        var t = e.routes;\n        return t && t.length && t.forEach(function (e) {\n          e.legs.forEach(function (e) {\n            e.points = pi.convert(e.points);\n          });\n        }), Object.assign(e, {\n          toGeoJson: function toGeoJson() {\n            return function (e) {\n              var t = {\n                type: \"FeatureCollection\",\n                features: []\n              };\n              if (!e || !e.routes) return t;\n              for (var _n20 = 0; _n20 < e.routes.length; _n20 += 1) t.features.push(ui(e.routes[_n20]));\n              return t;\n            }(e);\n          },\n          toRouteSectionsCollection: function toRouteSectionsCollection() {\n            return function (e) {\n              var t = [];\n              return e && e.routes ? (e.routes.forEach(function (e) {\n                var n = [];\n                for (var _t15 = 0; _t15 < e.legs.length; _t15 += 1) n.push.apply(n, _toConsumableArray(e.legs[_t15].points));\n                var r = {\n                  type: \"FeatureCollection\",\n                  features: []\n                };\n                e.sections.forEach(function (e) {\n                  var t = n.slice(e.startPointIndex, e.endPointIndex + 1);\n                  t = t.map(function (e) {\n                    return [e.lng, e.lat];\n                  });\n                  var o = {\n                    type: \"Feature\",\n                    geometry: {\n                      type: \"LineString\"\n                    },\n                    properties: {}\n                  };\n                  o.geometry.coordinates = t, di(o.properties, \"sectionType\", e.sectionType), di(o.properties, \"travelMode\", e.travelMode), di(o.properties, \"countryCode\", e.countryCode), di(o.properties, \"simpleCategory\", e.simpleCategory), di(o.properties, \"effectiveSpeedInKmh\", e.effectiveSpeedInKmh), di(o.properties, \"delayInSeconds\", e.delayInSeconds), di(o.properties, \"magnitudeOfDelay\", e.delayInSeconds), di(o.properties, \"tec\", e.tec), r.features.push(o);\n                }), t.push(r);\n              }), t) : t;\n            }(e);\n          }\n        });\n      }\n      function hi(e) {\n        return Array.isArray(e.batchItems) ? (e.batchItems = e.batchItems.map(function (e) {\n          return e.response.error ? {\n            error: e.response.error\n          } : fi(e.response);\n        }), e) : null;\n      }\n      var yi = {\n        alternativeType: {\n          validators: [Q([\"anyRoute\", \"betterRoute\"], \"alternativeType\")]\n        },\n        locations: {\n          validators: [function (e) {\n            var t = k,\n              n = R;\n            e.constructor.toString().indexOf(\"Array\") > -1 && (e = e.join(\":\"));\n            var r = new RegExp(\"^\" + t.source + \":(?:(?:\" + t.source + \"|\" + n.source + \"):)*\" + t.source + \"$\");\n            if (!e.match(r)) throw new TypeError(\"Routing location is expected. But \" + e + \" [\" + typeof e + \"] given\");\n            return e;\n          }],\n          converters: [function (e) {\n            var t = [];\n            if (M()(e)) return e.split(\":\").map(function (e) {\n              return e.split(\",\").reverse().join(\",\");\n            }).join(\":\");\n            if (Array.isArray(e)) {\n              Tr(e.length < 2, \"Unable to cast \" + e + \" [\" + typeof e + \"] to routing locations string\"), t.push(Rr(e[0]));\n              for (var _n21 = 1; _n21 < e.length - 1; _n21 += 1) t.push(Cr(e[_n21]));\n              return t.push(Rr(e[e.length - 1])), t.join(\":\");\n            }\n            throw new TypeError(\"Unable to cast \" + e + \" [\" + typeof e + \"] to routing locations string\");\n          }],\n          required: !0,\n          application: ct\n        },\n        maxAlternatives: {\n          validators: [Pe(0, 5)]\n        },\n        instructionsType: {\n          validators: [Q([\"coded\", \"text\", \"tagged\"], \"instructions type\")]\n        },\n        language: {\n          validators: [function (e) {\n            var t = Object.keys(W);\n            return I(e, t, \"Supported routing guidance language is expected to be one of: \" + t + \"), but \" + e + \" [\" + typeof e + \"] given\");\n          }],\n          converters: [function (e) {\n            return kr(e, W);\n          }]\n        },\n        computeBestOrder: {\n          validators: [_e]\n        },\n        routeRepresentation: {\n          validators: [Q([\"polyline\", \"none\"], \"route representation\")]\n        },\n        computeTravelTimeFor: {\n          validators: [Q([\"none\", \"all\"], \"compute travel time for\")]\n        },\n        vehicleHeading: {\n          validators: [Te(0, 359)]\n        },\n        minDeviationDistance: {\n          validators: [Ee, co(\"minDeviationDistance\", \"arriveAt\"), lo(\"minDeviationDistance\", \"supportingPoints\")]\n        },\n        minDeviationTime: {\n          validators: [Ee, co(\"minDeviationTime\", \"arriveAt\"), lo(\"minDeviationTime\", \"supportingPoints\")]\n        },\n        supportingPoints: {\n          validators: [function (e) {\n            if (!Array.isArray(e)) throw new TypeError(\"Expecting array in supporting points validator\");\n            if (!e.length || e.length < 2) throw new TypeError(\"There should be at least two supporting points\");\n            return e;\n          }],\n          converters: [function (e) {\n            var t = [];\n            if (M()(e) && (e = e.split(\":\")), Array.isArray(e)) for (var _n22 = 0; _n22 < e.length; _n22++) t.push(Rr(e[_n22]));else t.push(Rr(e));\n            return function (e) {\n              return e.map(Dr);\n            }(t);\n          }],\n          application: st\n        },\n        sectionType: {\n          validators: [Ne([\"carTrain\", \"country\", \"ferry\", \"motorway\", \"pedestrian\", \"tollRoad\", \"tollVignette\", \"travelMode\", \"tunnel\", \"traffic\", \"carpool\", \"urban\", \"unpaved\"], \"sectionType\")],\n          converters: [Br]\n        }\n      };\n      function vi(e) {\n        yi = x(yi, ni);\n        var t = A(yi);\n        return e instanceof Array && e.forEach(function (e) {\n          delete t[e];\n        }), t;\n      }\n      function gi(e, t) {\n        var n = vi(),\n          r = new tn(t),\n          o = pr(r.resolve(\"routingEndpoint\")),\n          i = mr(100, {\n            batchSync: r.resolve(\"batchSyncRoutingEndpoint\"),\n            batch: r.resolve(\"batchRoutingEndpoint\"),\n            single: r.resolve(\"batchRoutingQueryEndpoint\")\n          });\n        return mn(n, v, \"calculateRoute\", function (e, t) {\n          return o(n, e, t).then(function (e) {\n            return ht(e, fi);\n          });\n        }, function (e, t) {\n          return i(n, e, t).then(function (e) {\n            return ht(e, hi);\n          });\n        })(e, t);\n      }\n      var bi = [\"arriveAt\", \"travelMode\", \"computeTravelTimeFor\", \"alternativeType\", \"maxAlternatives\", \"instructionsType\", \"language\", \"computeBestOrder\", \"routeRepresentation\", \"supportingPoints\", \"minDeviationDistance\", \"minDeviationTime\", \"constantSpeedConsumptionInLitersPerHundredkm\", \"currentFuelInLiters\", \"fuelEnergyDensityInMJoulesPerLiter\", \"hilliness\", \"windingness\", \"routeType\", \"vehicleEngineType\", \"currentChargeInkWh\", \"maxChargeInkWh\", \"constantSpeedConsumptionInkWhPerHundredkm\"],\n        mi = {\n          auxiliaryPowerInkW: {\n            validators: [ro(\"electric\", \"auxiliaryPowerInkW\")]\n          },\n          constantSpeedConsumptionInkWhPerHundredkm: {\n            validators: [no(\"electric\")],\n            converters: [Gr],\n            required: !0\n          },\n          currentChargeInkWh: {\n            validators: [io(\"currentChargeInkWh\", \"maxChargeInkWh\")],\n            required: !0\n          },\n          maxChargeInkWh: {\n            validators: [io(\"maxChargeInkWh\", \"currentChargeInkWh\")],\n            required: !0\n          },\n          vehicleEngineType: {\n            validators: [Q([\"electric\"], \"vehicleEngineType\")],\n            required: !0\n          },\n          chargingModes: {\n            validators: [function (e) {\n              if (e.length > 10) throw new Error(\"Given chargingModes array contains more than 10 elements.\");\n              return e.forEach(function (e) {\n                ae(e);\n              }), e;\n            }],\n            required: !0,\n            application: st\n          },\n          minChargeAtDestinationInkWh: {\n            validators: [Pe(0, Number.MAX_VALUE)],\n            required: !0\n          },\n          minChargeAtChargingStopsInkWh: {\n            validators: [Pe(0, Number.MAX_VALUE)],\n            required: !0\n          },\n          recuperationInkWhPerkmAltitudeLoss: {\n            validators: [lo(\"recuperationInkWhPerkmAltitudeLoss\", \"consumptionInkWhPerkmAltitudeGain\"), po]\n          },\n          consumptionInkWhPerkmAltitudeGain: {\n            validators: [lo(\"consumptionInkWhPerkmAltitudeGain\", \"recuperationInkWhPerkmAltitudeLoss\"), po]\n          },\n          vehicleAdrTunnelRestrictionCode: {\n            validators: [Q([\"B\", \"C\", \"D\", \"E\"], \"vehicleAdrTunnelRestrictionCode\")]\n          },\n          travelMode: {\n            validators: [Q([\"car\"], \"travel mode\")]\n          }\n        };\n      function wi(e, t) {\n        var n = x(vi(bi), mi),\n          r = new tn(t),\n          o = pr(r.resolve(\"longDistanceEVRoutingEndpoint\"));\n        return mn(n, v, \"longDistanceEVRouting\", function (e, t) {\n          return o(n, e, t).then(function (e) {\n            return ht(e, fi);\n          });\n        })(e, t);\n      }\n      function _i(e) {\n        return e.error ? {\n          error: e.error\n        } : e.matrix ? e : null;\n      }\n      var Ei = [\"locations\", \"maxAlternatives\", \"instructionsType\", \"language\", \"computeBestOrder\", \"routeRepresentation\", \"vehicleHeading\", \"report\", \"callback\", \"minDeviationTime\", \"minDeviationDistance\", \"alternativeType\", \"sectionType\", \"supportingPoints\", \"allowVignette\", \"avoidAreas\", \"batchMode\", \"consumptionInkWhPerkmAltitudeGain\", \"recuperationInkWhPerkmAltitudeLoss\"],\n        Si = {\n          validators: [function (e) {\n            return function (t) {\n              return t.forEach(function (t) {\n                return ye(e, t);\n              }), t;\n            };\n          }({\n            point: {\n              validators: [(Oi = {\n                latitude: {\n                  validators: [function (e) {\n                    return fe(e);\n                  }],\n                  required: !0\n                },\n                longitude: {\n                  validators: [function (e) {\n                    return ie(e);\n                  }],\n                  required: !0\n                }\n              }, function (e) {\n                return ye(Oi, e), e;\n              })]\n            }\n          })],\n          converters: [function (e) {\n            return function (t) {\n              return t.forEach(function (t) {\n                var _loop = function _loop(_n23) {\n                  Object.prototype.hasOwnProperty.call(t, _n23) && Object.prototype.hasOwnProperty.call(e, _n23) && Array.isArray(e[_n23].converters) && e[_n23].converters.forEach(function (e) {\n                    D()(e) && (t[_n23] = e(t[_n23]));\n                  });\n                };\n                for (var _n23 in t) {\n                  _loop(_n23);\n                }\n              }), t;\n            };\n          }({\n            point: {\n              converters: [function (e) {\n                return function (t) {\n                  for (var _n24 in t) Object.prototype.hasOwnProperty.call(t, _n24) && Object.prototype.hasOwnProperty.call(e, _n24) && D()(e[_n24].converter) && (t[_n24] = e[_n24].converter(t[_n24]));\n                  return t;\n                };\n              }({\n                latitude: {\n                  converters: [function (e) {\n                    return xr(e);\n                  }],\n                  required: !0\n                },\n                longitude: {\n                  converters: [function (e) {\n                    return Ir(e);\n                  }],\n                  required: !0\n                }\n              })]\n            }\n          })],\n          required: !0,\n          application: st\n        };\n      var Oi;\n      function Pi(e, t) {\n        var n = function (e) {\n            var t = vi(Ei);\n            t.origins = Si, t.destinations = Si, t.batchMode = {\n              application: ut\n            }, t.waitTimeSeconds = {\n              application: lt,\n              validators: [Ge]\n            };\n            var n = A(t);\n            return e instanceof Array && e.forEach(function (e) {\n              delete n[e];\n            }), n;\n          }(),\n          r = new tn(t),\n          o = function (e, t) {\n            return function (n, r, o) {\n              var i = ir(n, r),\n                a = _r(i.postParams),\n                s = i.queryParams,\n                c = i.headerParams;\n              return br({\n                batchMode: r.batchMode || (a.origins.length * a.destinations.length <= e ? \"sync\" : \"redirect\"),\n                headers: c,\n                waitTimeSeconds: r.waitTimeSeconds,\n                queryParams: s,\n                bodyParams: a,\n                endpoints: {\n                  sync: t.sync,\n                  async: t.async\n                },\n                abortSignal: o\n              });\n            };\n          }(100, {\n            sync: r.resolve(\"matrixSyncRoutingEndpoint\"),\n            async: r.resolve(\"matrixRoutingEndpoint\")\n          });\n        return mn(n, v, \"matrixRouting\", function (e, t) {\n          return o(n, e, t).then(function (e) {\n            return ht(e, _i);\n          });\n        })(e, t);\n      }\n      var Ti = {\n        key: {\n          validators: [H]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        protocol: {\n          validators: [Q([\"http\", \"https\"], \"protocol\")]\n        },\n        sessionId: {\n          validators: [xe]\n        }\n      };\n      function xi(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"incidentViewportEndpoint\"));\n        return mn(Ti, m, \"incidentViewport\", function (e, t) {\n          return r(Ti, e, t).then(ht);\n        })(e, t);\n      }\n      function Ii(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function ji(e) {\n        for (var t = 1; t < arguments.length; t++) {\n          var n = null != arguments[t] ? arguments[t] : {};\n          t % 2 ? Ii(Object(n), !0).forEach(function (t) {\n            Ai(e, t, n[t]);\n          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ii(Object(n)).forEach(function (t) {\n            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n          });\n        }\n        return e;\n      }\n      function Ai(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      function ki(e) {\n        var t = e.flowSegmentData.coordinates.coordinate.map(function (e) {\n          return {\n            lat: e.latitude,\n            lng: e.longitude\n          };\n        });\n        return Object.assign(e, {\n          flowSegmentData: ji(ji({}, e.flowSegmentData), {}, {\n            coordinates: {\n              coordinate: t\n            }\n          })\n        });\n      }\n      var Ri = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        zoom: {\n          validators: [function (e) {\n            return ge(0, 22, \"zoom level <0, 22> is expected\")(e);\n          }],\n          required: !0,\n          application: ct\n        },\n        style: {\n          validators: [Q([\"absolute\", \"relative\", \"relative-delay\", \"relative0\", \"relative0-dark\", \"reduced-sensitivity\"], \"traffic flow style\")],\n          required: !0,\n          application: ct\n        },\n        point: {\n          converters: [Mr],\n          validators: [De],\n          required: !0\n        },\n        unit: {\n          validators: [Q([\"KMPH\", \"MPH\"])]\n        },\n        thickness: {\n          validators: [Pe(1, 20)]\n        },\n        openLr: {\n          validators: [_e]\n        }\n      };\n      function Ci(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"flowSegmentDataEndpoint\"));\n        return mn(Ri, b, \"trafficFlowSegmentData\", function (e, t) {\n          return r(Ri, e, t).then(function (e) {\n            return ht(e, ki);\n          });\n        })(e, t);\n      }\n      var Li = {\n        key: {\n          validators: [H]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        },\n        boundingBox: {\n          required: !0,\n          validators: [Oe],\n          converters: [Vr],\n          cast: function cast(e, t) {\n            t.bbox = \"\".concat(e.minLon, \",\").concat(e.minLat, \",\").concat(e.maxLon, \",\").concat(e.maxLat);\n          }\n        },\n        fields: {\n          validators: [xe, function (e) {\n            var t = j(ee),\n              n = j(e),\n              r = function r(e, t) {\n                Object.keys(e).forEach(function (n) {\n                  if (!t.hasOwnProperty(n) || typeof e[n] != typeof t[n]) throw new TypeError(\"Property \".concat(n, \" not matches available fields: \") + ee);\n                  \"object\" == typeof e[n] && r(e[n], t[n]);\n                });\n              };\n            return r(n, t), e;\n          }],\n          converters: [function (e) {\n            if (\"string\" == typeof e) return e.replace(/\\s/g, \"\");\n            throw new TypeError(\"A string is required\");\n          }]\n        },\n        t: {\n          validators: [xe]\n        },\n        language: {\n          validators: [je],\n          converters: [function (e) {\n            return kr(e, z);\n          }]\n        }\n      };\n      function Di(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"incidentDetailsV5Endpoint\"));\n        return mn(Li, m, \"incidentDetailsV5\", function (e, t) {\n          return r(Li, e, t).then(ht);\n        })(e, t);\n      }\n      var Vi = {\n          basic: [\"jpg\", \"jpeg\", \"png\"],\n          hybrid: [\"png\"],\n          labels: [\"png\"]\n        },\n        Mi = {\n          layer: {\n            validators: [Q([\"basic\", \"hybrid\", \"labels\"], \"layers\")],\n            defaultValue: \"basic\"\n          },\n          style: {\n            validators: [Q([\"main\", \"night\"], \"styles\")],\n            defaultValue: \"main\"\n          },\n          format: {\n            validators: [Q([\"png\", \"jpg\", \"jpeg\"], \"formats\")],\n            defaultValue: \"png\"\n          },\n          key: {\n            validators: [H]\n          },\n          zoom: {\n            validators: [Te(0, 23)],\n            converters: [function (e) {\n              return Math.round(Number(e));\n            }]\n          },\n          center: {\n            converters: [Mr],\n            validators: [De]\n          },\n          width: {\n            validators: [Te(1, 8192)]\n          },\n          height: {\n            validators: [Te(1, 8192)]\n          },\n          bbox: {\n            validators: [Oe],\n            converters: [Vr]\n          },\n          view: {\n            validators: [Q([\"Unified\", \"IL\", \"IN\", \"MA\", \"PK\", \"AR\", \"Arabic\", \"TR\", \"RU\", \"CN\"], \"view\")]\n          },\n          language: {\n            validators: [function (e) {\n              return I(e, Y, \"Supported maps language is expected to be one of: \" + Y + \"), but \" + e + \" [\" + typeof e + \"] given\");\n            }]\n          }\n        };\n      function Ui(e, t) {\n        return e + \"?\" + Object.keys(Mi).reduce(function (e, n) {\n          var r = t[n];\n          return void 0 !== r && (r = function (e, t) {\n            if (\"bbox\" === e) t = (n = t).minLon + \",\" + n.minLat + \",\" + n.maxLon + \",\" + n.maxLat;else {\n              if (\"zoom\" === e) return String(parseInt(t, 10));\n              if (\"center\" === e) {\n                var _e14 = t.split(\",\"),\n                  _n25 = [parseFloat(_e14[1]), parseFloat(_e14[0])];\n                return _n25[0] + \",\" + _n25[1];\n              }\n            }\n            var n;\n            return t;\n          }(n, r), e.push(n + \"=\" + encodeURI(r))), e;\n        }, []).join(\"&\");\n      }\n      function Fi(e, t) {\n        var n = new tn(t);\n        return mn(Mi, y, \"staticImage\", function (e) {\n          return function (e) {\n            if (!Vi[e.layer] || -1 === Vi[e.layer].indexOf(e.format)) throw new Error(\"Unsupported layer. Please change to PNG or use basic layer.\");\n            if (e.bbox && e.center) throw new Error(\"The bbox and center properties cannot be used together\");\n            if (!e.bbox && !e.center) throw new Error(\"Either bbox or center property must be provided\");\n            if (e.bbox && (S(e.width) || S(e.height))) throw new Error(\"The bbox, width and height properties cannot be used together\");\n          }(e), Ui(n.resolve(\"staticMapImageEndpoint\"), e);\n        })(e, t);\n      }\n      var Ni = {\n        key: {\n          validators: [xe]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        }\n      };\n      function Bi(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"copyrightsV2Endpoint\"));\n        return mn(Ni, y, \"copyrights\", function (e, t) {\n          return e.contentType = \"text\", r(Ni, e, t).then(ht);\n        })(e, t);\n      }\n      var Gi = {\n        key: {\n          validators: [H]\n        },\n        trackingId: {\n          validators: [we],\n          application: pt,\n          defaultValue: yt.v4\n        }\n      };\n      function Wi(e, t) {\n        var n = new tn(t),\n          r = pr(n.resolve(\"captionV2Endpoint\"));\n        return mn(Gi, y, \"copyrightsCaptionV2\", function (e, t) {\n          return r(Gi, e, t).then(ht);\n        })(e, t);\n      }\n      function qi(e, t) {\n        var n = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n          var r = Object.getOwnPropertySymbols(e);\n          t && (r = r.filter(function (t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n          })), n.push.apply(n, r);\n        }\n        return n;\n      }\n      function zi(e) {\n        for (var t = 1; t < arguments.length; t++) {\n          var n = null != arguments[t] ? arguments[t] : {};\n          t % 2 ? qi(Object(n), !0).forEach(function (t) {\n            Hi(e, t, n[t]);\n          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : qi(Object(n)).forEach(function (t) {\n            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n          });\n        }\n        return e;\n      }\n      function Hi(e, t, n) {\n        return t in e ? Object.defineProperty(e, t, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : e[t] = n, e;\n      }\n      var Ki = {\n        sdkInfo: {\n          version: c()[\"sdk.version\"]\n        },\n        setProductInfo: function setProductInfo(e, t) {\n          if (!e) throw new Error(\"ProductId needs to be set\");\n          var n = t || 0 === t ? \"/\" + t : \"\";\n          p().productInfo = e + n;\n        },\n        services: zi(zi(zi(zi(zi({}, t), o), i), a), {}, {\n          _endpoints: e\n        })\n      };\n    }(), r = r.default;\n  }();\n});","map":{"version":3,"names":["e","t","exports","module","define","amd","n","r","self","concat","origin","hostedStylesVersion","o","i","a","toStringTag","Object","Symbol","Function","g","prototype","hasOwnProperty","toString","s","call","Array","isArray","c","l","parseInt","NaN","valueOf","replace","test","slice","u","length","p","d","charCodeAt","push","size","clear","cache","TypeError","arguments","apply","has","get","set","Cache","delete","__data__","hash","map","string","RegExp","exec","keys","IE_PROTO","splice","pop","Infinity","propertyIsEnumerable","defineProperty","value","enumerable","default","__esModule","node","clockseq","random","rng","f","msecs","Date","now","h","nsecs","y","Error","v","crypto","getRandomValues","bind","msCrypto","Uint8Array","substr","undefined","toLowerCase","unescape","encodeURIComponent","name","DNS","URL","charAt","Uint32Array","Math","ceil","pow","floor","constructor","b","m","w","ArrayBuffer","resolve","nodeType","Buffer","isBuffer","isTypedArray","process","require","types","binding","id","loaded","globalThis","window","nmd","paths","children","__tomtomAnalyticsInfo_","productInfo","S","isFinite","O","P","T","x","I","indexOf","j","A","k","R","C","_","G","synonyms","af","afr","af_za","afrikaans","label","ar","ara","ar_ar","arabic","bg","bul","bg_bg","bulgarian","ca","cat","ca_fr","ca_es","catalan","zh_cn","zh","chi","zh_tw","chinese","cs","cz","cze","cs_cz","czech","da","dan","da_dk","danish","nl_be","nl","dut","nl_nl","dutch","aue","aus","en_au","en","eng","en_gb","english","en_nz","us","ame","en_us","et_ee","estonian","eu_es","basque","fi","fin","fi_fi","finnish","fr_ca","fr","fre","fr_fr","french","de","ger","de_de","german","el","gre","el_gr","greek","gl_es","galician","he_il","hebrew","hr","hr_hr","croatian","hu","hun","hu_hu","hungarian","ind","id_id","indonesian","it","ita","it_it","italian","kk_kz","kazakh","lt","lv_lv","latvian","lit","lt_lt","lithuanian","ms","mal","ms_my","malay","no","nb","nor","nb_no","no_no","norwegian","pl","pol","pl_pl","polish","ro_ro","romanian","ru","rus","ru_ru","russian","sr_rs","serbian","sk","slo","sk_sk","slovak","sl","slv","sl_si","slovenian","es","spa","es_es","spanish","es_419","sv","swe","sv_se","swedish","th","tha","th_th","thai","tr","tur","tr_tr","turkish","uk_ua","ukrainian","vi_vn","vietnamese","NGT","ngt","en_ca","ko","kor","ko_kr","korean","br","pob","pt_br","pt","por","pt_pt","portuguese","ru_latn_ru","ru_cyrl_ru","mx","spm","es_mx","defaultValue","W","q","z","H","M","D","K","parseFloat","Q","Z","$","X","Y","J","ee","te","match","ne","re","oe","ie","ae","se","chargingCurve","chargingConnections","forEach","ce","chargeInkWh","Number","MAX_VALUE","timeToChargeInSeconds","le","ue","plugType","pe","facilityType","fe","he","filter","lat","lon","lng","ye","validators","_iterator","_createForOfIteratorHelper","_step","done","err","required","ve","F","B","ge","be","split","join","me","we","_e","Boolean","Ee","Se","Oe","minLat","maxLat","minLon","maxLon","Pe","Te","xe","Ie","je","Ae","ke","Re","Ce","Le","De","Ve","Me","Ue","Fe","_iterator2","_step2","Ne","Be","Ge","isNaN","We","qe","ze","He","includes","Ke","Qe","message","Xe","_classCallCheck","options","_createClass","key","convert","_isSinglePoint","_convertPoint","_convertToArrayOfPoints","$e","_covertToDefaultFormat","longitude","latitude","isLatLon","_convertStringPoint","customPointConverter","et","tt","boundingBox","btmRightPoint","topLeftPoint","viewport","position","summary","geoBias","nt","Je","type","geometry","coordinates","properties","rt","features","results","ot","entryPoints","assign","toGeoJson","at","batchItems","response","error","st","ct","ut","ht","data","trackingId","getTrackingId","vt","gt","bt","mt","wt","_t","Et","St","Ot","Pt","Tt","xt","It","jt","At","kt","Rt","Ct","Lt","Dt","Vt","Mt","Ut","Ft","Nt","Bt","Gt","Wt","qt","zt","Ht","Kt","Qt","Zt","$t","Xt","Yt","Jt","tn","customEndpoints","_customEndpoints","customDomain","_customDomain","_changeDomain","nn","_Error","_inherits","_super","_createSuper","_this","captureStackTrace","_assertThisInitialized","errors","_wrapNativeSuper","rn","on","converters","deprecationDate","_validateFields","_isArrayOfFunctions","parse","getDefaultValue","getConverters","getValidators","getDeprecationDate","isRequired","an","_class","log","_isLogPrinted","_setLog","_displayWarning","console","warn","checkDeprecation","dn","_iterator3","_step3","fn","_i5","_Object$entries","entries","_Object$entries$_i","_slicedToArray","hn","_i6","_Object$entries2","_Object$entries2$_i","_toConsumableArray","yn","_i8","_Object$entries3","_Object$entries3$_i","reduce","vn","batchMode","yt","v4","waitTimeSeconds","batchProperties","batchErrors","gn","bn","_callee","_vn","_o4","_i10","_args","_regeneratorRuntime","wrap","_callee$","_context","prev","next","cn","abrupt","stop","mn","abortSignal","En","_n","Sn","fetch","jn","pathParameters","contentType","protocol","url","Accept","headers","xn","method","mode","signal","transformResponse","requestOptions","An","Ln","then","Pn","mark","_callee2","_callee2$","_context2","sent","ok","Promise","reject","_getOriginalResponse","requestType","status","location","catch","aborted","Cn","kn","text","Rn","json","detailedError","description","queryParameters","Dn","Un","JSON","stringify","Fn","Nn","redirect","bodyParameters","body","Bn","Gn","Wn","qn","zn","Hn","application","Kn","Qn","Zn","$n","Xn","fieldName","Yn","Jn","er","nr","rr","or","cast","ir","pathParams","queryParams","postParams","otherParams","headerParams","cr","lr","ur","pr","_ir","sr","dr","yr","endpoints","async","sync","redirectMode","bodyParams","mr","_ir2","query","single","post","batchSync","batch","wr","_r","origins","destinations","Er","geometries","geometriesZoom","Sr","Tr","xr","Ir","jr","reverse","Ar","left","bottom","right","top","getWest","getEast","getSouth","getNorth","getNorthEast","getSouthWest","trim","kr","Rr","Cr","Lr","Dr","Vr","Mr","Ur","toISOString","Fr","vertices","Nr","Br","Gr","Wr","qr","Pr","zr","maxDetourTime","spreadingMode","route","points","_e13","limit","brandSet","categorySet","connectorSet","minPowerKW","maxPowerKW","openingHours","timeZone","sortBy","detourOffset","view","Hr","Kr","Qr","Zr","$r","Xr","sort","Yr","vehicleEngineType","Jr","eo","travelMode","to","constantSpeedConsumptionInLitersPerHundredkm","constantSpeedConsumptionInkWhPerHundredkm","ro","oo","io","ao","currentChargeInkWh","energyBudgetInkWh","currentFuelInLiters","fuelBudgetInLiters","so","co","lo","uo","po","recuperationInkWhPerkmAltitudeLoss","consumptionInkWhPerkmAltitudeGain","fo","__all","typeahead","offset","language","countrySet","radius","center","bestResult","ofs","extendedPostalCodesFor","mapcodes","fuelSet","relatedPois","ho","topLeft","btmRight","yo","additionalOptions","defaultFields","fields","_getRestService","search","handleBatchServiceCall","handleServiceCall","construct","vo","_yo","_super2","_this2","visible","go","bo","chargingAvailability","mo","wo","_yo2","_super3","_this3","minFuzzyLevel","maxFuzzyLevel","idxSet","entityTypeSet","sessionId","clientTime","_o","Eo","_yo3","_super4","_this4","geometryList","So","Oo","_yo4","_super5","_this5","Po","To","entityId","xo","Io","jo","Ao","_yo5","_super6","_this6","Ro","resultSet","Co","Lo","Do","address","northEast","southWest","Vo","addresses","Mo","Uo","Fo","TYPE","reverseGeocode","crossStreetLookup","No","Bo","Go","heading","allowFreeformNewline","Wo","entityType","returnSpeedLimit","number","returnRoadUse","roadUse","String","streetNumber","returnMatchType","dateTime","qo","zo","Ho","Ko","Qo","Zo","$o","Xo","Yo","Jo","countryCode","validator","streetName","crossStreet","municipality","municipalitySubdivision","countryTertiarySubdivision","countrySecondarySubdivision","countrySubdivision","postalCode","ei","ti","ni","routeType","traffic","avoid","departAt","arriveAt","hilliness","windingness","report","vehicleMaxSpeed","vehicleWeight","accelerationEfficiency","decelerationEfficiency","uphillEfficiency","downhillEfficiency","vehicleAxleWeight","vehicleLength","vehicleWidth","vehicleHeight","vehicleCommercial","vehicleLoadType","auxiliaryPowerInLitersPerHour","fuelEnergyDensityInMJoulesPerLiter","maxChargeInkWh","auxiliaryPowerInkW","avoidAreas","rectangles","southWestCorner","northEastCorner","avoidVignette","allowVignette","vehicleAdrTunnelRestrictionCode","ri","distanceBudgetInMeters","timeBudgetInSec","oi","ii","reachableRange","boundary","ai","si","ci","li","ui","legs","sections","segmentSummary","guidance","pi","di","routes","toRouteSectionsCollection","startPointIndex","endPointIndex","sectionType","simpleCategory","effectiveSpeedInKmh","delayInSeconds","tec","hi","yi","alternativeType","locations","source","maxAlternatives","instructionsType","computeBestOrder","routeRepresentation","computeTravelTimeFor","vehicleHeading","minDeviationDistance","minDeviationTime","supportingPoints","vi","gi","bi","mi","chargingModes","minChargeAtDestinationInkWh","minChargeAtChargingStopsInkWh","wi","_i","matrix","Ei","Si","point","Oi","_loop","_n23","converter","Pi","Ti","xi","ki","flowSegmentData","coordinate","ji","Ri","zoom","style","unit","thickness","openLr","Ci","Li","bbox","Di","Vi","basic","hybrid","labels","Mi","layer","format","round","width","height","Ui","encodeURI","Fi","Ni","Bi","Gi","Wi","Ki","sdkInfo","version","setProductInfo","services","zi","_endpoints"],"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sdk/services/dist/mainConfig.js","webpack:///sdk/services/node_modules/lodash/isFunction.js","webpack:///sdk/services/node_modules/lodash/_baseGetTag.js","webpack:///sdk/services/node_modules/lodash/_Symbol.js","webpack:///sdk/services/node_modules/lodash/_root.js","webpack:///sdk/services/node_modules/lodash/_freeGlobal.js","webpack:///sdk/services/node_modules/lodash/_getRawTag.js","webpack:///sdk/services/node_modules/lodash/_objectToString.js","webpack:///sdk/services/node_modules/lodash/isObject.js","webpack:///sdk/services/node_modules/lodash/isString.js","webpack:///sdk/services/node_modules/lodash/isArray.js","webpack:///sdk/services/node_modules/lodash/isObjectLike.js","webpack:///sdk/services/node_modules/lodash/isNil.js","webpack:///sdk/services/node_modules/lodash/isInteger.js","webpack:///sdk/services/node_modules/lodash/toInteger.js","webpack:///sdk/services/node_modules/lodash/toFinite.js","webpack:///sdk/services/node_modules/lodash/toNumber.js","webpack:///sdk/services/node_modules/lodash/isSymbol.js","webpack:///sdk/services/node_modules/lodash/has.js","webpack:///sdk/services/node_modules/lodash/_baseHas.js","webpack:///sdk/services/node_modules/lodash/_hasPath.js","webpack:///sdk/services/node_modules/lodash/_castPath.js","webpack:///sdk/services/node_modules/lodash/_isKey.js","webpack:///sdk/services/node_modules/lodash/_stringToPath.js","webpack:///sdk/services/node_modules/lodash/_memoizeCapped.js","webpack:///sdk/services/node_modules/lodash/memoize.js","webpack:///sdk/services/node_modules/lodash/_MapCache.js","webpack:///sdk/services/node_modules/lodash/_mapCacheClear.js","webpack:///sdk/services/node_modules/lodash/_Hash.js","webpack:///sdk/services/node_modules/lodash/_hashClear.js","webpack:///sdk/services/node_modules/lodash/_nativeCreate.js","webpack:///sdk/services/node_modules/lodash/_getNative.js","webpack:///sdk/services/node_modules/lodash/_baseIsNative.js","webpack:///sdk/services/node_modules/lodash/_isMasked.js","webpack:///sdk/services/node_modules/lodash/_coreJsData.js","webpack:///sdk/services/node_modules/lodash/_toSource.js","webpack:///sdk/services/node_modules/lodash/_getValue.js","webpack:///sdk/services/node_modules/lodash/_hashDelete.js","webpack:///sdk/services/node_modules/lodash/_hashGet.js","webpack:///sdk/services/node_modules/lodash/_hashHas.js","webpack:///sdk/services/node_modules/lodash/_hashSet.js","webpack:///sdk/services/node_modules/lodash/_ListCache.js","webpack:///sdk/services/node_modules/lodash/_listCacheClear.js","webpack:///sdk/services/node_modules/lodash/_listCacheDelete.js","webpack:///sdk/services/node_modules/lodash/_assocIndexOf.js","webpack:///sdk/services/node_modules/lodash/eq.js","webpack:///sdk/services/node_modules/lodash/_listCacheGet.js","webpack:///sdk/services/node_modules/lodash/_listCacheHas.js","webpack:///sdk/services/node_modules/lodash/_listCacheSet.js","webpack:///sdk/services/node_modules/lodash/_Map.js","webpack:///sdk/services/node_modules/lodash/_mapCacheDelete.js","webpack:///sdk/services/node_modules/lodash/_getMapData.js","webpack:///sdk/services/node_modules/lodash/_isKeyable.js","webpack:///sdk/services/node_modules/lodash/_mapCacheGet.js","webpack:///sdk/services/node_modules/lodash/_mapCacheHas.js","webpack:///sdk/services/node_modules/lodash/_mapCacheSet.js","webpack:///sdk/services/node_modules/lodash/toString.js","webpack:///sdk/services/node_modules/lodash/_baseToString.js","webpack:///sdk/services/node_modules/lodash/_arrayMap.js","webpack:///sdk/services/node_modules/lodash/isArguments.js","webpack:///sdk/services/node_modules/lodash/_baseIsArguments.js","webpack:///sdk/services/node_modules/lodash/_isIndex.js","webpack:///sdk/services/node_modules/lodash/isLength.js","webpack:///sdk/services/node_modules/lodash/_toKey.js","webpack:///sdk/services/node_modules/uuid/dist/index.js","webpack:///sdk/services/node_modules/uuid/dist/v1.js","webpack:///sdk/services/node_modules/uuid/dist/rng-browser.js","webpack:///sdk/services/node_modules/uuid/dist/stringify.js","webpack:///sdk/services/node_modules/uuid/dist/validate.js","webpack:///sdk/services/node_modules/uuid/dist/regex.js","webpack:///sdk/services/node_modules/uuid/dist/v3.js","webpack:///sdk/services/node_modules/uuid/dist/v35.js","webpack:///sdk/services/node_modules/uuid/dist/parse.js","webpack:///sdk/services/node_modules/uuid/dist/md5-browser.js","webpack:///sdk/services/node_modules/uuid/dist/v4.js","webpack:///sdk/services/node_modules/uuid/dist/v5.js","webpack:///sdk/services/node_modules/uuid/dist/sha1-browser.js","webpack:///sdk/services/node_modules/uuid/dist/nil.js","webpack:///sdk/services/node_modules/uuid/dist/version.js","webpack:///sdk/services/node_modules/lodash/isUndefined.js","webpack:///sdk/services/node_modules/lodash/isEmpty.js","webpack:///sdk/services/node_modules/lodash/_baseKeys.js","webpack:///sdk/services/node_modules/lodash/_isPrototype.js","webpack:///sdk/services/node_modules/lodash/_nativeKeys.js","webpack:///sdk/services/node_modules/lodash/_overArg.js","webpack:///sdk/services/node_modules/lodash/_getTag.js","webpack:///sdk/services/node_modules/lodash/_DataView.js","webpack:///sdk/services/node_modules/lodash/_Promise.js","webpack:///sdk/services/node_modules/lodash/_Set.js","webpack:///sdk/services/node_modules/lodash/_WeakMap.js","webpack:///sdk/services/node_modules/lodash/isArrayLike.js","webpack:///sdk/services/node_modules/lodash/isBuffer.js","webpack:///sdk/services/node_modules/lodash/stubFalse.js","webpack:///sdk/services/node_modules/lodash/isTypedArray.js","webpack:///sdk/services/node_modules/lodash/_baseIsTypedArray.js","webpack:///sdk/services/node_modules/lodash/_baseUnary.js","webpack:///sdk/services/node_modules/lodash/_nodeUtil.js","webpack:///sdk/services/node_modules/lodash/castArray.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///services/requester/analytics.js","webpack:///core/serviceTypes.js","webpack:///services/services/utils.js","webpack:///services/config/language/mappings.js","webpack:///services/services/validators/key.js","webpack:///services/services/validators/number.js","webpack:///services/services/validators/oneOfValue.js","webpack:///services/services/validators.js","webpack:///services/model/pointFacade.js","webpack:///services/utils/pointUtils.js","webpack:///services/model/modelUtils.js","webpack:///services/model/search/search.js","webpack:///services/model/search/batchModel.js","webpack:///services/common/parameterApplications.js","webpack:///services/model/modelResponse.js","webpack:///services/endpoints/endpoints.js","webpack:///services/endpoints/endpointsManager.js","webpack:///services/error/ValidationError.js","webpack:///services/model/Field.js","webpack:///services/services/deprecationHandler.js","webpack:///services/services/service.js","webpack:///services/services/serviceFactory.js","webpack:///services/requester/template.js","webpack:///services/requester/fetch/browserFetch.js","webpack:///services/requester/helpers.js","webpack:///services/requester/json.js","webpack:///services/requester/text.js","webpack:///services/requester/requester.js","webpack:///services/rest/request/requestParamsFactory.js","webpack:///services/rest/request/contentTypeConfigurer.js","webpack:///services/rest/request/singleRequestServiceFactory.js","webpack:///services/rest/utils.js","webpack:///services/requester/urlBuilder.js","webpack:///services/rest/request/batchRequestStrategy.js","webpack:///services/rest/request/asyncRedirectModeFactory.js","webpack:///services/rest/request/batchRequestServiceFactory.js","webpack:///services/rest/request/matrixFactory.js","webpack:///services/services/search/additionalData.js","webpack:///services/services/converters.js","webpack:///services/common/searchTypes.js","webpack:///services/services/search/alongRouteSearch.js","webpack:///services/services/postValidators.js","webpack:///services/services/search/searchParameters.js","webpack:///services/services/search/search.js","webpack:///services/services/search/categorySearch.js","webpack:///services/services/search/evChargingStationsAvailability.js","webpack:///services/services/search/fuzzySearch.js","webpack:///services/services/search/geometrySearch.js","webpack:///services/services/search/nearbySearch.js","webpack:///services/services/search/placeById.js","webpack:///services/services/search/poiCategories.js","webpack:///services/services/search/poiSearch.js","webpack:///services/services/search/autocomplete.js","webpack:///services/model/reverseGeocode/reverseGeocode.js","webpack:///services/model/reverseGeocode/batchReverseGeocode.js","webpack:///services/services/reverseGeocode/reverseGeocodeBase.js","webpack:///services/services/reverseGeocode/types.js","webpack:///services/services/reverseGeocode/reverseGeocodeParameters.js","webpack:///services/services/reverseGeocode/reverseGeocode.js","webpack:///services/model/geocode/geocode.js","webpack:///services/model/geocode/batchGeocode.js","webpack:///services/services/geocode/geocodeParameters.js","webpack:///services/services/geocode/geocode.js","webpack:///services/services/reverseGeocode/crossStreetLookup.js","webpack:///services/services/structuredGeocode/structuredGeocode.js","webpack:///services/services/structuredGeocode/structureGeocodeParameters.js","webpack:///services/services/routing/commonRoutingParameters.js","webpack:///services/services/routing/calculateReachableRangeParameters.js","webpack:///services/model/routing/calculateReachableRange.js","webpack:///services/model/routing/batchCalculateReachableRange.js","webpack:///services/services/routing/calculateReachableRange.js","webpack:///services/model/routing/helpers/getRouteFeature.js","webpack:///services/model/routing/calculateRoute.js","webpack:///services/model/routing/batchCalculateRoute.js","webpack:///services/services/routing/routingParameters.js","webpack:///services/services/routing/calculateRoute.js","webpack:///services/services/routing/longDistanceEVRoutingParameters.js","webpack:///services/services/routing/longDistanceEVRouting.js","webpack:///services/model/routing/matrixRouting.js","webpack:///services/services/routing/matrixParameters.js","webpack:///services/services/routing/matrixRouting.js","webpack:///services/services/incidentViewport.js","webpack:///services/model/traffic/flowSegmentData.js","webpack:///services/services/trafficFlowSegmentData.js","webpack:///services/services/incidentDetailsV5.js","webpack:///services/services/staticImage/staticImage.js","webpack:///services/services/copyrights/copyrightsV2.js","webpack:///services/services/copyrights/copyrightsCaptionV2.js","webpack:///services/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/* eslint-disable max-len */\nconst origin = 'api.tomtom.com';\nconst hostedStylesVersion = '21.1.0-*';\n\nmodule.exports = {\n    'sdk.name': 'MapsWebSDK',\n    'sdk.version': '6.23.0',\n    'sdk.examples.version': 'SDK-${version}',\n\n    'analytics.header.name': 'TomTom-User-Agent',\n    'analytics.header.sdkName': 'MapsWebSDK',\n\n    // copyrights\n    'endpoints.copyrightsV2': `${origin}/map/2/copyrights`,\n    'endpoints.captionV2': `${origin}/map/2/copyrights/caption.{contentType}`,\n\n    // search\n    'endpoints.geocode': `${origin}/search/2/geocode/{query}.{contentType}`,\n    'endpoints.structuredGeocode': `${origin}/search/2/structuredGeocode.{contentType}`,\n    'endpoints.search': `${origin}/search/2/{type}/{query}.{contentType}`,\n    'endpoints.nearbySearch': `${origin}/search/2/nearbySearch/.{contentType}`,\n    'endpoints.batchNearbySearchQuery': '/{type}/.{contentType}',\n    'endpoints.batchSearch': `${origin}/search/2/batch.{contentType}`,\n    'endpoints.batchSyncSearch': `${origin}/search/2/batch/sync.{contentType}`,\n    'endpoints.batchSearchQuery': '/{type}/{query}.{contentType}',\n    'endpoints.batchStructuredGeocodeQuery': '/structuredGeocode.{contentType}',\n    'endpoints.adp': `${origin}/search/2/additionalData.{contentType}`,\n    'endpoints.batchAdpQuery': '/additionalData.{contentType}',\n    'endpoints.reverseGeocode': `${origin}/search/2/{type}/{position}.{contentType}`,\n    'endpoints.batchReverseGeocodeQuery': '/{type}/{position}.{contentType}',\n    'endpoints.autocomplete': `${origin}/search/2/autocomplete/{query}.{contentType}`,\n    'endpoints.poiCategories': `${origin}/search/2/poiCategories.{contentType}`,\n    'endpoints.chargingAvailability': `${origin}/search/2/chargingAvailability.{contentType}`,\n    'endpoints.batchChargingAvailabilityQuery': '/chargingAvailability.{contentType}',\n    'endpoints.placeById': `${origin}/search/2/place.{contentType}`,\n\n    // traffic\n    'endpoints.incidentDetailsV5': `${origin}/traffic/services/5/incidentDetails`,\n    'endpoints.incidentViewport': `${origin}/traffic/services/4/incidentViewport/0,0,.1,.1/0/0,0,.1,.1/0/false/{contentType}`,\n    'endpoints.flowSegmentData': `${origin}/traffic/services/4/flowSegmentData/{style}/{zoom}/{contentType}`,\n    'endpoints.incidentRegions': `${origin}/traffic/services/4/incidentRegions/{contentType}`,\n\n    // layers\n    'endpoints.rasterTrafficIncidentTilesLayer': `{s}.${origin}/traffic/map/4/tile/incidents/{style}/{z}/{x}/{y}.png?tileSize={tileSize}`,\n    'endpoints.vectorTrafficIncidentTilesLayer': `{s}.${origin}/traffic/map/4/tile/incidents/{z}/{x}/{y}.pbf`,\n    'endpoints.rasterTrafficFlowTilesLayer': `{s}.${origin}/traffic/map/4/tile/flow/{style}/{z}/{x}/{y}.png`,\n    'endpoints.vectorTrafficFlowTilesLayer': `{s}.${origin}/traffic/map/4/tile/flow/{style}/{z}/{x}/{y}.pbf`,\n    'endpoints.tileLayer': `{s}.${origin}/map/1/tile/{layer}/{style}/{z}/{x}/{y}.png?tileSize={tileSize}`,\n    'endpoints.wmsLayer': `{s}.${origin}/map/1/wms/?service=WMS&version=1.1.1&request=GetMap&bbox={bbox-epsg-3857}&srs=EPSG:3857&width=512&height=512&layers=basic&styles=&format={format}`,\n    'endpoints.vectorTileLayer': `{s}.${origin}/map/1/tile/{layer}/{style}/{z}/{x}/{y}.pbf`,\n\n    // routing\n    'endpoints.routing': `${origin}/routing/1/calculateRoute/{locations}/{contentType}`,\n    'endpoints.calculateReachableRange': `${origin}/routing/1/calculateReachableRange/{origin}/{contentType}`,\n    'endpoints.batchRouting': `${origin}/routing/1/batch/{contentType}`,\n    'endpoints.batchSyncRouting': `${origin}/routing/1/batch/sync/{contentType}`,\n    'endpoints.batchRoutingQuery': '/calculateRoute/{locations}/{contentType}',\n    'endpoints.batchReachableRangeQuery': '/calculateReachableRange/{origin}/{contentType}',\n    'endpoints.matrixRouting': `${origin}/routing/1/matrix/{contentType}`,\n    'endpoints.matrixSyncRouting': `${origin}/routing/1/matrix/sync/{contentType}`,\n    'endpoints.longDistanceEVRouting': `${origin}/routing/1/calculateLongDistanceEVRoute/{locations}/{contentType}`,\n\n    //static map image\n    'endpoints.staticImage': `https://${origin}/map/1/staticimage`,\n\n    'vector.glyphs': 'https://' + origin + '/maps-sdk-js/6.23.0/glyphs/{fontstack}/{range}.pbf',\n    'vector.sprites': 'https://' + origin + '/maps-sdk-js/6.23.0/sprites/sprite',\n\n    //hosted styles\n    'endpoints.styles': `https://${origin}/style/1/style/{version}?map=basic_main&traffic_incidents=incidents_day&traffic_flow=flow_relative0&poi=poi_main`,\n\n    'origin': origin,\n    'hostedStylesVersion': hostedStylesVersion\n};\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n","var toInteger = require('./toInteger');\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nmodule.exports = isInteger;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import mainConfig from 'mainConfig';\nconst sdkInfo = mainConfig['analytics.header.sdkName'] + '/' + mainConfig['sdk.version'];\nconst headerName = mainConfig['analytics.header.name'];\n\nconst getGlobalAnalytics = () => {\n    global.__tomtomAnalyticsInfo_ = global.__tomtomAnalyticsInfo_ ? global.__tomtomAnalyticsInfo_ : {};\n    return global.__tomtomAnalyticsInfo_;\n};\n\nexport const getHeaderName = () => headerName;\n\nexport const getHeaderContent = () => {\n    const prodInfo = getGlobalAnalytics().productInfo !== undefined ? ' ' + getGlobalAnalytics().productInfo : '';\n    return sdkInfo + prodInfo;\n};\n\nexport const setProductInfo = (productId, productVersion) => {\n    if (!productId) {\n        throw new Error('ProductId needs to be set');\n    }\n    const prodVersion = productVersion || productVersion === 0 ? '/' + productVersion : '';\n    getGlobalAnalytics().productInfo = productId + prodVersion;\n};\n\nexport const getProductInfo = () => getGlobalAnalytics().productInfo;\n\nexport const addAnalyticsHeader = (req) => {\n    req.header(headerName, getHeaderContent());\n    return req;\n};\n\nexport const getAnalyticsHeader = () => {\n    const header = {};\n    header[headerName] = getHeaderContent();\n    return header;\n};\n","const DEFAULT_SERVICE_KEY = 'DEFAULT';\nconst EXTENDED_SEARCH = 'EXTENDED_SEARCH';\nconst MAP = 'MAP';\nconst ROUTING = 'ROUTING';\nconst SEARCH = 'SEARCH';\nconst TRAFFIC_FLOW = 'TRAFFIC_FLOW';\nconst TRAFFIC_INCIDENTS = 'TRAFFIC_INCIDENTS';\n\nexport const SERVICE_TYPES = {\n    'DEFAULT': DEFAULT_SERVICE_KEY,\n    EXTENDED_SEARCH,\n    MAP,\n    ROUTING,\n    SEARCH,\n    TRAFFIC_FLOW,\n    TRAFFIC_INCIDENTS\n};\n","/**\n * @ignore\n * Consider NaN and Infinite as not a number.\n * @param {*} val\n * @return {Boolean}\n */\nexport function isValidNumber(val) {\n    return typeof val === 'number' && isFinite(val);\n}\n\n/**\n * @ignore\n * @param {*} val\n * @return {Boolean}\n */\nexport function isNonEmptyString(val) {\n    return typeof val === 'string' && val.length > 0;\n}\n\n/**\n * @ignore\n * Used instead of Number.isNaN\n * @param {*} val\n * @return {Boolean}\n */\nfunction numberIsNaN(val) {\n    // only true for NaN\n    return val !== val; // eslint-disable-line no-self-compare\n}\n\n/**\n * @ignore\n * Returns TRUE if the value is not undefined, null, or NaN.\n * @param {*} val\n * @return {Boolean}\n */\nexport function isValidValue(val) {\n    return val !== undefined && val !== null && !numberIsNaN(val);\n}\n\nfunction cloneProperties(object, clonedObject) {\n    for (const property in object) {\n        if (Object.prototype.hasOwnProperty.call(object, property)) {\n            if (Array.isArray(object[property])) {\n                clonedObject[property] = object[property].slice(0);\n            } else if (typeof object[property] === 'object') {\n                clonedObject[property] = {};\n                cloneProperties(object[property], clonedObject[property]);\n            } else {\n                clonedObject[property] = object[property];\n            }\n        }\n    }\n}\n\nfunction getValueOrEmptyObject(value) {\n    return value === undefined ? {} : value;\n}\n\nfunction addNewField(result, field, newFields) {\n    result[field] = getValueOrEmptyObject(result[field]);\n    for (const property in newFields[field]) {\n        if (Object.prototype.hasOwnProperty.call(newFields[field], property)) {\n            result[field][property] = newFields[field][property];\n        }\n    }\n}\n\nexport function extend(obj, src) {\n    for (const key in src) {\n        if (Object.prototype.hasOwnProperty.call(src, key)) {\n            obj[key] = src[key];\n        }\n\n    }\n    return obj;\n}\n\nexport function validateAgainstSetOfValues(value, arrayOfValues, messageIfNotFound) {\n    if (arrayOfValues.indexOf(value) === -1) {\n        throw new TypeError(messageIfNotFound);\n    }\n    return value;\n}\nexport function encodeQuery(query) {\n    return encodeURIComponent(query);\n}\n\n/**\n * @ignore\n * Converts fields list in the following format into an JS Object\n * '{\n *     field1,\n *     field2,\n *     field3 {\n *         field4,\n *         field5\n *     }\n * }'\n * @param {String} str Object-like fields definition.\n * @returns {Object} Fields definition converted into an Object.\n */\nexport function convertFieldStringIntoObject(str) {\n    if (typeof str !== 'string') {\n        return {};\n    }\n    let index = -1;\n    const fieldRegex = new RegExp('[a-zA-Z]');\n    const parserRecursive = function(rootLevel) {\n        let obj = {};\n        let buffer = '';\n        while (++index < str.length) {\n            const char = str.charAt(index);\n            switch (char) {\n            case '}':\n                if (buffer !== '') {\n                    obj[buffer] = true;\n                }\n                return obj;\n            case '{':\n                if (buffer === '') {\n                    if (rootLevel) {\n                        obj = parserRecursive();\n                    } else {\n                        parserRecursive();\n                    }\n                } else {\n                    obj[buffer] = parserRecursive();\n                    buffer = '';\n                }\n                break;\n            case ',':\n                if (buffer !== '') {\n                    obj[buffer] = true;\n                }\n                buffer = '';\n                break;\n            default:\n                if (fieldRegex.test(char)) {\n                    buffer += char;\n                }\n            }\n        }\n        if (buffer !== '') {\n            obj[buffer] = true;\n        }\n        return obj;\n    };\n    return parserRecursive(true);\n}\n\nexport function clone(object) {\n    const clonedObject = {};\n    cloneProperties(object, clonedObject);\n    return clonedObject;\n}\n\nexport const pointRegex = /(-?\\d+(?:\\.\\d+)?)(?:\\s+|\\s*,\\s*)(-?\\d+(?:\\.\\d+)?)/;\n\nexport const circleRegex = /circle\\((-?\\d+(?:\\.\\d+)?)\\s*,\\s*(-?\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+)\\)/;\n\nexport function addFields(newFields, defaultFields = {}) {\n    const result = { ...defaultFields };\n    for (const field in newFields) {\n        if (Object.prototype.hasOwnProperty.call(newFields, field)) {\n            addNewField(result, field, newFields);\n        }\n    }\n    return result;\n}\n","const mappings = {\n    'af-ZA': {\n        'synonyms': {\n            'af': null,\n            'afr': null,\n            'af-za': null,\n            'af_za': null,\n            'afrikaans': null\n        },\n        'label': 'Afrikaans'\n    },\n    'ar': {\n        'synonyms': {\n            'ar': null,\n            'ara': null,\n            'ar-ar': null,\n            'ar_ar': null,\n            'arabic': null\n        },\n        'label': 'Arabic'\n    },\n    'bg-BG': {\n        'synonyms': {\n            'bg': null,\n            'bul': null,\n            'bg-bg': null,\n            'bg_bg': null,\n            'bulgarian': null\n        },\n        'label': 'Bulgarian'\n    },\n    'ca-ES': {\n        'synonyms': {\n            'ca': null,\n            'cat': null,\n            'ca-fr': null,\n            'ca_fr': null,\n            'ca-es': null,\n            'ca_es': null,\n            'catalan': null\n        },\n        'label': 'Catalan'\n    },\n    'zh-CN': {\n        'synonyms': {\n            'zh-cn': null,\n            'zh_cn': null\n        },\n        'label': 'Chinese (PRC)'\n    },\n    'zh-TW': {\n        'synonyms': {\n            'zh': null,\n            'chi': null,\n            'zh-tw': null,\n            'zh_tw': null,\n            'chinese': null\n        },\n        'label': 'Chinese (Taiwan)'\n    },\n    'cs-CZ': {\n        'synonyms': {\n            'cs': null,\n            'cz': null,\n            'cze': null,\n            'cs-cz': null,\n            'cs_cz': null,\n            'czech': null\n        },\n        'label': 'Czech'\n    },\n    'da-DK': {\n        'synonyms': {\n            'da': null,\n            'dan': null,\n            'da-dk': null,\n            'da_dk': null,\n            'danish': null\n        },\n        'label': 'Danish'\n    },\n    'nl-BE': {\n        'synonyms': {\n            'nl-be': null,\n            'nl_be': null,\n            'dutch belgium': null\n        },\n        'label': 'Dutch (Belgium)'\n    },\n    'nl-NL': {\n        'synonyms': {\n            'nl': null,\n            'dut': null,\n            'nl-nl': null,\n            'nl_nl': null,\n            'dutch': null\n        },\n        'label': 'Dutch'\n    },\n    'en-AU': {\n        'synonyms': {\n            'aue': null,\n            'aus': null,\n            'en-au': null,\n            'en_au': null,\n            'english au': null\n        },\n        'label': 'English (Australia)'\n    },\n    'en-GB': {\n        'synonyms': {\n            'en': null,\n            'eng': null,\n            'en-gb': null,\n            'en_gb': null,\n            'english': null,\n            'default': null\n        },\n        'label': 'English (Great Britain)'\n    },\n    'en-NZ': {\n        'synonyms': {\n            'en-nz': null,\n            'en_nz': null,\n            'english new zealand': null\n        },\n        'label': 'English (New Zealand)'\n    },\n    'en-US': {\n        'synonyms': {\n            'us': null,\n            'ame': null,\n            'en-us': null,\n            'en_us': null,\n            'english us': null\n        },\n        'label': 'English (US)'\n    },\n    'et-EE': {\n        'synonyms': {\n            'et-ee': null,\n            'et_ee': null,\n            'estonian': null\n        },\n        'label': 'Estonian'\n    },\n    'eu-ES': {\n        'synonyms': {\n            'eu-es': null,\n            'eu_es': null,\n            'basque': null\n        },\n        'label': 'Basque (Spain)'\n    },\n    'fi-FI': {\n        'synonyms': {\n            'fi': null,\n            'fin': null,\n            'fi-fi': null,\n            'fi_fi': null,\n            'finnish': null\n        },\n        'label': 'Finnish'\n    },\n    'fr-CA': {\n        'synonyms': {\n            'fr-ca': null,\n            'fr_ca': null,\n            'french canadian': null\n        },\n        'label': 'French (Canadian)'\n    },\n    'fr-FR': {\n        'synonyms': {\n            'fr': null,\n            'fre': null,\n            'fr-fr': null,\n            'fr_fr': null,\n            'french': null\n        },\n        'label': 'French'\n    },\n    'de-DE': {\n        'synonyms': {\n            'de': null,\n            'ger': null,\n            'de-de': null,\n            'de_de': null,\n            'german': null\n        },\n        'label': 'German'\n    },\n    'el-GR': {\n        'synonyms': {\n            'el': null,\n            'gre': null,\n            'el-gr': null,\n            'el_gr': null,\n            'greek': null\n        },\n        'label': 'Greek'\n    },\n    'gl-ES': {\n        'synonyms': {\n            'gl-es': null,\n            'gl_es': null,\n            'galician': null\n        },\n        'label': 'Galician (Spain)'\n    },\n    'he-IL': {\n        'synonyms': {\n            'he-il': null,\n            'he_il': null,\n            'hebrew': null\n        },\n        'label': 'Hebrew (Israel)'\n    },\n    'hr-HR': {\n        'synonyms': {\n            'hr': null,\n            'hr-hr': null,\n            'hr_hr': null,\n            'croatian': null\n        },\n        'label': 'Croatian'\n    },\n    'hu-HU': {\n        'synonyms': {\n            'hu': null,\n            'hun': null,\n            'hu-hu': null,\n            'hu_hu': null,\n            'hungarian': null\n        },\n        'label': 'Hungarian'\n    },\n    'id-ID': {\n        'synonyms': {\n            'id': null,\n            'ind': null,\n            'id-id': null,\n            'id_id': null,\n            'indonesian': null\n        },\n        'label': 'Indonesian'\n    },\n    'it-IT': {\n        'synonyms': {\n            'it': null,\n            'ita': null,\n            'it-it': null,\n            'it_it': null,\n            'italian': null\n        },\n        'label': 'Italian'\n    },\n    'kk-KZ': {\n        'synonyms': {\n            'kk-kz': null,\n            'kk_kz': null,\n            'kazakh': null\n        },\n        'label': 'Kazakh (Kazakhstan)'\n    },\n    'lv-LV': {\n        'synonyms': {\n            'lt': null,\n            'lv-lv': null,\n            'lv_lv': null,\n            'latvian': null\n        },\n        'label': 'Latvian'\n    },\n    'lt-LT': {\n        'synonyms': {\n            'lt': null,\n            'lit': null,\n            'lt-lt': null,\n            'lt_lt': null,\n            'lithuanian': null\n        },\n        'label': 'Lithuanian'\n    },\n    'ms-MY': {\n        'synonyms': {\n            'ms': null,\n            'mal': null,\n            'ms-my': null,\n            'ms_my': null,\n            'malay': null\n        },\n        'label': 'Malay'\n    },\n    'no-NO': {\n        'synonyms': {\n            'no': null,\n            'nb': null,\n            'nor': null,\n            'nb-no': null,\n            'nb_no': null,\n            'no-no': null,\n            'no_no': null,\n            'norwegian': null\n        },\n        'label': 'Norwegian'\n    },\n    'pl-PL': {\n        'synonyms': {\n            'pl': null,\n            'pol': null,\n            'pl-pl': null,\n            'pl_pl': null,\n            'polish': null\n        },\n        'label': 'Polish'\n    },\n    'ro-RO': {\n        'synonyms': {\n            'ro-ro': null,\n            'ro_ro': null,\n            'romanian': null\n        },\n        'label': 'Romanian'\n    },\n    'ru-RU': {\n        'synonyms': {\n            'ru': null,\n            'rus': null,\n            'ru-ru': null,\n            'ru_ru': null,\n            'russian': null\n        },\n        'label': 'Russian'\n    },\n    'sr-RS': {\n        'synonyms': {\n            'sr-rs': null,\n            'sr_rs': null,\n            'serbian': null\n        },\n        'label': 'Serbian'\n    },\n    'sk-SK': {\n        'synonyms': {\n            'sk': null,\n            'slo': null,\n            'sk-sk': null,\n            'sk_sk': null,\n            'slovak': null\n        },\n        'label': 'Slovak'\n    },\n    'sl-SI': {\n        'synonyms': {\n            'sl': null,\n            'slv': null,\n            'sl-si': null,\n            'sl_si': null,\n            'slovenian': null\n        },\n        'label': 'Slovenian'\n    },\n    'es-ES': {\n        'synonyms': {\n            'es': null,\n            'spa': null,\n            'es-es': null,\n            'es_es': null,\n            'spanish': null\n        },\n        'label': 'Spanish'\n    },\n    'es-419': {\n        'synonyms': {\n            'es-419': null,\n            'es_419': null,\n            'latin america spanish': null\n        },\n        'label': 'Latin American Spanish'\n    },\n    'sv-SE': {\n        'synonyms': {\n            'sv': null,\n            'swe': null,\n            'sv-se': null,\n            'sv_se': null,\n            'swedish': null\n        },\n        'label': 'Swedish'\n    },\n    'th-TH': {\n        'synonyms': {\n            'th': null,\n            'tha': null,\n            'th-th': null,\n            'th_th': null,\n            'thai': null\n        },\n        'label': 'Thai'\n    },\n    'tr-TR': {\n        'synonyms': {\n            'tr': null,\n            'tur': null,\n            'tr-tr': null,\n            'tr_tr': null,\n            'turkish': null\n        },\n        'label': 'Turkish'\n    },\n    'uk-UA': {\n        'synonyms': {\n            'uk-ua': null,\n            'uk_ua': null,\n            'ukrainian': null\n        },\n        'label': 'Ukrainian'\n    },\n    'vi-VN': {\n        'synonyms': {\n            'vi-vn': null,\n            'vi_vn': null,\n            'vietnamese': null\n        },\n        'label': 'Vietnamese (Viet Nam)'\n    },\n    'NGT': {\n        'synonyms': {\n            'ngt': null\n        },\n        'label': 'Neutral Ground Truth'\n    },\n    'NGT-Latn': {\n        'synonyms': {\n            'ngt-latn': null\n        },\n        'label': 'Neutral Ground Truth - Latin exonyms'\n    },\n    'en-CA': {\n        'synonyms': {\n            'en-ca': null,\n            'en_ca': null,\n            'english canadian': null\n        },\n        'label': 'English (Canada)'\n    },\n    'ko-KR': {\n        'synonyms': {\n            'ko': null,\n            'kor': null,\n            'ko-kr': null,\n            'ko_kr': null,\n            'korean': null\n        },\n        'label': 'Korean'\n    },\n    'nb-NO': {\n        'synonyms': {\n            'nb': null,\n            'nor': null,\n            'nb-no': null,\n            'nb_no': null,\n            'norwegian': null\n        },\n        'label': 'Norwegian'\n    },\n    'pt-BR': {\n        'synonyms': {\n            'br': null,\n            'pob': null,\n            'pt-br': null,\n            'pt_br': null,\n            'portuguese br': null\n        },\n        'label': 'Portuguese (BR)'\n    },\n    'pt-PT': {\n        'synonyms': {\n            'pt': null,\n            'por': null,\n            'pt-pt': null,\n            'pt_pt': null,\n            'portuguese': null\n        },\n        'label': 'Portuguese'\n    },\n    'ru-Latn-RU': {\n        'synonyms': {\n            'ru-latn-ru': null,\n            'ru_latn_ru': null\n        },\n        'label': 'Russian (Latin)'\n    },\n    'ru-Cyrl-RU': {\n        'synonyms': {\n            'ru-cyrl-ru': null,\n            'ru_cyrl_ru': null\n        },\n        'label': 'Russian (Cyrlic)'\n    },\n    'es-MX': {\n        'synonyms': {\n            'mx': null,\n            'spm': null,\n            'es-mx': null,\n            'es_mx': null,\n            'spanish mx': null\n        },\n        'label': 'Spanish (Mexico)'\n    },\n    'defaultValue': {\n        'value': 'en-GB',\n        'label': 'English (Great Britain)'\n    }\n};\n\nexport const routing = {\n    'ar': mappings.ar,\n    'af-ZA': mappings['af-ZA'],\n    'bg-BG': mappings['bg-BG'],\n    'zh-TW': mappings['zh-TW'],\n    'cs-CZ': mappings['cs-CZ'],\n    'da-DK': mappings['da-DK'],\n    'nl-NL': mappings['nl-NL'],\n    'en-GB': mappings['en-GB'],\n    'en-US': mappings['en-US'],\n    'fi-FI': mappings['fi-FI'],\n    'fr-FR': mappings['fr-FR'],\n    'de-DE': mappings['de-DE'],\n    'el-GR': mappings['el-GR'],\n    'hu-HU': mappings['hu-HU'],\n    'id-ID': mappings['id-ID'],\n    'it-IT': mappings['it-IT'],\n    'ko-KR': mappings['ko-KR'],\n    'lt-LT': mappings['lt-LT'],\n    'ms-MY': mappings['ms-MY'],\n    'nb-NO': mappings['nb-NO'],\n    'pl-PL': mappings['pl-PL'],\n    'pt-BR': mappings['pt-BR'],\n    'pt-PT': mappings['pt-PT'],\n    'ru-RU': mappings['ru-RU'],\n    'sk-SK': mappings['sk-SK'],\n    'sl-SI': mappings['sl-SI'],\n    'es-ES': mappings['es-ES'],\n    'es-MX': mappings['es-MX'],\n    'sv-SE': mappings['sv-SE'],\n    'th-TH': mappings['th-TH'],\n    'tr-TR': mappings['tr-TR'],\n    'defaultValue': mappings.defaultValue\n};\n\nexport const search = {\n    'NGT': mappings.NGT,\n    'NGT-Latn': mappings['NGT-Latn'],\n    'af-ZA': mappings['af-ZA'],\n    'ar': mappings.ar,\n    'eu-ES': mappings['eu-ES'],\n    'bg-BG': mappings['bg-BG'],\n    'ca-ES': mappings['ca-ES'],\n    'zh-CN': mappings['zh-CN'],\n    'zh-TW': mappings['zh-TW'],\n    'cs-CZ': mappings['cs-CZ'],\n    'da-DK': mappings['da-DK'],\n    'nl-BE': mappings['nl-BE'],\n    'nl-NL': mappings['nl-NL'],\n    'en-AU': mappings['en-AU'],\n    'en-NZ': mappings['en-NZ'],\n    'en-GB': mappings['en-GB'],\n    'en-US': mappings['en-US'],\n    'et-EE': mappings['et-EE'],\n    'fi-FI': mappings['fi-FI'],\n    'fr-CA': mappings['fr-CA'],\n    'fr-FR': mappings['fr-FR'],\n    'gl-ES': mappings['gl-ES'],\n    'de-DE': mappings['de-DE'],\n    'el-GR': mappings['el-GR'],\n    'hr-HR': mappings['hr-HR'],\n    'he-IL': mappings['he-IL'],\n    'hu-HU': mappings['hu-HU'],\n    'id-ID': mappings['id-ID'],\n    'it-IT': mappings['it-IT'],\n    'kk-KZ': mappings['kk-KZ'],\n    'lv-LV': mappings['lv-LV'],\n    'lt-LT': mappings['lt-LT'],\n    'ms-MY': mappings['ms-MY'],\n    'no-NO': mappings['no-NO'],\n    'nb-NO': mappings['nb-NO'],\n    'pl-PL': mappings['pl-PL'],\n    'pt-BR': mappings['pt-BR'],\n    'pt-PT': mappings['pt-PT'],\n    'ro-RO': mappings['ro-RO'],\n    'ru-RU': mappings['ru-RU'],\n    'ru-Latn-RU': mappings['ru-Latn-RU'],\n    'ru-Cyrl-RU': mappings['ru-Cyrl-RU'],\n    'sr-RS': mappings['sr-RS'],\n    'sk-SK': mappings['sk-SK'],\n    'sl-SI': mappings['sl-SI'],\n    'es-ES': mappings['es-ES'],\n    'es-419': mappings['es-419'],\n    'sv-SE': mappings['sv-SE'],\n    'th-TH': mappings['th-TH'],\n    'tr-TR': mappings['tr-TR'],\n    'uk-UA': mappings['uk-UA'],\n    'vi-VN': mappings['vi-VN'],\n    'defaultValue': mappings.defaultValue\n};\n\nexport const maps = {\n    'NGT': mappings.NGT,\n    'NGT-Latn': mappings['NGT-Latn'],\n    'ar': mappings.ar,\n    'bg-BG': mappings['bg-BG'],\n    'zh-TW': mappings['zh-TW'],\n    'cs-CZ': mappings['cs-CZ'],\n    'da-DK': mappings['da-DK'],\n    'nl-NL': mappings['nl-NL'],\n    'en-AU': mappings['en-AU'],\n    'en-CA': mappings['en-CA'],\n    'en-GB': mappings['en-GB'],\n    'en-NZ': mappings['en-NZ'],\n    'en-US': mappings['en-US'],\n    'fi-FI': mappings['fi-FI'],\n    'fr-FR': mappings['fr-FR'],\n    'de-DE': mappings['de-DE'],\n    'el-GR': mappings['el-GR'],\n    'hu-HU': mappings['hu-HU'],\n    'id-ID': mappings['id-ID'],\n    'it-IT': mappings['it-IT'],\n    'ko-KR': mappings['ko-KR'],\n    'lt-LT': mappings['lt-LT'],\n    'ms-MY': mappings['ms-MY'],\n    'nb-NO': mappings['nb-NO'],\n    'pl-PL': mappings['pl-PL'],\n    'pt-BR': mappings['pt-BR'],\n    'pt-PT': mappings['pt-PT'],\n    'ru-RU': mappings['ru-RU'],\n    'ru-Latn-RU': mappings['ru-Latn-RU'],\n    'ru-Cyrl-RU': mappings['ru-Cyrl-RU'],\n    'sk-SK': mappings['sk-SK'],\n    'sl-SI': mappings['sl-SI'],\n    'es-ES': mappings['es-ES'],\n    'es-MX': mappings['es-MX'],\n    'sv-SE': mappings['sv-SE'],\n    'th-TH': mappings['th-TH'],\n    'tr-TR': mappings['tr-TR'],\n    'defaultValue': mappings.defaultValue\n};\n\nexport const incidentV5 = {\n    'ar': mappings.ar,\n    'ca-ES': mappings['ca-ES'],\n    'cs-CZ': mappings['cs-CZ'],\n    'da-DK': mappings['da-DK'],\n    'de-DE': mappings['de-DE'],\n    'el-GR': mappings['el-GR'],\n    'en-GB': mappings['en-GB'],\n    'en-US': mappings['en-US'],\n    'es-ES': mappings['es-ES'],\n    'et-EE': mappings['et-EE'],\n    'fi-FI': mappings['fi-FI'],\n    'fr-FR': mappings['fr-FR'],\n    'he-IL': mappings['he-IL'],\n    'hu-HU': mappings['hu-HU'],\n    'id-ID': mappings['id-ID'],\n    'it-IT': mappings['it-IT'],\n    'lt-LT': mappings['lt-LT'],\n    'lv-LV': mappings['lv-LV'],\n    'nb-NO': mappings['nb-NO'],\n    'nl-NL': mappings['nl-NL'],\n    'pl-PL': mappings['pl-PL'],\n    'pt-PT': mappings['pt-PT'],\n    'ro-RO': mappings['ro-RO'],\n    'ru-RU': mappings['ru-RU'],\n    'sk-SK': mappings['sk-SK'],\n    'sv-SE': mappings['sv-SE'],\n    'th-TH': mappings['th-TH'],\n    'tr-TR': mappings['tr-TR'],\n    'zh-TW': mappings['zh-TW'],\n    'defaultValue': mappings.defaultValue\n};\n\nexport const defaultLanguage = 'en-GB';\n","import isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\n\nexport function keyValidator(value) {\n    if (!isString(value) && !isFunction(value)) {\n        throw new TypeError('Unsupported key type', value);\n    }\n    return value;\n}\n","/**\n * @ignore\n * Checks whether the given parameter is a float number.\n * @param {*} value The value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function numberValidator(value) {\n    const numValue = parseFloat(value);\n    if (!isFinite(numValue)) {\n        throw new TypeError('a number is expected, but ' + value + ' [' + typeof value + '] given');\n    }\n    return numValue;\n}\n","import {validateAgainstSetOfValues} from '../utils';\n\nexport function oneOfValueValidator(values, paramName) {\n    return (value) => {\n        const message = 'Supported ' + paramName + ' is expected (one of: ' + values + '), but ' + value +\n            ' [' + typeof value + '] was given.';\n        return validateAgainstSetOfValues(value, values, message);\n    };\n}\n","import {pointRegex, circleRegex, validateAgainstSetOfValues, convertFieldStringIntoObject} from './utils';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport isNil from 'lodash/isNil';\nimport isInteger from 'lodash/isInteger';\nimport {\n    routing as routingLanguageMap,\n    search as searchLanguageMap\n} from '../config/language/mappings';\n\n// Search supported language codes\n// Up-to-date list available on:\n// https://developer.tomtom.com/search-api/search-api-documentation/supported-languages\n\n// Up-to-date list available on:\n// eslint-disable-next-line\n// https://developer.tomtom.com/search-api-and-extended-search-api/search-api-and-extended-search-api-documentation/supported-connector-types\nconst connectorNames = [\n    'StandardHouseholdCountrySpecific',\n    'IEC62196Type2CableAttached',\n    'IEC60309AC1PhaseBlue',\n    'IEC60309AC3PhaseRed',\n    'IEC62196Type2Outlet',\n    'IEC62196Type1CCS',\n    'IEC62196Type2CCS',\n    'IEC60309DCWhite',\n    'IEC62196Type1',\n    'IEC62196Type3',\n    'GBT20234Part2',\n    'GBT20234Part3',\n    'Chademo',\n    'Tesla'\n];\n\n// Up-to-date list available on:\n// https://developer.tomtom.com/routing-api/routing-api-documentation/long-distance-ev-routing\nconst plugTypes = [\n    'Small_Paddle_Inductive',\n    'Large_Paddle_Inductive',\n    'IEC_60309_1_Phase',\n    'IEC_60309_3_Phase',\n    'IEC_62196_Type_1_Outlet',\n    'IEC_62196_Type_2_Outlet',\n    'IEC_62196_Type_3_Outlet',\n    'IEC_62196_Type_1_Connector_Cable_Attached',\n    'IEC_62196_Type_2_Connector_Cable_Attached',\n    'IEC_62196_Type_3_Connector_Cable_Attached',\n    'Combo_to_IEC_62196_Type_1_Base',\n    'Combo_to_IEC_62196_Type_2_Base',\n    'Type_E_French_Standard_CEE_7_5',\n    'Type_F_Schuko_CEE_7_4',\n    'Type_G_British_Standard_BS_1363',\n    'Type_J_Swiss_Standard_SEV_1011',\n    'China_GB_Part_2',\n    'China_GB_Part_3',\n    'IEC_309_DC_Plug',\n    'AVCON_Connector',\n    'Tesla_Connector',\n    'NEMA_5_20',\n    'CHAdeMO',\n    'SAE_J1772',\n    'TEPCO',\n    'Better_Place_Socket',\n    'Marechal_Socket',\n    'Standard_Household_Country_Specific'\n];\n\n// Up-to-date list available on:\n// https://developer.tomtom.com/routing-api/routing-api-documentation/long-distance-ev-routing\nconst facilityTypes = [\n    'Battery_Exchange',\n    'Charge_100_to_120V_1_Phase_at_8A',\n    'Charge_100_to_120V_1_Phase_at_10A',\n    'Charge_100_to_120V_1_Phase_at_12A',\n    'Charge_100_to_120V_1_Phase_at_13A',\n    'Charge_100_to_120V_1_Phase_at_16A',\n    'Charge_100_to_120V_1_Phase_at_32A',\n    'Charge_200_to_240V_1_Phase_at_8A',\n    'Charge_200_to_240V_1_Phase_at_10A',\n    'Charge_200_to_240V_1_Phase_at_12A',\n    'Charge_200_to_240V_1_Phase_at_16A',\n    'Charge_200_to_240V_1_Phase_at_20A',\n    'Charge_200_to_240V_1_Phase_at_32A',\n    'Charge_200_to_240V_1_Phase_above_32A',\n    'Charge_200_to_240V_3_Phase_at_16A',\n    'Charge_200_to_240V_3_Phase_at_32A',\n    'Charge_380_to_480V_3_Phase_at_16A',\n    'Charge_380_to_480V_3_Phase_at_32A',\n    'Charge_380_to_480V_3_Phase_at_63A',\n    'Charge_50_to_500V_Direct_Current_at_62A_25kW',\n    'Charge_50_to_500V_Direct_Current_at_125A_50kW',\n    'Charge_200_to_450V_Direct_Current_at_200A_90kW',\n    'Charge_200_to_480V_Direct_Current_at_255A_120kW',\n    'Charge_Direct_Current_at_20kW',\n    'Charge_Direct_Current_at_50kW',\n    'Charge_Direct_Current_above_50kW'\n];\n\nconst mapsLangCodes = [\n    'NGT', 'NGT-Latn', 'ar', 'bg-BG', 'zh-TW', 'cs-CZ', 'da-DK', 'nl-NL', 'en-AU', 'en-CA', 'en-GB', 'en-NZ',\n    'en-US', 'fi-FI', 'fr-FR', 'de-DE', 'el-GR', 'hu-HU', 'id-ID', 'it-IT', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO',\n    'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'ru-Latn-RU', 'ru-Cyrl-RU', 'sk-SK', 'sl-SI', 'es-ES', 'es-MX', 'sv-SE',\n    'th-TH', 'tr-TR'\n];\n\n// Up-to-date list available on:\n// https://developer.tomtom.com/search-api/search-api-documentation-search/fuzzy-search [fuelSet] section\nconst fuelTypes = [\n    'Petrol', 'LPG', 'Diesel', 'Biodiesel', 'DieselForCommercialVehicles',\n    'E85', 'LNG', 'CNG', 'Hydrogen', 'AdBlue'\n];\n\nconst incidentDetailsAvailableFields = `\n    {\n        incidents {\n            type,\n            geometry {\n                type,\n                coordinates\n            },\n            properties {\n                id,\n                iconCategory,\n                magnitudeOfDelay,\n                events {\n                    description,\n                    code,\n                    iconCategory\n                },\n                startTime,\n                endTime,\n                from,\n                to,\n                length,\n                delay,\n                roadNumbers,\n                aci {\n                    probabilityOfOccurrence,\n                    numberOfReports,\n                    lastReportTime\n                }\n            }\n        }\n    }`;\n\nfunction isDateRfc3339(dateString) {\n    return dateString.toString()\n        .match(/(\\d\\d\\d\\d)(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))/);\n}\n\nfunction hasBoundingBoxFields(bbox) {\n    return Object.prototype.hasOwnProperty.call(bbox, 'minLon') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'maxLon') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'minLat') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'maxLat');\n}\n\nfunction checkBBoxNormalized(bbox) {\n    return parseFloat(bbox.maxLat) <= parseFloat(bbox.minLat) || parseFloat(bbox.maxLon) <= parseFloat(bbox.minLon);\n}\n\nfunction hasChargingCurveSupportPointFields(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'chargeInkWh') &&\n        Object.prototype.hasOwnProperty.call(value, 'timeToChargeInSeconds');\n}\n\nfunction hasChargingConnectionFields(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'facilityType') &&\n        Object.prototype.hasOwnProperty.call(value, 'plugType');\n}\n\nfunction hasChargingModeFields(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'chargingConnections') &&\n        Object.prototype.hasOwnProperty.call(value, 'chargingCurve');\n}\n\nfunction isNumberInInterval(numValue, min, max) {\n    return isFinite(numValue) && numValue >= min && numValue <= max;\n}\n\nfunction checkArray(array) {\n    return array.constructor.toString().indexOf('Array') < 0;\n}\nfunction throwTypeErrorWhen(condition, message) {\n    if (condition) {\n        throw new TypeError(message);\n    }\n}\n\nfunction isPointValid(point) {\n    if (!isString(point) || !pointRegex.test(point)) {\n        throw new TypeError('A point is expected, but ' + point + ' [' + typeof point + '] given');\n    }\n    return true;\n}\n\nfunction checkLongitude(value) {\n    const numValue = parseFloat(value);\n    if (!isNumberInInterval(numValue, -180, 180)) {\n        throw new TypeError('an longitude <-180,180> is expected, but ' +\n            value + ' [' + typeof value + '] given');\n    }\n    return numValue;\n}\n\nfunction checkChargingMode(chargingMode) {\n    throwTypeErrorWhen(!hasChargingModeFields(chargingMode),\n        'a chargingMode is expected, but ' + chargingMode +\n        ' [' + typeof chargingMode + '] given');\n\n    checkChargingCurve(chargingMode.chargingCurve);\n    checkChargingConnections(chargingMode.chargingConnections);\n\n    return chargingMode;\n}\n\nfunction checkChargingCurve(chargingCurve) {\n    if (chargingCurve.length > 10) {\n        throw new Error('Given chargingCurve array contains more than 10 elements.');\n    }\n\n    chargingCurve.forEach((element) => {\n        checkChargingCurveSupportPoint(element);\n    });\n\n    return chargingCurve;\n}\n\nfunction checkChargingCurveSupportPoint(chargingCurveSupportPoint) {\n    throwTypeErrorWhen(!hasChargingCurveSupportPointFields(chargingCurveSupportPoint),\n        'a chargingCurveSupportPoint is expected, but ' + chargingCurveSupportPoint +\n        ' [' + typeof chargingCurveSupportPoint + '] given');\n\n    throwTypeErrorWhen(!isNumberInInterval(chargingCurveSupportPoint.chargeInkWh, 0, Number.MAX_VALUE),\n        'a chargeInkWh is expected, but ' + chargingCurveSupportPoint.chargeInkWh +\n        ' [' + typeof chargingCurveSupportPoint.chargeInkWh + '] given');\n\n    throwTypeErrorWhen(!isNumberInInterval(chargingCurveSupportPoint.timeToChargeInSeconds, 0, Number.MAX_VALUE),\n        'a timeToChargeInSeconds is expected, but ' + chargingCurveSupportPoint.timeToChargeInSeconds +\n        ' [' + typeof chargingCurveSupportPoint.timeToChargeInSeconds + '] given');\n\n    return chargingCurveSupportPoint;\n}\n\nfunction checkChargingConnection(chargingConnection) {\n    throwTypeErrorWhen(!hasChargingConnectionFields(chargingConnection),\n        'a chargingConnection is expected, but ' + chargingConnection +\n        ' [' + typeof chargingConnection + '] given');\n\n    checkPlugType(chargingConnection.plugType);\n    checkFacilityType(chargingConnection.facilityType);\n\n    return chargingConnection;\n}\n\nfunction checkPlugType(plugType) {\n    const message = 'Plug type is expected to be one of supported values, but ' +\n        plugType + ' [' + typeof plugType + '] given';\n    return validateAgainstSetOfValues(plugType, plugTypes, message);\n}\n\nfunction checkFacilityType(facilityType) {\n    const message = 'Facility type is expected to be one of supported values, but ' +\n    facilityType + ' [' + typeof facilityType + '] given';\n    return validateAgainstSetOfValues(facilityType, facilityTypes, message);\n}\n\nfunction checkChargingConnections(chargingConnections) {\n    if (chargingConnections.length > 20) {\n        throw new Error('Given chargingConnections array contains more than 20 elements.');\n    }\n\n    chargingConnections.forEach((element) => {\n        checkChargingConnection(element);\n    });\n\n    return chargingConnections;\n}\n\nfunction checkLatitude(value) {\n    const numValue = parseFloat(value);\n    if (!isNumberInInterval(numValue, -90, 90)) {\n        throw new TypeError('an latitude <-90,90> is expected, but ' + value + ' [' + typeof value + '] given');\n    }\n    return numValue;\n}\n\nfunction checkPointObjectOrArray(point) {\n    let lat, lon;\n    if (Array.isArray(point)) {\n        if (!(point.length === 2 && point.filter(isFinite).length === 2)) {\n            throw new TypeError('Invalid point array in route points');\n        }\n        lat = point[1];\n        lon = point[0];\n    } else {\n        if (!(isFinite(point.lat) && (isFinite(point.lon) || isFinite(point.lng)))) {\n            throw new TypeError('Invalid point object in route points');\n        }\n        lat = point.lat;\n        lon = typeof point.lon !== 'undefined' ? point.lon : point.lng;\n    }\n\n    if (!(typeof lat === 'number' || lat instanceof Number) ||\n        !(typeof lon === 'number' || lon instanceof Number)) {\n        throw new TypeError('Lat and lon components of point should be finite numbers');\n    }\n\n    checkLongitude(lon);\n    checkLatitude(lat);\n}\n\nfunction validateField(options, value) {\n    for (const key in options) {\n        if (Object.prototype.hasOwnProperty.call(options, key)) {\n            if (Object.prototype.hasOwnProperty.call(value, key) && Array.isArray(options[key].validators)) {\n                for (const validator of options[key].validators) {\n                    if (isFunction(validator)) {\n                        value[key] = validator(value[key]);\n                    }\n                }\n            }\n\n            if (options[key].required === true && !Object.prototype.hasOwnProperty.call(value, key)) {\n                throw new Error('Missing required ' + key);\n            }\n        }\n    }\n}\n\nfunction validateNumberInInterval(min, max, errorMsg, integerRequired) {\n    if (isNil(min) || isNil(max)) {\n        throw new TypeError('Number in interval validator requires min and max value parameters');\n    }\n\n    return function(value) {\n        const numValue = parseFloat(value);\n\n        if (!isNumberInInterval(numValue, min, max) || (integerRequired && !isInteger(numValue))) {\n            throw new TypeError(errorMsg + ', but ' + value + ' [' + typeof value + '] given');\n        }\n\n        return numValue;\n    };\n}\n\nfunction validateIntInInterval(min, max, errorMsg) {\n    return validateNumberInInterval(min, max, errorMsg, true);\n}\n\nfunction validateAllowedTypes(value, message, allowedTypes) {\n    if (isString(value)) {\n        value = value.split(',');\n    }\n\n    if (Array.isArray(value) && value.length > 0) {\n        for (let i = 0; i < value.length; i += 1) {\n            validateAgainstSetOfValues(value[i], allowedTypes, message);\n        }\n\n        return value.join(',');\n    } else {\n        throw new TypeError(message);\n    }\n}\n\nfunction checkDateRfc3339(value, paramName) {\n    if (!isDateRfc3339(value)) {\n        throw new TypeError(`Invalid \"${paramName}\" parameter value.\n        Valid format: YYYY-MM-DDThh:mm:ss.SSSTZD`);\n    }\n\n    return value;\n}\n\nexport function trackingId(value) {\n    if (isString(value) && /^[a-zA-Z0-9-]{1,100}$/.test(value)) {\n        return value;\n    } else {\n        throw new TypeError('a string matching regular expression ^[a-zA-Z0-9-]{1,100}$ is expected, but ' +\n            value + ' [' + typeof value + '] given');\n    }\n}\n\n/**\n * @ignore\n * Casts to boolean.\n * @param {*} value\n * @return {Boolean} A casted value.\n */\nexport function bool(value) {\n    return value === 'false' ? false : Boolean(value);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is an integer greater than or equal to 0.\n * @param {*} value The value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function naturalInteger(value) {\n    const numValue = parseFloat(value);\n    if (!isInteger(numValue) || numValue < 0) {\n        throw new TypeError('a natural integer (greater than or equal 0) is expected, but ' +\n            value + ' [' + typeof value + '] given');\n    }\n    return numValue;\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is an integer greater than 0.\n * @param {*} value The value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function positiveInteger(value) {\n    const numValue = parseFloat(value);\n    if (!isInteger(numValue) || numValue <= 0) {\n        throw new TypeError('a positive integer (greater than 0) is expected, but ' +\n            value + ' [' + typeof value + '] given');\n    }\n    return numValue;\n}\n\nexport function integer(value) {\n    const numValue = parseFloat(value);\n    if (!isInteger(numValue)) {\n        throw new TypeError('an integer is expected, but ' + value + ' [' + typeof value + '] given');\n    }\n    return numValue;\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a longitude and casts to a proper interval <-180, 180>.\n * @param {*} value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function longitude(value) {\n    return checkLongitude(value);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a latitude and casts to a proper interval <-90, 90>\n * @param {*} value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function latitude(value) {\n    return checkLatitude(value);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a valid bounding box. Contains the whole world and a half on each\n * side.\n * @param {*} bbox The bounding box\n * @return {Object} bbox\n * @throws {TypeError} for an invalid parameter.\n */\nexport function validateBoundingBox(bbox) {\n    throwTypeErrorWhen(!hasBoundingBoxFields(bbox),\n        'a bounding box is expected, but ' + bbox + ' [' + typeof bbox + '] given');\n\n    throwTypeErrorWhen(!isNumberInInterval(bbox.minLat, -90, 90),\n        'a bounding box minimal latitude is expected ' + bbox.minLat + ' [' + typeof bbox.minLat + '] given');\n\n    throwTypeErrorWhen(!isNumberInInterval(bbox.maxLat, -90, 90),\n        'a bounding box maximal latitude is expected ' + bbox.maxLat + ' [' + typeof bbox.maxLat + '] given');\n\n    throwTypeErrorWhen(!isNumberInInterval(bbox.minLon, -270, 180),\n        'a bounding box minimal longitude is expected ' + bbox.minLon + ' [' + typeof bbox.minLon + '] given');\n\n    throwTypeErrorWhen(!isNumberInInterval(bbox.maxLon, -180, 270),\n        'a bounding box maximal longitude is expected ' + bbox.maxLon + ' [' + typeof bbox.maxLon + '] given');\n\n    throwTypeErrorWhen(checkBBoxNormalized(bbox), 'a bounding box expected but max <= min');\n\n    return bbox;\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a float number in a proper interval <min, max>.\n * @example\n * var numberBetweenMinusFiveAndFive = validators.numberInInterval(-5,5);\n * numberBetweenMinusFiveAndFive(-10); // false\n * numberBetweenMinusFiveAndFive(3); //true\n *\n * @param {Number} [min] The minimal value.\n * @param {Number} [max] The maximal value.\n * @return {Function} validator function that checks the type and value range.\n * @throws {TypeError} when missing a min or max value.\n */\nexport function numberInInterval(min, max) {\n    return validateNumberInInterval(min, max, 'a number in interval <' + min + ', ' + max + '> is expected');\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is an integer number in a proper interval <min, max>.\n * @example\n * var numberBetweenMinusFiveAndFive = validators.numberInInterval(-5,5);\n * numberBetweenMinusFiveAndFive(-10); // false\n * numberBetweenMinusFiveAndFive(3); //true\n *\n * @param {Number} [min] The minimal value.\n * @param {Number} [max] The maximal value.\n * @return {Function} validator function that checks the type and value range.\n * @throws {TypeError} when missing a min or max value.\n */\nexport function integerInInterval(min, max) {\n    return validateIntInInterval(min, max, 'an integer in interval <' + min + ', ' + max + '> is expected');\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a string.\n * @param {String} string\n * @return {String} value\n * @throws {TypeError} for non strings.\n */\nexport function string(string) {\n    if (!isString(string)) {\n        throw new TypeError('a string is expected, but ' + string + ' [' + typeof string + '] given');\n    }\n    return string;\n}\n\n/**\n * @ignore\n * Checks whether the given parameter geometries zoom has the value <0, 22>.\n * @param {Number} geometriesZoom\n * @return {Number} value\n * @throws {TypeError} for a non invalid parameter.\n */\nexport function geometriesZoom(geometriesZoom) {\n    return validateNumberInInterval(0, 22, 'a geometries zoom value <0, 22> is expected')(geometriesZoom);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a zoom level of <0, 22>\n * @param {Number} zoomLevel\n * @return {Number} value\n * @throws {TypeError} for a non invalid parameter.\n */\nexport function zoomLevel(zoomLevel) {\n    return validateIntInInterval(0, 22, 'zoom level <0, 22> is expected')(zoomLevel);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a function.\n * @param {Function} fun\n * @return {Function} fun\n * @throws {TypeError} for a non-function.\n */\nexport function functionType(fun) {\n    if (typeof fun !== 'function') {\n        throw new TypeError('a function is expected, but ' + fun + '  [' + typeof fun + '] given');\n    }\n    return fun;\n}\n\n/**\n * @ignore\n * Checks whether the given country name uses the ISO 3166 alpha-3 or alpha-2 format.\n * @param {String} name\n * @return {String} name\n * @throws {TypeError} if the country name is not valid.\n */\nexport function countryCode(name) {\n    if (!(isString(name) && (name.length === 3 || name.length === 2))) {\n        throw new TypeError('a 2 or 3-characters long country name is expected, but ' + name +\n            ' [' + typeof name + '] given');\n    }\n    return name;\n}\n\n/**\n * @ignore\n * Checks whether the given language code belongs to a predefined set of supported language codes\n * which is a subset of the IETF language tags.\n * @param {String|undefined} langCode\n * @return {String}\n */\nexport function languageCode(langCode) {\n    const searchLanguageCodes = Object.keys(searchLanguageMap);\n    if (!isString(langCode) || searchLanguageCodes.indexOf(langCode) < 0) {\n        throw new TypeError('One of pre-defined language codes was expected: ' + searchLanguageCodes +\n            ', but ' + langCode + ' [' + typeof langCode + '] given');\n    }\n    return langCode;\n}\n\n/**\n * @ignore\n * Checks whether the given country name's list uses the ISO 3166 alpha-3 or alpha-2 format.\n * @param {String|Array} value\n * @return {String} list\n * @throws {TypeError} if one of the country names is not valid.\n */\nexport function countrySet(value) {\n    throwTypeErrorWhen(!isString(value) && checkArray(value),\n        'An array of string country names or string (divided with commas) of country ' +\n        'names (two or three-characters long) is expected, but ' + value + ' [' + typeof value + '] given');\n\n    const stringValue = isString(value) ? value : value.join();\n    throwTypeErrorWhen(!stringValue.match(/^([a-zA-z]{2,3},)*[a-zA-z]{2,3}$/),\n        'An array of string country names or string (divided with commas) of country ' +\n        'names (two or three-characters long) is expected, but ' + value + ' [' + typeof value + '] given');\n\n    return stringValue;\n}\n\n/**\n * @ignore\n * Checks whether the given EV connector names list belongs to a predefined set of supported names\n * @param {String} value\n * @return {String} list\n * @throws {TypeError} if one of the EV connectors names is not valid.\n */\nexport function connectorSet(value) {\n    const message = 'List of pre-defined EV connector names was expected,' +\n    'but ' + value + ' [' + typeof value + '] given';\n\n    return validateAllowedTypes(value, message, connectorNames);\n}\n\n/**\n * @ignore\n * Checks whether the given fuel types names list belongs to a predefined set of supported names\n * @param {String} value\n * @return {String} list\n * @throws {TypeError} if one of the fuel type names is not valid.\n */\nexport function fuelSet(value) {\n    const message = 'List of pre-defined Fuel types names was expected,' +\n    'but ' + value + ' [' + typeof value + '] given';\n\n    return validateAllowedTypes(value, message, fuelTypes);\n}\n\n/**\n * @ignore\n * Checks whether the given mapcode types list belongs to a predefined set of supported names\n * @param {String} value\n * @return {String} list\n * @throws {TypeError} if one of the mapcode types names is not valid.\n */\nexport function mapcodes(value) {\n    const mapcodesValues = [\n        'Local',\n        'International',\n        'Alternative'\n    ];\n\n    const message = 'List of pre-defined mapcode types names was expected,' +\n    'but ' + value + ' [' + typeof value + '] given';\n\n    if (isString(value)) {\n        value = value.split(',');\n    }\n\n    if (Array.isArray(value) && value.length > 0) {\n        for (let i = 0; i < value.length; i += 1) {\n            validateAgainstSetOfValues(value[i], mapcodesValues, message);\n        }\n\n        return value.join(',');\n\n    } else {\n        throw new TypeError(message);\n    }\n\n}\n\n/**\n * @ignore\n * Checks whether the given EV charging plug type belongs to a predefined set of supported types\n * @param {String} value\n * @return {String} plugType\n * @throws {TypeError} if the given plug type is not valid.\n */\nexport function plugType(value) {\n    return checkPlugType(value);\n}\n\n/**\n * @ignore\n * Checks whether the given EV charging facility type belongs to a predefined set of supported types\n * @param {String} value\n * @return {String} facilityType\n * @throws {TypeError} if the given facility type is not valid.\n */\nexport function facilityType(value) {\n    return checkFacilityType(value);\n}\n\n/**\n * @ignore\n * Checks whether the given chargingCurveSupportPoint object has right properties\n * @param {Object} chargingCurveSupportPoint\n * @return {Object} chargingCurveSupportPoint\n * @throws {TypeError} if the given chargingCurveSupportPoint is not valid.\n */\nexport function chargingCurveSupportPoint(chargingCurveSupportPoint) {\n    return checkChargingCurveSupportPoint(chargingCurveSupportPoint);\n}\n\n/**\n * @ignore\n * Checks whether the given chargingCurve array has proper elements\n * @param {Array} chargingCurve\n * @return {Array} chargingCurve\n * @throws {TypeError} if the given chargingCurve array is not valid.\n */\nexport function chargingCurve(chargingCurve) {\n    return checkChargingCurve(chargingCurve);\n}\n\n/**\n * @ignore\n * Checks whether the given chargingConnection has right properties\n * @param {Object} chargingConnection\n * @return {Object} chargingConnection\n * @throws {TypeError} if the given chargingConnection is not valid.\n */\nexport function chargingConnection(chargingConnection) {\n    return checkChargingConnection(chargingConnection);\n}\n\n/**\n * @ignore\n * Checks whether the given chargingConnections array has proper elements\n * @param {Array} chargingConnections\n * @return {Array} chargingConnections\n * @throws {TypeError} if the given chargingConnections array is not valid.\n */\nexport function chargingConnections(chargingConnections) {\n    return checkChargingConnections(chargingConnections);\n}\n\n/**\n * @ignore\n * Checks whether the given chargingMode has right properties\n * @param {Object} chargingMode\n * @return {Object} chargingMode\n * @throws {TypeError} if the given chargingMode is not valid.\n */\nexport function chargingMode(chargingMode) {\n    return checkChargingMode(chargingMode);\n}\n\n/**\n * @ignore\n * Checks whether the given chargingModes array has right elements\n * @param {Array} chargingModes\n * @return {Array} chargingModes\n * @throws {TypeError} if the given chargingModes array is not valid.\n */\nexport function chargingModes(chargingModes) {\n    if (chargingModes.length > 10) {\n        throw new Error('Given chargingModes array contains more than 10 elements.');\n    }\n\n    chargingModes.forEach((element) => {\n        checkChargingMode(element);\n    });\n\n    return chargingModes;\n}\n\n/**\n * @ignore\n * Checks whether the given country name's list uses the ISO 3166 alpha-3 or alpha-2 format.\n * @param {Boolean} allowEmpty Specifies that it allows an empty array as a valid value.\n * @param {String|Array} value\n * @return {String} list\n * @throws {TypeError} if one of the country names is not valid.\n */\nexport function countrySetAlpha3(allowEmpty, value) {\n    throwTypeErrorWhen(!isString(value) && checkArray(value),\n        'An array of string country names or string (divided with commas) of country ' +\n        'names (three-characters long) is expected, but ' + value + ' [' + typeof value + '] given');\n\n    const stringValue = isString(value) ? value : value.join();\n    if (allowEmpty && stringValue === '') {\n        return value;\n    }\n    throwTypeErrorWhen(!stringValue.match(/^([a-zA-z]{3},)*[a-zA-z]{3}$/),\n        'An array of string country names or string (divided with commas) of country ' +\n        'names (three-characters long) is expected, but ' + value + ' [' + typeof value + '] given');\n\n    return value;\n}\n\n/**\n * @ignore\n * Checks whether the given point is in the proper format.\n * @param {String} value\n * @return {String} value\n * @throws {TypeError} if the given value is in an invalid format.\n */\nexport function point(value) {\n    isPointValid(value);\n    return value;\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a positive integer (greater than 0) and lower than 5.\n * @param {Number} value The value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function fuzzinessLevel(value) {\n    return validateIntInInterval(1, 4, 'Fuzziness level value (a positive integer lower than 5) is expected')(value);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a positive integer (greater than 0) and lower than 100.\n * @param {Number} value The value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function limit(value) {\n    return validateIntInInterval(1, 100, 'Limit value (a positive integer lower than 100) is expected')(value);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is an offset - positive integer <0, 1900>.\n * @param {Number} value The value\n * @return {Number} value\n * @throws {TypeError} for an invalid parameter.\n */\nexport function offset(value) {\n    return validateIntInInterval(0, 1900, 'Offset an integer value <0, 1900> is expected')(value);\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is a plain object (array and functions are not accepted).\n * @param {Object} object\n * @return {Object} object\n * @throws {TypeError} for a non-object.\n */\nexport function plainObject(object) {\n    if (typeof object !== 'object' || object.constructor !== Object) {\n        throw new TypeError('an object is expected, but ' + object + '  [' + typeof object + '] given');\n    }\n    return object;\n}\n\n/**\n * @ignore\n * Checks whether the given parameter is an array (objects and functions are not accepted).\n * @param {Array} array\n * @return {Array} array\n * @throws {TypeError} for a non-array.\n */\nexport function arrayType(array) {\n    if (checkArray(array)) {\n        throw new TypeError('an array is expected, but ' + array + '  [' + typeof array + '] given');\n    }\n    return array;\n}\n\nexport function arrayOf(options) {\n    return (values) => {\n        values.forEach((value) => validateField(options, value));\n        return values;\n    };\n}\n\nexport function entityType(values) {\n    const entityTypeValues = [\n        'Country',\n        'CountrySubdivision',\n        'CountrySecondarySubdivision',\n        'CountryTertiarySubdivision',\n        'Municipality',\n        'MunicipalitySubdivision',\n        'Neighbourhood',\n        'PostalCodeArea'\n    ];\n    for (const value of values.split(',')) {\n        if (entityTypeValues.indexOf(value) === -1) {\n            throw new TypeError(\n                `Entity type (${entityTypeValues}) is expected, but ${values} [${typeof values}] given`);\n        }\n    }\n\n    return values;\n}\n\nexport function objectOf(options) {\n    return (value) => {\n        validateField(options, value);\n        return value;\n    };\n}\n\nexport function roadUse(value) {\n    const roadUseValues = ['LimitedAccess', 'Arterial', 'Terminal', 'Ramp', 'Rotary', 'LocalStreet'];\n    throwTypeErrorWhen(!isString(value) || !value.match(/^\\[(\"\\w*\",?)+\\]$/),\n        'Road use is expected, but ' + value + '  [' + typeof value + '] given');\n\n    const elements = value.replace(/[\"[\\]]/g, '').split(',');\n    for (let i = 0; i < elements.length; i += 1) {\n        throwTypeErrorWhen(roadUseValues.indexOf(elements[i]) < 0,\n            'Road use (' + roadUseValues + ') is expected, but ' + value +\n            '  [' + typeof value + '] given');\n    }\n    return value;\n}\n\nexport function arrayOfValues(values, paramName) {\n    return (value) => {\n        const message = 'Supported ' + paramName + ' type is expected (array with one of: ' + values +\n            '), but ' + value + ' [' + typeof value + '] given';\n        if (checkArray(value)) {\n            throw new TypeError('an array is expected, but ' + value + '  [' + typeof value + '] given');\n        }\n        for (let i = 0; i < value.length; i += 1) {\n            validateAgainstSetOfValues(value[i], values, message);\n        }\n        return value;\n    };\n}\n\n/**\n * @ignore\n * Checks whether the given departure time is now or in the proper RFC-3339 format ( 1996-12-19T16:39:57 or\n * 1996-12-19T16:39:57-08:00 ):\n * @param {String} value\n * @return {String} value\n * @throws {TypeError} if the given value is not valid.\n */\nexport function departAt(value) {\n    if (value === 'now' || isDateRfc3339(value) && Date.now() < Date.parse(value)) {\n        return value;\n    } else {\n        throw new TypeError('Supported departAt is now or rfc3339 format and no earlier than now(), but ' +\n            value + ' [' + typeof value + '] given');\n    }\n}\n\n/**\n * @ignore\n * Checks whether the given arrive time is in proper RFC-3339 format (1996-12-19T16:39:57 or\n * 1996-12-19T16:39:57-08:00):\n * @param {String} value\n * @return {String} value\n * @throws {TypeError} if the given value is not valid.\n */\nexport function arriveAt(value) {\n    if (isDateRfc3339(value) && Date.now() < Date.parse(value)) {\n        return value;\n    } else {\n        throw new TypeError('Supported arriveAt is rfc3339 format, but and no earlier than now() ' +\n            value + ' [' + typeof value + '] given');\n    }\n}\n\nexport function routingGuidanceLanguage(value) {\n    const routingGuidanceLanguageValues = Object.keys(routingLanguageMap);\n    const message = 'Supported routing guidance language is expected to be one of: ' +\n        routingGuidanceLanguageValues + '), but ' + value + ' [' + typeof value + '] given';\n    return validateAgainstSetOfValues(value, routingGuidanceLanguageValues, message);\n}\n\nexport function mapsLanguage(value) {\n    const message = 'Supported maps language is expected to be one of: ' +\n    mapsLangCodes + '), but ' + value + ' [' + typeof value + '] given';\n    return validateAgainstSetOfValues(value, mapsLangCodes, message);\n}\n\n/**\n * @ignore\n * Checks whether the given routing locations is in the proper format:\n * circle - A circle with a center point and a radius (in meters).\n * The radius must be a positive integer with the maximum value of 20050000. Note that larger integer values\n * will not be rejected but lowered to the maximum value. circle(52.37245,4.89406,10000) location - A point or\n * a circle.\n * 52.37245,4.89406\n * circle(52.37245,4.89406,10000)\n * @param {String} value\n * @return {String} value\n * @throws {TypeError} if the given value is not valid.\n */\nexport function routingLocations(value) {\n    const point = pointRegex,\n        circle = circleRegex;\n\n    if (value.constructor.toString().indexOf('Array') > -1) {\n        value = value.join(':');\n    }\n\n    const routingLocation = new RegExp('^' + point.source + ':(?:(?:' + point.source + '|' +\n        circle.source + '):)*' + point.source + '$');\n    if (!value.match(routingLocation)) {\n        throw new TypeError('Routing location is expected. But ' + value + ' [' + typeof value + '] given');\n    }\n    return value;\n}\n\n/**\n * @ignore\n * Checks whether the given input is in the proper circle format:\n * circle - A circle with a center point and a radius (in meters).\n * The radius must be a positive integer with the maximum value of 20050000. Note that larger integer values\n * will not be rejected but lowered to the maximum value. circle(52.37245,4.89406,10000)\n * @param {String} value\n * @return {String} value\n * @throws {TypeError} if the given value is not valid.\n */\nexport function circle(value) {\n    throwTypeErrorWhen(!isString(value),\n        'Expecting circle but ' + value + ' [' + typeof value + '] given');\n\n    const match = value.match(/circle\\(-?\\d*(?:\\.\\d*)?\\s*,\\s*-?\\d*(?:\\.\\d*)?\\s*,\\s*(\\d+)\\)/);\n    throwTypeErrorWhen(!match || parseFloat(match[1]) > 20050000,\n        'Expecting circle but ' + value + ' [' + typeof value + '] given');\n\n    return value;\n}\n\n/**\n * @ignore\n * Checks whether the given input is in the proper geometry list format.\n * Geometry list represents a list of figures (polygons or circles) objects.\n * Circle contains properties like: type (\"CIRCLE\"), position (lat & lon) and radius.\n * Polygon contains properties like: type (\"POLYGON\") and vertices (as a list of points).\n *\n * @param {Array} value\n * @return {Array} value\n * @throws {TypeError} if the given value is not valid.\n */\nexport function geometryList(value) {\n    throwTypeErrorWhen(checkArray(value), 'An array of geometry objects is expected, but ' +\n    value + ' [' + typeof value + '] given');\n\n    if (value.length > 0) {\n        for (let i = 0; i < value.length; i += 1) {\n            const geoObject = value[i];\n            throwTypeErrorWhen(!Object.prototype.hasOwnProperty.call(geoObject, 'type') ||\n                !Object.prototype.hasOwnProperty.call(geoObject, 'vertices') &&\n                (!Object.prototype.hasOwnProperty.call(geoObject, 'position') ||\n                !Object.prototype.hasOwnProperty.call(geoObject, 'radius')),\n            'An array of geometry objects is expected, but ' + value + ' [' + typeof value + '] given');\n        }\n    } else {\n        throw new TypeError('An array of geometry objects is expected, but ' + value +\n            ' [' + typeof value + '] given');\n    }\n    return value;\n}\n\n/**\n * @ignore\n *\n * Checks if the given value has a property 'route' which is an array of points.\n * By an array of points we mean an array of an array of { lon, lat }, { lng, lat }, [ num, num ],\n * Maps.LngLat objects or mixed.\n *\n * @param {Object} value\n *\n * @return {Object} value Stringified array of figures (JSON format).\n * @throws {TypeError} if the given value is not valid.\n */\nexport function route(value) {\n    let points;\n\n    if (typeof value.points !== 'undefined') {\n        points = value.points;\n    } else {\n        throw new TypeError('Invalid structure of the route object');\n    }\n\n    if (points && !(Array.isArray(points) && points.length > 2)) {\n        throw new TypeError('Provided route array ' +\n            points + ' is not valid. It should be an array with at least 2 points.');\n    }\n    points.forEach(checkPointObjectOrArray);\n    return value;\n}\n\nexport function supportingPoints(value) {\n    if (!Array.isArray(value)) {\n        throw new TypeError('Expecting array in supporting points validator');\n    }\n    if (!value.length || value.length < 2) {\n        throw new TypeError('There should be at least two supporting points');\n    }\n    return value;\n}\n\nexport function waitTimeSeconds(value) {\n    if (isNaN(value) || !isInteger(value) || !(value === 120 || (value >= 5 && value <= 60))) {\n        throw new TypeError('Invalid `waitTimeSeconds` parameter value. ' +\n        'Must be 120 or an integer between 5 and 60.');\n    }\n\n    return value;\n}\n\nexport function clientTime(value) {\n    return checkDateRfc3339(value, 'clientTime');\n}\n\nexport function dateTime(value) {\n    return checkDateRfc3339(value, 'dateTime');\n}\n\n/**\n * @ignore\n * Checks whether object-like fields definition matches\n * available fields.\n *\n * @param {String} value Object-like fields definition.\n * @returns {String} value Object-like fields definition.\n * @throws {TypeError} if given value not matches available fields.\n */\nexport function validIncidentDetailsV5Fields(value) {\n    const availableFields = convertFieldStringIntoObject(incidentDetailsAvailableFields);\n    const testFields = convertFieldStringIntoObject(value);\n\n    const recursiveComparer = (objToTest, objToCompare) => {\n        Object.keys(objToTest).forEach(function(key) {\n            if (objToCompare.hasOwnProperty(key) &&\n                (typeof objToTest[key] === typeof objToCompare[key])) {\n                if (typeof objToTest[key] === 'object') {\n                    recursiveComparer(objToTest[key], objToCompare[key]);\n                }\n            } else {\n                throw new TypeError(`Property ${key} not matches available fields: ` + incidentDetailsAvailableFields);\n            }\n        });\n    };\n    recursiveComparer(testFields, availableFields);\n\n    return value;\n}\n\nconst customEndpoints = [\n    'adpEndpoint',\n    'autocompleteEndpoint',\n    'batchRoutingEndpoint',\n    'batchSearchEndpoint',\n    'batchSyncRoutingEndpoint',\n    'batchSyncSearchEndpoint',\n    'calculateReachableRangeEndpoint',\n    'captionV2Endpoint',\n    'chargingAvailabilityEndpoint',\n    'copyrightsV2Endpoint',\n    'flowSegmentDataEndpoint',\n    'geocodeEndpoint',\n    'incidentDetailsV5Endpoint',\n    'incidentRegionsEndpoint',\n    'incidentViewportEndpoint',\n    'longDistanceEVRoutingEndpoint',\n    'matrixRoutingEndpoint',\n    'matrixSyncRoutingEndpoint',\n    'nearbySearchEndpoint',\n    'placeByIdEndpoint',\n    'poiCategoriesEndpoint',\n    'reverseGeocodeEndpoint',\n    'routingEndpoint',\n    'searchEndpoint',\n    'staticMapImageEndpoint',\n    'structuredGeocodeEndpoint'\n];\n\nconst customQueries = [\n    'batchAdpQueryEndpoint',\n    'batchChargingAvailabilityQueryEndpoint',\n    'batchNearbySearchQueryEndpoint',\n    'batchReachableRangeQueryEndpoint',\n    'batchReverseGeocodeQueryEndpoint',\n    'batchRoutingQueryEndpoint',\n    'batchSearchQueryEndpoint',\n    'batchStructuredGeocodeQueryEndpoint'\n];\n\nexport function validCustomEndpointsObject(value) {\n    try {\n        plainObject(value);\n\n        for (const endpointName in value) {\n            if (customEndpoints.includes(endpointName)) {\n                validCustomEndpoint(value[endpointName]);\n            } else if (customQueries.includes(endpointName)) {\n                validCustomQuery(value[endpointName]);\n            } else {\n                throw new TypeError('Endpoint name is expected to be one of supported values, but ' +\n                value + 'given');\n            }\n        }\n    } catch (error) {\n        throw new TypeError(`Invalid custom endpoints object. ${error.message}`);\n    }\n\n    return value;\n}\n\nexport function validCustomEndpoint(value) {\n    if (!isString(value)) {\n        throw new TypeError(`Invalid custom URL. A string URL is expected, ${value} [${typeof value}] given`);\n    }\n\n    const hasProtocolRegex = new RegExp(/(https:\\/\\/|http:\\/\\/).*/);\n    if (hasProtocolRegex.test(value)) {\n        throw new TypeError(`Invalid custom URL. URL without protocol (http/https) is expected, ${value} given`);\n    }\n\n    const tomtomDomainRegex = new RegExp(/^[0-9a-zA-Z-.]+(\\.tomtom\\.com)(\\/.*)?$/);\n    if (!tomtomDomainRegex.test(value)) {\n        throw new TypeError(`Invalid custom URL. URL in TomTom domain (*.tomtom.com) is expected, ${value} given`);\n    }\n\n    return value;\n}\n\nexport function validCustomQuery(value) {\n    if (!isString(value)) {\n        throw new TypeError(`Invalid custom query. A string URL is expected, ${value} [${typeof value}] given`);\n    }\n\n    const startingWithSlash = new RegExp(/^\\//);\n    if (!startingWithSlash.test(value)) {\n        throw new TypeError(`Invalid custom query. A string starting with / is expected, ${value} given`);\n    }\n\n    return value;\n}\n\nexport { keyValidator as key } from './validators/key';\nexport { numberValidator as number } from './validators/number';\nexport { oneOfValueValidator as oneOfValue } from './validators/oneOfValue';\n\n","import {isStringSinglePoint} from '../utils/pointUtils';\nimport has from 'lodash/has';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\n\n/*\n * Class to convert points or arrays of points.\n *\n * By default, the points will be converted to {lon: 00, lat: 00} format.\n *\n * Points in the format [00.0, 00.0] are considered lon-lat points,\n * for lat-lon points set the option isLatLon to true;\n *\n * It is possible to convert the points to a custom format by passing a function in the options\n * as customPointConverter with params longitude and latitude - customPointConverter(longitude,latitude)\n */\nexport class PointFacade {\n\n    constructor(options = {}) {\n        this.options = options;\n    }\n\n    convert(data) {\n        if (this._isSinglePoint(data)) {\n            return this._convertPoint(data);\n        }\n        return this._convertToArrayOfPoints(data);\n    }\n\n    _isSinglePoint(data) {\n        if (Array.isArray(data)) {\n            if (data.length === 2 && typeof data[0] !== 'object') { // for [00, 00] points\n                return true;\n            }\n            return false;\n        }\n        if (isString(data)) {\n            const points = data.split(':');\n            if (points.length >= 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    _convertToArrayOfPoints(data) {\n        if (isString(data)) {\n            return data.split(':').map(this._convertPoint.bind(this));\n        }\n        return data.map(this._convertPoint.bind(this));\n    }\n\n    _convertPoint(point) {\n\n        // converts {lat: 00.0, lon: 00.0}\n        if (has(point, 'lat') && has(point, 'lon')) {\n            return this._covertToDefaultFormat(point.lon, point.lat);\n        }\n\n        // converts {latitude: 00.0, longitude: 00.0}\n        if (has(point, 'latitude') && has(point, 'longitude')) {\n            return this._covertToDefaultFormat(point.longitude, point.latitude);\n        }\n\n        // converts {x: 00.0, y: 00.0} x === longitude, y === latitude\n        if (has(point, 'x') && has(point, 'y')) {\n            return this._covertToDefaultFormat(point.x, point.y);\n        }\n\n        // converts [00.0, 00.0]\n        if (Array.isArray(point) && point.length === 2) {\n            if (this.options.isLatLon) {\n                return this._covertToDefaultFormat(point[1], point[0]);\n            }\n            return this._covertToDefaultFormat(point[0], point[1]);\n        }\n\n        // converts \"00.000,00.000\"\n        if (isString(point)) {\n            return this._convertStringPoint(point);\n        }\n\n        return point;\n    }\n\n    _convertStringPoint(point) {\n        const p = point.split(',');\n\n        if (!isStringSinglePoint(point) || p.length !== 2) {\n            throw new Error('The point is not valid: ' + point);\n        }\n\n        if (this.options.isLatLon) {\n            return this._covertToDefaultFormat(p[1], p[0]);\n        }\n        return this._covertToDefaultFormat(p[0], p[1]);\n    }\n\n    _covertToDefaultFormat(longitude, latitude) {\n        if ((!longitude && longitude !== 0) || (!latitude && latitude !== 0)) {\n            throw new Error('Longitude and latitude must be provided.');\n        }\n        if (isFunction(this.options.customPointConverter)) {\n            return this.options.customPointConverter(longitude, latitude);\n        }\n        return {\n            lng: parseFloat(longitude),\n            lat: parseFloat(latitude)\n        };\n    }\n}\n","export const isStringSinglePoint = stringPoint => {\n    if (/^-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?$/.test(stringPoint)) {\n        return true;\n    }\n    return false;\n};\n","import {PointFacade} from './pointFacade';\nimport isNil from 'lodash/isNil';\nimport isObject from 'lodash/isObject';\n\nconst pointFacade = new PointFacade();\n\nexport const convertResponsePoints = (elem) => {\n    if (!elem) {\n        return;\n    }\n\n    if (elem.boundingBox) {\n        elem.boundingBox.btmRightPoint = pointFacade.convert(elem.boundingBox.btmRightPoint);\n        elem.boundingBox.topLeftPoint = pointFacade.convert(elem.boundingBox.topLeftPoint);\n    }\n    if (elem.viewport) {\n        elem.viewport.btmRightPoint = pointFacade.convert(elem.viewport.btmRightPoint);\n        elem.viewport.topLeftPoint = pointFacade.convert(elem.viewport.topLeftPoint);\n    }\n    if (elem.position) {\n        elem.position = pointFacade.convert(elem.position);\n    }\n    if (elem.summary && elem.summary.geoBias) {\n        elem.summary.geoBias = pointFacade.convert(elem.summary.geoBias);\n    }\n};\n\nexport const setProperty = (properties, propertyName, value) => {\n    if (!isNil(value)) {\n        properties[propertyName] = value;\n    }\n};\n\nexport const newFeature = (properties, type) => {\n    return {\n        type: 'Feature',\n        geometry: {type, coordinates: []},\n        properties: properties\n    };\n};\n\nexport const newFeatureCollection = () => {\n    return {\n        type: 'FeatureCollection',\n        features: []\n    };\n};\n\nexport const getFeature = (data) => {\n    const properties = {};\n    properties.id = data.id;\n\n    if (isObject(data)) {\n        Object.keys(data).forEach(name => {\n            setProperty(properties, name, data[name]);\n        });\n    }\n\n    const feature = newFeature(properties, 'Point');\n    feature.geometry.coordinates = [data.position.lng, data.position.lat];\n\n    return feature;\n};\n\nexport const toGeoJson = (data) => {\n    const result = newFeatureCollection();\n\n    for (let i = 0; i < data.results.length; i++) {\n        const feature = getFeature(data.results[i]);\n        result.features.push(feature);\n    }\n    return result;\n};\n","import { convertResponsePoints, toGeoJson } from '../modelUtils';\n\nfunction convertEntryPoints(element) {\n    if (element && element.entryPoints && Array.isArray(element.entryPoints)) {\n        element.entryPoints.forEach(entryPoint => {\n            convertResponsePoints(entryPoint);\n        });\n    }\n}\n\nexport function searchModel(data) {\n    if (!data) {\n        return data;\n    }\n    // converts location points\n    if (Array.isArray(data.results)) {\n        data.results.forEach(result => {\n            if (Array.isArray(result)) {\n                result.forEach(r => {\n                    convertResponsePoints(r);\n                    convertEntryPoints(r);\n                });\n            } else {\n                convertResponsePoints(result);\n                convertEntryPoints(result);\n            }\n        });\n    } else {\n        convertResponsePoints(data);\n        convertEntryPoints(data);\n    }\n\n    return Object.assign(data, {\n        toGeoJson: () => toGeoJson(data)\n    });\n}\n","import {searchModel} from './search';\n\nexport function batchModel(data) {\n    if (!Array.isArray(data.batchItems)) {\n        return null;\n    }\n\n    data.batchItems = data.batchItems.map((batchItem) => {\n        if (batchItem.response.error) {\n            return { error: batchItem.response.error};\n        } else {\n            return searchModel(batchItem.response);\n        }\n    });\n\n    return data;\n}\n","\nexport default {\n    POST: 'POST',\n    PATH: 'PATH',\n    QUERY: 'QUERY',\n    OTHER: 'OTHER',\n    HEADER: 'HEADER'\n};\n","export function modelResponse({ data, trackingId }, modelCallback) {\n    const modeledResponseData = typeof data === 'string' ? { data } : { ...data };\n    const modeledResponse = modelCallback ? modelCallback(data) : modeledResponseData;\n    modeledResponse.getTrackingId = () => trackingId || null;\n\n    return modeledResponse;\n}\n","import mainConfig from 'mainConfig';\n\nexport const copyrightsV2Endpoint = mainConfig['endpoints.copyrightsV2'];\nexport const captionV2Endpoint = mainConfig['endpoints.captionV2'];\n\n//Search\nexport const batchSearchEndpoint = mainConfig['endpoints.batchSearch'];\nexport const batchSyncSearchEndpoint = mainConfig['endpoints.batchSyncSearch'];\nexport const batchSearchQueryEndpoint = mainConfig['endpoints.batchSearchQuery'];\nexport const geocodeEndpoint = mainConfig['endpoints.geocode'];\nexport const reverseGeocodeEndpoint = mainConfig['endpoints.reverseGeocode'];\nexport const batchReverseGeocodeQueryEndpoint = mainConfig['endpoints.batchReverseGeocodeQuery'];\nexport const structuredGeocodeEndpoint = mainConfig['endpoints.structuredGeocode'];\nexport const searchEndpoint = mainConfig['endpoints.search'];\nexport const batchStructuredGeocodeQueryEndpoint = mainConfig['endpoints.batchStructuredGeocodeQuery'];\nexport const adpEndpoint = mainConfig['endpoints.adp'];\nexport const batchAdpQueryEndpoint = mainConfig['endpoints.batchAdpQuery'];\nexport const nearbySearchEndpoint = mainConfig['endpoints.nearbySearch'];\nexport const batchNearbySearchQueryEndpoint = mainConfig['endpoints.batchNearbySearchQuery'];\nexport const autocompleteEndpoint = mainConfig['endpoints.autocomplete'];\nexport const poiCategoriesEndpoint = mainConfig['endpoints.poiCategories'];\nexport const chargingAvailabilityEndpoint = mainConfig['endpoints.chargingAvailability'];\nexport const batchChargingAvailabilityQueryEndpoint = mainConfig['endpoints.batchChargingAvailabilityQuery'];\nexport const placeByIdEndpoint = mainConfig['endpoints.placeById'];\n\n//Routing\nexport const routingEndpoint = mainConfig['endpoints.routing'];\nexport const calculateReachableRangeEndpoint = mainConfig['endpoints.calculateReachableRange'];\nexport const batchRoutingQueryEndpoint = mainConfig['endpoints.batchRoutingQuery'];\nexport const batchRoutingEndpoint = mainConfig['endpoints.batchRouting'];\nexport const batchSyncRoutingEndpoint = mainConfig['endpoints.batchSyncRouting'];\nexport const matrixRoutingEndpoint = mainConfig['endpoints.matrixRouting'];\nexport const matrixSyncRoutingEndpoint = mainConfig['endpoints.matrixSyncRouting'];\nexport const batchReachableRangeQueryEndpoint = mainConfig['endpoints.batchReachableRangeQuery'];\nexport const longDistanceEVRoutingEndpoint = mainConfig['endpoints.longDistanceEVRouting'];\n\n//traffic\nexport const incidentDetailsV5Endpoint = mainConfig['endpoints.incidentDetailsV5'];\nexport const incidentViewportEndpoint = mainConfig['endpoints.incidentViewport'];\nexport const flowSegmentDataEndpoint = mainConfig['endpoints.flowSegmentData'];\nexport const incidentRegionsEndpoint = mainConfig['endpoints.incidentRegions'];\n\n//layers\nexport const trafficLayerEndpoint = mainConfig['endpoints.trafficLayer'];\nexport const rasterTrafficFlowTilesLayerEndpoint = mainConfig['endpoints.rasterTrafficFlowTilesLayer'];\nexport const vectorTrafficFlowTilesLayerEndpoint = mainConfig['endpoints.vectorTrafficFlowTilesLayer'];\nexport const tileLayerEndpoint = mainConfig['endpoints.tileLayer'];\n\nexport const staticMapImageEndpoint = mainConfig['endpoints.staticImage'];\nexport const origin = mainConfig.origin;\n","/* eslint-disable max-len */\n\nimport * as defaultEndpoints from './endpoints';\nimport { validCustomEndpoint, validCustomEndpointsObject } from '../services/validators';\n\n/**\n * @ignore\n * Resolves endpoint by given name. Enables use of custom domain or endpoint.\n *\n * To use custom domain set it with `additionalOptions.customDomain` attribute.\n * @example\n * ```js\n * const options = {\n *   key: 'your-key'\n * };\n * const additionalOptions = {\n *   customDomain: 'custom-domain.tomtom.com'\n * }\n * tt.services.copyrightsV2(options, additionalOptions)\n *   .then(successCallback)\n *   .catch(errorCallback);\n * ```\n *\n * To replace entire endpoint set it with 'additionalOptions.customEndpoints' object.\n * Key describes which endpoint you want to change, value should be endpoint string.\n * @example\n * ```js\n * const options = {\n *   key: 'your-key',\n *   ...\n * };\n * const additionalOptions = {\n *   customEndpoints: {\n *     routingEndpoint: 'custom.tomtom.com/routing-custom/1/calculateRoute/{locations}/{contentType}'\n *   }\n * }\n * tt.services.calculateRoute(options, additionalOptions)\n *   .then(successCallback)\n *   .catch(errorCallback);\n * ```\n *\n * In both cases provide URL without protocol prefix (http/https). URL must be in TomTom domain (*.tomtom.com).\n * If `customDomain` and `customEndpoints` will be provided together, `customDomain` won't affect\n * endpooints set using customEndpoints.\n *\n * List of methods and endpoints that may be replaced using customEndpoints option ([key]: url):\n * For default value please check ./endpoints.js file and corresponding URL in mainConfig.js in root directory.\n *\n * tt.services.additionalData: adpEndpoint; batch requests: batchAdpQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.alongRouteSearch: searchEndpoint; batch requests: batchSearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.autocomplete: autocompleteEndpoint\n * tt.services.calculateReachableRange: calculateReachableRangeEndpoint; batch requests: batchSyncRoutingEndpoint, batchRoutingEndpoint, batchReachableRangeQueryEndpoint\n * tt.services.calculateRoute: routingEndpoint; batch requests: batchSyncRoutingEndpoint, batchRoutingEndpoint, batchRoutingQueryEndpoint\n * tt.services.categorySearch: searchEndpoint; batch requests: batchSearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.copyrightsCaptionV2: captionV2Endpoint\n * tt.services.copyrightsV2: copyrightsV2Endpoint\n * tt.services.crossStreetLookup: reverseGeocodeEndpoint; batch requests: batchReverseGeocodeQueryEndpoint, batchSearchEndpoint, batchSyncSearchEndpoint\n * tt.services.evChargingStationsAvailability: chargingAvailabilityEndpoint; batch requests: batchChargingAvailabilityQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.fuzzySearch: searchEndpoint; batch requests: batchSearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.geocode: geocodeEndpoint; batch requests: batchSearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.geometrySearch: searchEndpoint; batch requests: batchSearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.incidentDetailsV5: incidentDetailsV5Endpoint\n * tt.services.incidentViewport: incidentViewportEndpoint\n * tt.services.longDistanceEVRouting: longDistanceEVRoutingEndpoint\n * tt.services.matrixRouting: matrixSyncRoutingEndpoint, matrixRoutingEndpoint\n * tt.services.nearbySearch: nearbySearchEndpoint; batch requests: batchNearbySearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.placeById: placeByIdEndpoint\n * tt.services.poiCategories: poiCategoriesEndpoint\n * tt.services.poiSearch: searchEndpoint; batch requests: batchSearchQueryEndpoint, batchSyncSearchEndpoint, batchSearchEndpoint\n * tt.services.reverseGeocode: reverseGeocodeEndpoint; batch requests: batchReverseGeocodeQueryEndpoint, batchSearchEndpoint, batchSyncSearchEndpoint\n * tt.services.staticImage: staticMapImageEndpoint\n * tt.services.structuredGeocode: structuredGeocodeEndpoint; batch requests: batchStructuredGeocodeQueryEndpoint, batchSearchEndpoint, batchSyncSearchEndpoint\n * tt.services.trafficFlowSegmentData: flowSegmentDataEndpoint\n */\nexport class Endpoints {\n    constructor(additionalOptions) {\n        if (additionalOptions?.customEndpoints !== undefined) {\n            this._customEndpoints = validCustomEndpointsObject(additionalOptions.customEndpoints);\n        }\n        if (additionalOptions?.customDomain !== undefined) {\n            this._customDomain = validCustomEndpoint(additionalOptions.customDomain);\n            this._customDomain = this._customDomain.replace(new RegExp(/\\/$/), '');\n        }\n    }\n\n    resolve(endpointName) {\n        if (this._customEndpoints?.[endpointName] !== undefined) {\n            return this._customEndpoints[endpointName];\n        }\n\n        const defaultEndpoint = defaultEndpoints[endpointName];\n        if (this._customDomain !== undefined) {\n            return this._changeDomain(defaultEndpoint, this._customDomain);\n        }\n\n        return defaultEndpoint;\n    }\n\n    _changeDomain(endpointUrl, newDomain) {\n        return endpointUrl.replace(defaultEndpoints.origin, newDomain);\n    }\n}\n","export default class ValidationError extends Error {\n    constructor(errors, ...params) {\n        super(...params);\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ValidationError);\n        }\n        let consolidatedErrorMessages = '\\n';\n        errors.forEach(element => {\n            consolidatedErrorMessages += element.message + '\\n';\n        });\n\n        this.errors = errors;\n        this.message = 'Validation errors occured: ' + consolidatedErrorMessages;\n    }\n}\n","import isFunction from 'lodash/isFunction';\n\nconst dateRegex = /^\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}$/; // eslint-disable-line\n\nexport default class Field {\n    constructor({validators, converters, required, defaultValue, deprecationDate}) {\n        Object.assign(this, {validators, converters, required, defaultValue, deprecationDate});\n\n        this._validateFields();\n    }\n\n    _isArrayOfFunctions(array) {\n        if (!Array.isArray(array)) {\n            return false;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n            if (!isFunction(array[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    _validateFields() {\n        if (this.validators === null || (this.validators && !this._isArrayOfFunctions(this.validators))) {\n            throw new Error('Validators are not an array of functions.');\n        }\n        if (this.converters === null || (this.converters && !this._isArrayOfFunctions(this.converters))) {\n            throw new Error('Converters are not an array of functions.');\n        }\n        if (!(this.required === undefined || typeof this.required === 'boolean')) {\n            throw new Error('Required must be a Boolean.');\n        }\n        if (this.deprecationDate &&\n            (Number.isNaN(Date.parse(this.deprecationDate)) || !dateRegex.test(this.deprecationDate))) {\n            throw new Error('deprecationDate must contain a valid date');\n        }\n    }\n\n    getDefaultValue() {\n        if (isFunction(this.defaultValue)) {\n            return this.defaultValue();\n        }\n\n        return this.defaultValue;\n    }\n\n    getConverters() {\n        return this.converters ? this.converters : [];\n    }\n\n    getValidators() {\n        return this.validators ? this.validators : [];\n    }\n\n    getDeprecationDate() {\n        return this.deprecationDate;\n    }\n\n    isRequired() {\n        return this.required === true;\n    }\n}\n\nexport function field(options) {\n    return new Field(options);\n}\n","import isNil from 'lodash/isNil';\n\n// import * as isNil from 'lodash.isnil';\nclass DeprecationHandler {\n    constructor() {\n        this.log = {};\n    }\n\n    _isLogPrinted(serviceName, name) {\n        const serviceLog = this.log[serviceName];\n        if (serviceLog) {\n            return serviceLog[name];\n        }\n\n        return false;\n    }\n\n    _setLog(serviceName, name) {\n        this.log[serviceName] = this.log[serviceName] || {};\n        this.log[serviceName][name] = true;\n    }\n\n    _displayWarning(name, date, serviceName) {\n        const isPastCurrentDate = Date.now() > Date.parse(date);\n        const serviceNameMsg = serviceName !== 'default' ? `(used in ${serviceName}) ` : '';\n\n        if (isPastCurrentDate) {\n            console.error(`[DEPRECATION WARNING] The parameter '${name}' ${serviceNameMsg} deprecation period ` +\n            'has ended. It is recommended to stop using it as it may stop working. ' +\n            'Please refer to https://developer.tomtom.com/maps-sdk-web-js/documentation for more information');\n        } else {\n            console.warn(`[DEPRECATION NOTICE] The parameter '${name}' ${serviceNameMsg}is deprecated. ` +\n                `By ${date} we can not guarantee that it will continue to work. ` +\n                'Please refer to https://developer.tomtom.com/maps-sdk-web-js/documentation for more information');\n        }\n\n    }\n\n    checkDeprecation(name, date, serviceName = 'default') {\n        if (isNil(name) || isNil(date) || this._isLogPrinted(serviceName, name)) {\n            return;\n        }\n\n        this._displayWarning(name, date, serviceName);\n        this._setLog(serviceName, name);\n    }\n\n}\n\nexport default new DeprecationHandler();\n","import ValidationError from '../error/ValidationError';\nimport Field from '../model/Field';\nimport isNil from 'lodash/isNil';\nimport deprecationHandler from './deprecationHandler';\nimport { trackingId as validateTrackingId } from './validators';\nimport { v4 as uuid } from 'uuid';\nimport {keyValidator} from './validators/key';\nimport {oneOfValueValidator} from './validators/oneOfValue';\nimport {numberValidator} from './validators/number';\n\nconst runValidators = (value, validators, params, key) => {\n    const errors = [];\n\n    for (const validator of validators) {\n        try {\n            validator(value, params, key);\n        } catch (error) {\n            errors.push(error);\n        }\n    }\n    return errors;\n};\n\nconst convertToFields = (fields) => {\n    const convertedFields = {};\n    for (const [key, field] of Object.entries(fields)) {\n        convertedFields[key] = new Field(field);\n    }\n    return convertedFields;\n};\n\nconst internalValidator = (fields, params = {}, serviceName) => {\n    const convertedFields = convertToFields(fields);\n    let errors = [];\n    for (const [name, field] of Object.entries(convertedFields)) {\n        const value = params[name];\n        const isRequiredFieldMissing = isNil(value) && field.isRequired();\n        const isAppliedForAll = name === '__all';\n\n        if (isRequiredFieldMissing) {\n            errors.push(new Error(`${name} is a required field.`));\n        } else if (!isNil(value) || isAppliedForAll) { // runs validators for the given field)\n            deprecationHandler.checkDeprecation(name, field.getDeprecationDate(), serviceName);\n\n            const validationErrors = runValidators(value, field.getValidators(), params, name);\n            errors = [...errors, ...validationErrors];\n        }\n    }\n    return errors;\n};\n\n/**\n * Receives a list of fields and parameters and converts them according to the converters\n * defined. It also sets the default value when the field is undefined.\n *\n * @method convert\n * @private\n * @param {Object} [fields] Object containing the fields and their converters.\n * @param {Object} [params] Object containing the params and their values.\n * @param {Object} [serviceType] Service type - required for some converters.\n * @returns {Object} Converted values.\n */\nexport const convert = (fields, params = {}, serviceType) => {\n    const convertedFields = convertToFields(fields);\n    const converted = {};\n    for (const [name, field] of Object.entries(convertedFields)) {\n        const defaultValue = field.getDefaultValue();\n        let fieldValue = params[name];\n        if (isNil(fieldValue) || fieldValue === '') {\n            if (!isNil(defaultValue)) {\n                fieldValue = defaultValue;\n            } else {\n                continue;\n            }\n        }\n        const converters = field.getConverters();\n        converted[name] = converters.reduce((value, converter) => {\n            return converter(value, serviceType);\n        }, fieldValue);\n    }\n    return converted;\n};\n\n/**\n * Responsible for processing batch items. It validates and converts them and it returns\n * the properties and the errors.\n *\n * @method processBatchItems\n * @private\n * @param {Object} [fields] Object containing the fields, their validators and converters, and if they\n * are required.\n * @param {Object} [params] Object containing the parameters and their values.\n * @param {String} [serviceType] ServiceType.\n * @param {String} [serviceName] serviceName.\n * @returns {Object} Batch properties and errors.\n */\nfunction processBatchItems(fields, params, serviceType, serviceName) {\n    const batchProperties = {};\n    let batchErrors = [];\n\n    if (fields.batchItems && params.batchItems) {\n        batchProperties.batchItems = params.batchItems.map((param) => {\n            const convertedField = convert(fields.batchItems, param, serviceType);\n            batchErrors = batchErrors.concat(internalValidator(fields.batchItems, convertedField, serviceName));\n            return convertedField;\n        });\n        if (params.batchMode) {\n            batchProperties.batchMode =\n                oneOfValueValidator(['sync', 'async', 'redirect'], 'batchMode')(params.batchMode);\n        }\n        if (params.key) {\n            batchProperties.key = keyValidator(params.key);\n        }\n        batchProperties.trackingId = params.trackingId ? validateTrackingId(params.trackingId) : uuid();\n        if (params.waitTimeSeconds) {\n            numberValidator(params.waitTimeSeconds);\n\n            if (!(params.waitTimeSeconds === 120 || (params.waitTimeSeconds >= 5 && params.waitTimeSeconds <= 60))) {\n                throw new Error('Invalid `waitTimeSeconds` parameter value. ' +\n                'Must be 120 or an integer between 5 and 60.');\n            }\n\n            batchProperties.waitTimeSeconds = params.waitTimeSeconds;\n        }\n    }\n\n    return { batchProperties, batchErrors };\n}\n\n/**\n * Receives a list of fields and parameters, validates and converts them according to the validators and\n * converters defined.\n * It also sets the API Key if defined.\n *\n * @method goPrototype\n * @private\n * @param {Object} [fields] Object containing the fields, their validators and converters, and if they\n * are required.\n * @param {Object} [params] Object containing the parameters and their values.\n * @param {String} [serviceType] ServiceType.\n * @param {String} [serviceName] serviceName.\n * @param {Function} [callback] Callback.\n * @param {Object} [abortSignal] abortSignal generated with Abort Controller.\n * @returns {Object} Validated and converted values.\n */\nexport async function goPrototype(fields, params = {}, serviceType, serviceName, callback, abortSignal) {\n    let converted = convert(fields, params, serviceType);\n    let errors = internalValidator(fields, converted, serviceName);\n\n    if (fields.batchItems && params.batchItems) {\n        const { batchProperties, batchErrors } = processBatchItems(fields, params, serviceType, serviceName);\n        converted = { ...converted, ...batchProperties };\n        errors = errors.concat(batchErrors);\n    }\n\n    if (errors.length) {\n        throw new ValidationError(errors);\n    }\n    return callback(converted, abortSignal);\n}\n","import { goPrototype } from './service';\nimport isFunction from 'lodash/isFunction';\n\nexport function serviceFactory(fields, serviceType, serviceName, handleServiceCall, handleBatchServiceCall) {\n    const batchFields = {\n        batchItems: fields\n    };\n\n    return (options = {}, additionalOptions = {}) => {\n        let serviceCall = handleServiceCall;\n        let opt = options;\n        let serviceFields = fields;\n\n        if (options.batchItems && isFunction(handleBatchServiceCall)) {\n            opt = {\n                trackingId: options.trackingId,\n                batchMode: options.batchMode,\n                waitTimeSeconds: options.waitTimeSeconds,\n                batchItems: options.batchItems,\n                key: options.key\n            };\n            serviceCall = handleBatchServiceCall;\n            serviceFields = batchFields;\n        }\n\n        return goPrototype(\n            serviceFields,\n            opt,\n            serviceType,\n            serviceName,\n            serviceCall,\n            additionalOptions.abortSignal\n        );\n    };\n}\n","import isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\n\nexport default function(template, values) {\n    return template.replace(/\\{ *([\\w_]+) *\\}/g, (_, key) => {\n        let value = values[key];\n\n        if (isUndefined(value)) {\n            return '{' + key + '}';\n        }\n\n        if (isFunction(value)) {\n            value = value(key);\n        }\n\n        return key === 'query' ? encodeURIComponent(value) : value;\n    });\n}\n","export default window.fetch;\n","import fetchProxy from '@fetch';\nimport template from './template';\nimport { getAnalyticsHeader } from './analytics';\n\nexport function getRequestConfiguration(options, transformResponse, contentType) {\n    options.pathParameters = options.pathParameters || {};\n    options.pathParameters.contentType = contentType;\n    options.pathParameters.protocol = options.pathParameters.protocol || 'https';\n    const url = template(options.url, options.pathParameters);\n    const headers = getAnalyticsHeader();\n    headers['Accept'] = 'application/json'; //eslint-disable-line dot-notation\n    if (options.headers && options.headers.trackingId) {\n        headers['Tracking-ID'] = options.headers.trackingId;\n    }\n\n    let requestOptions = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        ...options.abortSignal && { signal: options.abortSignal }\n    };\n\n    if (transformResponse) {\n        requestOptions = { ...requestOptions, transformResponse };\n    }\n    return {\n        options, url, requestOptions\n    };\n}\n\nexport function performRequest(options, url, requestOptions = {}, getData) {\n    return fetchProxy(withQueryParams(options, url), requestOptions)\n        .then(async (response) => {\n            const data = await getData(response);\n            if (!response.ok) {\n                return Promise.reject({ response, data });\n            }\n\n            if (options._getOriginalResponse) {\n                return response;\n            }\n            if (options.requestType === 'batch' && response.status === 202) {\n                return response.headers.location;\n            }\n\n            const trackingIdHeader = response.headers &&\n                (response.headers.get('tracking-id') || response.headers.get('Tracking-ID'));\n\n            return {\n                data,\n                ...trackingIdHeader && { trackingId: trackingIdHeader }\n            };\n        })\n        .catch((error = {}) => {\n            if (requestOptions.signal && requestOptions.signal.aborted === true) {\n                return Promise.reject(error);\n            }\n\n            const { response, data } = error;\n            const err = options._getOriginalResponse ? response || error :\n                errorResponse(data, response && response.status) || error;\n\n            return Promise.reject(err);\n        });\n}\n\nexport function getResponseText(response) {\n    return response.text();\n}\n\nexport function getResponseJson(response) {\n    return response.json();\n}\n\nconst errorResponse = (data, status) => {\n    if (!data) {\n        return undefined;\n    }\n\n    const { error, detailedError } = data;\n\n    // preflight response failed\n    if (!error || !detailedError) {\n        return data;\n    }\n\n    return {\n        message: error.description,\n        data: detailedError,\n        status\n    };\n};\n\nfunction withQueryParams(options, url) {\n    if (!options.queryParameters) {\n        return url;\n    }\n\n    const queryString = Object.keys(options.queryParameters)\n        .map(function(key) {\n            return mapQueryParamToKeyValueString(options, key);\n        })\n        .join('&');\n    return url + '?' + queryString;\n}\n\nfunction mapQueryParamToKeyValueString(options, key) {\n    const queryParamValue = options.queryParameters[key];\n    let result = '';\n    if (Array.isArray(queryParamValue)) {\n        result = queryParamValue.map(function(value) {\n            return createKeyValueString(key, value);\n        }).join('&');\n    } else {\n        result = createKeyValueString(key, options.queryParameters[key]);\n    }\n    return result;\n}\n\nfunction createKeyValueString(key, value) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n}\n","import template from './template';\nimport { getAnalyticsHeader } from './analytics';\nimport isString from 'lodash/isString';\nimport isObject from 'lodash/isObject';\nimport { getRequestConfiguration, performRequest, getResponseJson } from './helpers';\n\nfunction stringify(obj) {\n    try {\n        return JSON.stringify(obj);\n    } catch (ex) {\n        return null;\n    }\n}\n\nfunction setHeader(requestOptions, headerName, headerValue) {\n    if (!requestOptions.headers) {\n        requestOptions.headers = {};\n    }\n\n    const header = requestOptions.headers[headerName] || requestOptions.headers[headerName.toLowerCase()];\n    if (!header) {\n        requestOptions.headers[headerName] = headerValue;\n    }\n}\n\nfunction addObjectBodyParams(bodyParams, requestOptions) {\n    const body = stringify(bodyParams);\n    if (!body) {\n        throw new Error('Unsupported request body type: ' + bodyParams);\n    }\n    setHeader(requestOptions, 'Content-Type', 'application/json');\n    return body;\n}\n\nfunction addBodyParams(options, requestOptions) {\n    const bodyParams = options.bodyParameters;\n    let body;\n    if (!bodyParams) {\n        return;\n    }\n\n    if (isObject(bodyParams)) {\n        body = addObjectBodyParams(bodyParams, requestOptions);\n    } else if (isString(bodyParams)) {\n        body = bodyParams;\n    }\n\n    requestOptions.body = body;\n}\n\nexport const json = {\n    /**\n     * Executes a request and processes the response as JSON.\n     * @method get\n     * @param {Object} options Specifies the details of the request.\n     * @param {String} options.url The URL to request.\n     * @param {Object} [options.queryParameters] The data to pass as GET parameters with the request.\n     * @param {Object} [options.pathParameters] The data to use as {placeholders} in url.\n     * @param {Function} [transformResponse] The custom response transformer function.\n     * @return {Promise} Returns a promise\n     */\n    get: function(options, transformResponse) {\n        const config = getRequestConfiguration(options, transformResponse, 'json');\n        return performRequest(config.options, config.url, config.requestOptions, getResponseJson);\n    },\n\n    /**\n     * Executes a request and processes the response as JSON.\n     * @method post\n     * @param {Object} options Specifies the details of the request.\n     * @param {String} options.url The URL to request.\n     * @param {Object} [options.queryParameters] The data to pass as Url parameters with the request.\n     * @param {Object} [options.pathParameters] The data to use as {placeholders} in url.\n     * @param {Object} [options.bodyParameters] The data to pass to request body.\n     * @return {Promise} Returns a promise\n     */\n    post: function(options) {\n        options.pathParameters = options.pathParameters || {};\n        options.pathParameters.contentType = 'json';\n        options.pathParameters.protocol = options.pathParameters.protocol || 'https';\n\n        const url = template(options.url, options.pathParameters);\n        const headers = getAnalyticsHeader();\n        headers['Accept'] = 'application/json'; //eslint-disable-line dot-notation\n        if (options.headers && options.headers.trackingId) {\n            headers['Tracking-ID'] = options.headers.trackingId;\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: headers,\n            mode: 'cors',\n            redirect: 'follow',\n            ...options.abortSignal && { signal: options.abortSignal }\n        };\n\n        addBodyParams(options, requestOptions);\n\n        return performRequest(options, url, requestOptions, getResponseJson);\n    }\n};\n","import { getRequestConfiguration, performRequest, getResponseText } from './helpers';\n\nexport const text = {\n    /**\n     * Executes a request and processes the response as text.\n     * @method get\n     * @param {Object} options Specifies the details of the request.\n     * @param {String} options.url The URL to request.\n     * @param {Object} [options.queryParameters] The data to pass as GET parameters with the request.\n     * @param {Object} [options.pathParameters] The data to use as {placeholders} in url.\n     * @param {Function} [transformResponse] The custom response transformer function.\n     * @return {Promise} Returns a promise\n     */\n    get: function(options, transformResponse) {\n        const config = getRequestConfiguration(options, transformResponse, 'text');\n        return performRequest(config.options, config.url, config.requestOptions, getResponseText);\n    }\n};\n","import { json } from './json';\nimport { text } from './text';\n\nlet useHttp = false;\n\nconst setUseHttp = (use) => {\n    useHttp = use;\n};\n\nconst getProtocol = () => {\n    return useHttp ? 'http' : 'https';\n};\n\nexport default {\n    useHttp: setUseHttp,\n    protocol: getProtocol,\n\n    get: (options, transformResponse) => {\n        options.protocol = (options && options.protocol) || getProtocol();\n        const pathParameters = options.pathParameters;\n        if (pathParameters && pathParameters.contentType === 'text') {\n            return text.get(options, transformResponse);\n        }\n        return json.get(options, transformResponse);\n    },\n\n    post: (options) => {\n        options.protocol = options.protocol || getProtocol();\n        return json.post(options);\n    }\n};\n","import parameterApplications from 'common/parameterApplications';\n\nfunction isQueryParameter(fieldEntry) {\n    const field = fieldEntry[1];\n    return !field.application || field.application === parameterApplications.QUERY;\n}\n\nfunction isPathParam(fieldEntry) {\n    const field = fieldEntry[1];\n    return field.application === parameterApplications.PATH;\n}\n\nfunction isPostParam(fieldEntry) {\n    const field = fieldEntry[1];\n    return field.application === parameterApplications.POST;\n}\n\nfunction isOtherParam(fieldEntry) {\n    const field = fieldEntry[1];\n    return field.application === parameterApplications.OTHER;\n}\n\nfunction isHeaderParam(fieldEntry) {\n    const field = fieldEntry[1];\n    return field.application === parameterApplications.HEADER;\n}\n\nfunction getFieldEntryNames(fieldEntry) {\n    return {\n        name: fieldEntry[0],\n        fieldName: fieldEntry[2]\n    };\n}\n\nfunction toEntry(source) {\n    return (fieldName) => {\n        const name = (source[fieldName] && source[fieldName].name) || fieldName;\n        return [name, source[fieldName], fieldName];\n    };\n}\n\nfunction createParamsNames(fields, paramsFilterFunction) {\n    let params = Object.keys(fields).map(toEntry(fields));\n    params = params.filter(paramsFilterFunction);\n    params = params.map(getFieldEntryNames);\n\n    return params;\n}\n\nfunction createQueryParamsNames(fields) {\n    return createParamsNames(fields, isQueryParameter);\n}\n\nfunction createPathParamsNames(fields) {\n    return createParamsNames(fields, isPathParam);\n}\n\nfunction createPostParamsNames(fields) {\n    return createParamsNames(fields, isPostParam);\n}\n\nfunction createOtherParamsNames(fields) {\n    return createParamsNames(fields, isOtherParam);\n}\n\nfunction createHeaderParamsNames(fields) {\n    return createParamsNames(fields, isHeaderParam);\n}\n\nfunction createParams(fields, createParamNamesFunction, requestOptions) {\n    const params = {};\n    const paramNames = createParamNamesFunction(fields);\n    paramNames.forEach((param) => {\n        if (param.fieldName in requestOptions) {\n            const field = fields[param.fieldName];\n            const paramValue = requestOptions[param.fieldName];\n            if (field.cast) {\n                field.cast(paramValue, params);\n            } else {\n                params[param.name] = paramValue;\n            }\n        }\n    });\n\n    return params;\n}\n\nexport function createRequestParams(fields, requestOptions) {\n    return {\n        pathParams: createParams(fields, createPathParamsNames, requestOptions),\n        queryParams: createParams(fields, createQueryParamsNames, requestOptions),\n        postParams: createParams(fields, createPostParamsNames, requestOptions),\n        otherParams: createParams(fields, createOtherParamsNames, requestOptions),\n        headerParams: createParams(fields, createHeaderParamsNames, requestOptions)\n    };\n}\n","import parameterApplications from 'common/parameterApplications';\n\nconst fieldName = 'contentType';\n\nexport function setField(fields) {\n    const copiedFields = Object.assign({}, fields);\n    copiedFields[fieldName] = {\n        application: parameterApplications.PATH\n    };\n    return copiedFields;\n}\n\nexport function setValue(requestOptions) {\n    requestOptions[fieldName] = requestOptions[fieldName] || 'json';\n    return requestOptions;\n}\n","import http from '@http';\nimport { createRequestParams } from '../request/requestParamsFactory';\nimport isEmpty from 'lodash/isEmpty';\nimport {setField, setValue} from '../request/contentTypeConfigurer';\n\nexport const singleRequestServiceFactory = (endpoint) => {\n    return (fields, options, abortSignal) => {\n        const { pathParams, queryParams, postParams, headerParams } = createRequestParams(\n            setField(fields),\n            setValue(options)\n        );\n\n        const httpOptions = {\n            headers: headerParams,\n            url: '{protocol}://' + endpoint,\n            pathParameters: pathParams,\n            queryParameters: queryParams,\n            abortSignal\n        };\n\n        if (isEmpty(postParams)) {\n            return http.get(httpOptions);\n        } else {\n            httpOptions.bodyParameters = postParams;\n            return http.post(httpOptions);\n        }\n    };\n};\n","export default {\n    or: (value, defaultValue) => {\n        return value || defaultValue;\n    },\n\n    required: (value, error) => {\n        if (value === undefined || value === null) {\n            throw new TypeError(error);\n        }\n        return value;\n    }\n};\n","/* eslint-disable object-curly-spacing */\n/* eslint-disable no-undef */\nimport template from './template';\n\nfunction createKeyValueString(key, value) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n}\n\nfunction mapQueryParamToKeyValueString(key, queryParams) {\n    const queryParamValue = queryParams[key];\n    let result = '';\n    if (Array.isArray(queryParamValue)) {\n        result = queryParamValue.map(function(value) {\n            return createKeyValueString(key, value);\n        }).join('&');\n    } else {\n        result = createKeyValueString(key, queryParams[key]);\n    }\n    return result;\n}\n\nfunction withQueryParams(url, queryParams) {\n    if (!queryParams) {\n        return url;\n    }\n\n    const queryString = Object.keys(queryParams)\n        .map((key) => {\n            return mapQueryParamToKeyValueString(key, queryParams);\n        })\n        .join('&');\n    return url + '?' + queryString;\n}\n\nexport default (urlTemplate, pathParams, queryParams) => {\n    const url = template(urlTemplate, pathParams);\n    return withQueryParams(url, queryParams);\n};\n","import http from '@http';\nimport asyncRedirectModeFactory from './asyncRedirectModeFactory';\n\nexport function batchRequestStrategy(options) {\n    let endpoint;\n\n    switch (options.batchMode) {\n    case 'async':\n        endpoint = options.endpoints.async;\n        break;\n    case 'sync':\n        endpoint = options.endpoints.sync;\n        break;\n    default: // same as redirect\n        endpoint = options.endpoints.async;\n        options.queryParams.redirectMode = 'manual';\n        break;\n    }\n\n    if (options.batchMode !== 'sync' && options.waitTimeSeconds) {\n        options.queryParams.waitTimeSeconds = options.waitTimeSeconds;\n    } else if (options.queryParams && options.queryParams.waitTimeSeconds) {\n        delete options.queryParams.waitTimeSeconds;\n    }\n\n    return http.post({\n        url: '{protocol}://' + endpoint,\n        queryParameters: options.queryParams,\n        bodyParameters: options.bodyParams,\n        headers: options.headers,\n        requestType: 'batch',\n        ...options.abortSignal && { abortSignal: options.abortSignal }\n    }).then((response) => {\n        if (options.queryParams.redirectMode === 'manual') {\n            // if batch request is async with manual mode - fetch the results using the url provided\n            return asyncRedirectModeFactory(response);\n        }\n        return response;\n    });\n}\n","import http from '@http';\nimport { origin } from 'endpoints';\n\nexport default urlResponse => http.get({ url: '{protocol}://' + origin + urlResponse });\n","import utils from 'rest/utils';\nimport urlBuilder from '../../requester/urlBuilder';\nimport {createRequestParams} from '../request/requestParamsFactory';\nimport isEmpty from 'lodash/isEmpty';\nimport {setField, setValue} from '../request/contentTypeConfigurer';\n\nimport {batchRequestStrategy} from './batchRequestStrategy';\n\nexport const batchRequestServiceFactory = (maxNoOfElementsInBatchRequest, batchEndpoints) => {\n    return (fields, options, abortSignal) => {\n        const queryParams = {},\n            bodyParams = {};\n\n        queryParams.key = options.key;\n\n        const headers = {};\n        if (options.trackingId) {\n            headers.trackingId = options.trackingId;\n        }\n\n        const rawBatchItems = utils.required(options.batchItems);\n\n        fields = setField(fields);\n        bodyParams.batchItems = rawBatchItems.map(function(item) {\n            const { pathParams, queryParams, postParams } = createRequestParams(\n                fields, setValue(item)\n            );\n\n            const request = {\n                query: urlBuilder(batchEndpoints.single, pathParams, queryParams)\n            };\n\n            if (!isEmpty(postParams)) {\n                request.post = postParams;\n            }\n\n            return request;\n        });\n\n        const batchMode = options.batchMode ||\n            (bodyParams.batchItems.length <= maxNoOfElementsInBatchRequest ? 'sync' : 'redirect');\n\n        return batchRequestStrategy({\n            batchMode,\n            waitTimeSeconds: options.waitTimeSeconds,\n            queryParams: queryParams,\n            bodyParams: bodyParams,\n            headers,\n            endpoints: {\n                sync: batchEndpoints.batchSync,\n                async: batchEndpoints.batch\n            },\n            abortSignal\n        });\n    };\n};\n","import { createRequestParams } from '../request/requestParamsFactory';\nimport { batchRequestStrategy } from './batchRequestStrategy';\n\nconst mainPostParamsName = ['origins', 'destinations'];\n\nfunction getOptionalBodyParams(postParams) {\n    const optionalBodyParamsNames = Object.keys(postParams)\n        .filter(paramName => mainPostParamsName.indexOf(paramName) === -1);\n\n    if (!optionalBodyParamsNames.length) {\n        return null;\n    }\n\n    return optionalBodyParamsNames.reduce((accumulator, paramName) => {\n        accumulator[paramName] = postParams[paramName];\n        return accumulator;\n    }, {});\n}\n\nfunction getBodyParams(postParams) {\n    const bodyParams = {\n            origins: postParams.origins,\n            destinations: postParams.destinations\n        },\n        optionalBodyParams = getOptionalBodyParams(postParams);\n\n    if (optionalBodyParams) {\n        bodyParams.options = {\n            post: optionalBodyParams\n        };\n    }\n\n    return bodyParams;\n}\n\nexport function matrixFactory(maxNoOfElementsInBatchRequest, matrixEndpoints) {\n    return (fields, options, abortSignal) => {\n        const requestParams = createRequestParams(fields, options);\n        const bodyParams = getBodyParams(requestParams.postParams);\n        const queryParams = requestParams.queryParams;\n        const headers = requestParams.headerParams;\n\n        const batchMode = options.batchMode ||\n            (bodyParams.origins.length * bodyParams.destinations.length <= maxNoOfElementsInBatchRequest ?\n                'sync' : 'redirect');\n\n        return batchRequestStrategy({\n            batchMode,\n            headers,\n            waitTimeSeconds: options.waitTimeSeconds,\n            queryParams: queryParams,\n            bodyParams: bodyParams,\n            endpoints: {\n                sync: matrixEndpoints.sync,\n                async: matrixEndpoints.async\n            },\n            abortSignal\n        });\n    };\n}\n","/* eslint-disable object-curly-spacing */\n/* eslint-disable no-undef */\n/**\n * Retrieve polygons (in GeoJSON format) representing administrative borders using IDs related to\n * search results entities.\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * tt.services.fuzzySearch({\n *      key: <Your API key>,\n *      query: \"Amsterdam\"\n * }).then(function(response) {\n *      var geometryId = response.results[0].dataSources.geometry.id;\n *      tt.services.additionalData({\n *          key: <Your API key>,\n *          geometries: [geometryId]\n *      }).then(function(adpResponse) {\n *          console.log(adpResponse);\n *      })\n *   });\n * ```\n *\n * @class additionalData\n * @module Services\n * @namespace Services.services\n * @uses KeyMixin\n * @uses BatchMixin\n * @uses GeometriesMixin\n * @uses GeometriesZoomMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n * @constructor\n *\n * @param {Object} [options]\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    string as validateString, trackingId as validateTrackingId, arrayType as validateArrayType,\n    geometriesZoom as validateGeometriesZoom\n} from '../validators';\nimport { batchModel } from '../../model/search/batchModel';\nimport parameterApplications from '../../common/parameterApplications';\nimport {modelResponse} from '../../model/modelResponse';\nimport { v4 as uuid } from 'uuid';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    serviceFactory,\n    singleRequestServiceFactory,\n    batchRequestServiceFactory\n} from '../../core';\n\nconst fields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    geometries: {\n        validators: [validateArrayType],\n        required: true\n    },\n    geometriesZoom: {\n        validators: [validateGeometriesZoom]\n    }\n};\n\nexport function additionalData(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleAdpRequest = singleRequestServiceFactory(endpoints.resolve('adpEndpoint'));\n    const batchAdpRequest = batchRequestServiceFactory(100, {\n        single: endpoints.resolve('batchAdpQueryEndpoint'),\n        batchSync: endpoints.resolve('batchSyncSearchEndpoint'),\n        batch: endpoints.resolve('batchSearchEndpoint')\n    });\n\n    function handleServiceCall(data, abortSignal) {\n        return singleAdpRequest(fields, data, abortSignal).then(modelResponse);\n    }\n    function handleBatchServiceCall(data, abortSignal) {\n        return batchAdpRequest(fields, data, abortSignal).then(response => modelResponse(response, batchModel));\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.SEARCH,\n        'additionalData',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","/* jshint nomen:false */\nimport isFunction from 'lodash/isFunction';\nimport castArray from 'lodash/castArray';\nimport isString from 'lodash/isString';\nimport isNil from 'lodash/isNil';\nimport {pointRegex, circleRegex} from './utils';\nimport {\n    routing as routingLanguageMap,\n    search as searchLanguageMap,\n    maps as mapsLanguageMap,\n    incidentV5 as incidentV5LanguageMap\n} from '../config/language/mappings';\n\nimport geopoliticalViewMappings from 'Services/config/geopolView/mappings';\n\nfunction isLatLon(latlon) {\n    return Object.prototype.hasOwnProperty.call(latlon, 'lat') &&\n    (Object.prototype.hasOwnProperty.call(latlon, 'lon') || Object.prototype.hasOwnProperty.call(latlon, 'lng'));\n}\n\nfunction or(first, second) {\n    if (first === undefined) {\n        return second;\n    }\n    return first;\n}\n\nfunction throwTypeErrorWhen(condition, message) {\n    if (condition) {\n        throw new TypeError(message);\n    }\n}\n\nfunction normalizeLatitude(latitude) {\n    const numLatitude = parseFloat(latitude);\n    if (!isFinite(numLatitude)) {\n        throw new TypeError('an number is expected, but ' + latitude + ' [' + typeof latitude + '] given');\n    }\n    const i = Math.ceil((numLatitude - 90) / 180);\n    return numLatitude - 180 * i;\n}\n\nfunction normalizeLongitude(longitude) {\n    const numLongitude = parseFloat(longitude);\n    if (!isFinite(numLongitude)) {\n        throw new TypeError('an number is expected, but ' + longitude + ' [' + typeof longitude + '] given');\n    }\n    const i = Math.ceil((numLongitude - 180) / 360);\n    return numLongitude - 360 * i;\n}\n\nfunction isXY(xy) {\n    return Object.prototype.hasOwnProperty.call(xy, 'x') && Object.prototype.hasOwnProperty.call(xy, 'y');\n}\n\nfunction isLatitudeLongitude(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'latitude') &&\n        Object.prototype.hasOwnProperty.call(value, 'longitude');\n}\n\nfunction isLatLonFunction(value) {\n    return isFunction(value.lat) && isFunction(value.lng);\n}\n\nfunction castPoint(value) {\n    if (Array.isArray(value) && value.length === 2) {\n        return [...value].reverse();\n    }\n    if (isString(value)) {\n        const match = value.match(pointRegex);\n        throwTypeErrorWhen(!match || !match[1] || !match[2],\n            'A point is expected, but ' + value + ' [' + typeof value + '] given');\n        return [match[2], match[1]];\n    }\n    if (isLatLonFunction(value)) {\n        return [value.lat(), value.lng()];\n    }\n    if (isLatLon(value)) {\n        return [value.lat, or(value.lon, value.lng)];\n    }\n    if (isXY(value)) {\n        return [value.y, value.x];\n    }\n    if (isLatitudeLongitude(value)) {\n        return [value.latitude, value.longitude];\n    }\n    throw new TypeError('A point is expected, but ' + value + ' [' + typeof value + '] given');\n}\n\nfunction isLatLonBBox(bbox) {\n    return Object.prototype.hasOwnProperty.call(bbox, 'minLon') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'minLat') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'maxLon') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'maxLat');\n}\n\nfunction isRightLeftTopBottomBBox(bbox) {\n    return Object.prototype.hasOwnProperty.call(bbox, 'left') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'bottom') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'right') &&\n        Object.prototype.hasOwnProperty.call(bbox, 'top');\n}\n\nfunction isWestEastNorthSouthBBox(bbox) {\n    return isFunction(bbox.getWest) && isFunction(bbox.getEast) &&\n        isFunction(bbox.getSouth) && isFunction(bbox.getNorth);\n}\n\nfunction castBoundingBox(bbox) {\n    let sw, ne;\n    if (isLatLonBBox(bbox)) {\n        return bbox;\n    }\n    if (isRightLeftTopBottomBBox(bbox)) {\n        return { minLon: bbox.left, minLat: bbox.bottom, maxLon: bbox.right, maxLat: bbox.top };\n    }\n    if (isWestEastNorthSouthBBox(bbox)) {\n        return {\n            minLon: bbox.getWest(),\n            minLat: bbox.getSouth(),\n            maxLon: bbox.getEast(),\n            maxLat: bbox.getNorth()\n        };\n    }\n    if (isFunction(bbox.getNorthEast) && isFunction(bbox.getSouthWest)) {\n        ne = castPoint(bbox.getNorthEast());\n        sw = castPoint(bbox.getSouthWest());\n        return { minLon: sw[1], minLat: sw[0], maxLon: ne[1], maxLat: ne[0] };\n    }\n    if (Array.isArray(bbox) && bbox.length === 4) {\n        return { minLon: bbox[0], minLat: bbox[1], maxLon: bbox[2], maxLat: bbox[3] };\n    }\n    if (Array.isArray(bbox) && bbox.length === 2) {\n        sw = castPoint(bbox[0]);\n        ne = castPoint(bbox[1]);\n        return { minLon: sw[1], minLat: sw[0], maxLon: ne[1], maxLat: ne[0] };\n    }\n    if (isString(bbox)) {\n        bbox = bbox.trim().split(/\\s*,\\s*/);\n        if (bbox.length === 4) {\n            return {\n                minLon: parseFloat(bbox[0]),\n                minLat: parseFloat(bbox[1]),\n                maxLon: parseFloat(bbox[2]),\n                maxLat: parseFloat(bbox[3])\n            };\n        }\n    }\n    throw new TypeError('Unable to cast ' + bbox + ' [' + typeof bbox + '] to bounding box');\n}\n\nfunction normalizeBoundingBox(bbox) {\n    let w = bbox.minLon, e = bbox.maxLon, s = bbox.minLat, n = bbox.maxLat;\n    if (e - w > 360) {\n        e = 180;\n        w = -180;\n    } else {\n        if (e > 270) {\n            const right = Math.ceil(w / 360);\n            e -= 360 * right;\n            w -= 360 * right;\n        }\n        if (w < -270) {\n            const left = Math.ceil(-e / 360);\n            e += 360 * left;\n            w += 360 * left;\n        }\n    }\n    s = s < -90 ? -90 : s;\n    n = n > 90 ? 90 : n;\n    return { minLon: w, minLat: s, maxLon: e, maxLat: n };\n}\n\nfunction languageConverter(value, mapping) {\n\n    if (isNil(value) || value === '') {\n        return '';\n    }\n\n    if (mapping[value]) {\n        return value;\n    }\n\n    value = value.toLowerCase();\n\n    for (const language in mapping) {\n        if (Object.prototype.hasOwnProperty.call(mapping, language) && language !== 'defaultValue' &&\n            Object.prototype.hasOwnProperty.call(mapping[language].synonyms, value)\n        ) {\n            return language;\n        }\n    }\n    console.warn('Value provided is invalid (' + value +\n        '). Default value (' + mapping.defaultValue.value + ') will be used instead.');\n    return mapping.defaultValue.value;\n}\n\nfunction geopoliticalViewConverter(value) {\n    if (isNil(value) || value === '') {\n        return '';\n    }\n\n    if (geopoliticalViewMappings[value]) {\n        return value;\n    }\n    console.warn('Value provided is invalid (' + value +\n        '). Default value (' + geopoliticalViewMappings.defaultValue + ') will be used instead.');\n    return geopoliticalViewMappings.defaultValue;\n}\n\nfunction circleFromString(value) {\n    const match = value.match(circleRegex);\n    throwTypeErrorWhen(!match || !match[1] || !match[2] || !match[3],\n        'Unable to cast ' + value + ' [' + typeof value + '] to circle');\n\n    const lat = parseFloat(match[2]);\n    const lon = parseFloat(match[1]);\n    const radius = parseFloat(match[3]);\n    throwTypeErrorWhen(!isFinite(lat) || !isFinite(lon),\n        'Unable to cast ' + value + ' [' + typeof value + '] to circle');\n\n    return 'circle(' + lat + ',' + lon + ',' + radius + ')';\n}\n\nfunction castAndNormalizePoint(value) {\n    const point = castPoint(value);\n    return normalizeLatitude(point[0]) + ',' + normalizeLongitude(point[1]);\n}\n\nfunction convertPointOrCircle(value) {\n    if (isString(value) && value.indexOf('circle') > -1) {\n        return circleFromString(value);\n    }\n    if (Array.isArray(value) && value.length === 3) {\n        return 'circle(' + normalizeLatitude(value[1]) + ',' +\n            normalizeLongitude(value[0]) + ',' + value[2] + ')';\n    }\n    return castAndNormalizePoint(value);\n}\n\nfunction extractPointsFromPolygon(inputPoints) {\n    const points = [];\n    for (const point in inputPoints) {\n        if (Object.prototype.hasOwnProperty.call(inputPoints, point)) {\n            points.push(castAndNormalizePoint(inputPoints[point]));\n        }\n    }\n    return points;\n}\n\nfunction convertPointToLatitudeLongitude(point) {\n    if (!isString(point)) {\n        return point;\n    }\n\n    const splitPoint = point.split(',');\n\n    return {\n        latitude: splitPoint[0],\n        longitude: splitPoint[1]\n    };\n}\n\nfunction prepareSupportingPoints(supportingPoints) {\n    return supportingPoints.map(convertPointToLatitudeLongitude);\n}\n\nexport function convertBoundingBox(value) {\n    return normalizeBoundingBox(castBoundingBox(value));\n}\n\nexport function longitude(value) {\n    return normalizeLongitude(value);\n}\n\nexport function latitude(value) {\n    return normalizeLatitude(value);\n}\n\nexport function point(value) {\n    return castAndNormalizePoint(value);\n}\n\nexport function dateTime(value) {\n    if (value && value instanceof Date) {\n        return value.toISOString();\n    }\n\n    if (!value || !isString(value)) {\n        throw new TypeError('Unable to cast ' + value + ' [' + typeof value + '] to datetime value.');\n    }\n    if (value !== 'now') {\n        value = new Date(value).toISOString();\n    }\n    return value;\n}\n\nexport function geometryList(value) {\n    let figure;\n    throwTypeErrorWhen(!value || !Array.isArray(value),\n        'Unable to cast ' + value + ' [' + typeof value + '] to geometry list (array)');\n\n    for (const figureName in value) {\n        if (Object.prototype.hasOwnProperty.call(value, figureName)) {\n            figure = value[figureName];\n            if (figure.type === 'POLYGON') {\n                figure.vertices = extractPointsFromPolygon(figure.vertices);\n            } else if (figure.type === 'CIRCLE') {\n                figure.position = castAndNormalizePoint(figure.position);\n            }\n        }\n    }\n    return value;\n}\n\nexport function mapLanguage(value) {\n    return languageConverter(value, mapsLanguageMap);\n}\n\nexport function searchLanguage(value) {\n    return languageConverter(value, searchLanguageMap);\n}\n\nexport function routingGuidanceLanguage(value) {\n    return languageConverter(value, routingLanguageMap);\n}\n\nexport function incidentDetailsV5Language(value) {\n    return languageConverter(value, incidentV5LanguageMap);\n}\n\nexport function geopoliticalView(value) {\n    return geopoliticalViewConverter(value);\n}\n\nexport function routingLocations(value) {\n    const response = [];\n    if (isString(value)) {\n        return value\n            .split(':')\n            .map((point) => point.split(',').reverse().join(','))\n            .join(':');\n    }\n    if (Array.isArray(value)) {\n        throwTypeErrorWhen(value.length < 2,\n            'Unable to cast ' + value + ' [' + typeof value + '] to routing locations string');\n\n        // Convert first element to point\n        response.push(castAndNormalizePoint(value[0]));\n\n        // Convert elements from 1 to length-2 to point or circle\n        for (let i = 1; i < value.length - 1; i += 1) {\n            response.push(convertPointOrCircle(value[i]));\n        }\n\n        // Convert last element (length-1) to point\n        response.push(castAndNormalizePoint(value[value.length - 1]));\n\n        // Join converted elements\n        return response.join(':');\n    }\n    throw new TypeError('Unable to cast ' + value + ' [' + typeof value + '] to routing locations string');\n}\n\nexport function roadUse(value) {\n    if (isString(value)) {\n        return '[\"' + value.replace(/[\"']|^\\s+|\\s+$/g, '').split(/[\\s,]+/).join('\",\"') + '\"]';\n    }\n    if (Array.isArray(value)) {\n        for (let i = 0; i < value.length; i += 1) {\n            value[i] = String(value[i]).replace(/[\"']|^\\s+|\\s+$/g, '');\n        }\n        return '[\"' + value.join('\",\"') + '\"]';\n    }\n    throw new TypeError('Unable to cast ' + value + ' [' + typeof value + '] to road use string');\n}\n\nexport function arrayOf(options) {\n    return (values) => {\n        values.forEach((value) => {\n            for (const key in value) {\n                if (Object.prototype.hasOwnProperty.call(value, key) &&\n                        Object.prototype.hasOwnProperty.call(options, key) &&\n                        Array.isArray(options[key].converters)) {\n                    options[key].converters.forEach((converter) => {\n                        if (isFunction(converter)) {\n                            value[key] = converter(value[key]);\n                        }\n                    });\n                }\n            }\n        });\n        return values;\n    };\n}\n\nexport function objectOf(options) {\n    return (value) => {\n        for (const key in value) {\n            if (Object.prototype.hasOwnProperty.call(value, key) &&\n                    Object.prototype.hasOwnProperty.call(options, key) &&\n                    isFunction(options[key].converter)) {\n\n                value[key] = options[key].converter(value[key]);\n            }\n        }\n        return value;\n    };\n}\n\nexport function arrayOfStrings(value) {\n    if (!value) {\n        return [];\n    }\n    if (isString(value)) {\n        value = value.trim().replace(/\\s*[,;]\\s*/g, ',');\n        return value.split(/[,;]+/);\n    }\n    if (Array.isArray(value)) {\n        return value;\n    }\n    throw new TypeError('Unable to cast ' + value + ' [' + typeof value + '] to array of strings');\n}\n\nexport function route(values) {\n    return {\n        points: values.map(castPoint).map(([lat, lon]) => ({ lat, lon }))\n    };\n}\n\nexport function integer(value) {\n    return Math.round(Number(value));\n}\n\nexport function supportingPoints(value) {\n    const arrayOfPoints = [];\n    if (isString(value)) {\n        value = value.split(':');\n    }\n    if (Array.isArray(value)) {\n\n        // Convert elements to points\n        for (let i = 0; i < value.length; i++) {\n            arrayOfPoints.push(castAndNormalizePoint(value[i]));\n        }\n    } else {\n        arrayOfPoints.push(castAndNormalizePoint(value));\n    }\n    return prepareSupportingPoints(arrayOfPoints);\n}\n\nexport function constantSpeedConsumption(value) {\n    if (isString(value)) {\n        return value;\n    }\n\n    if (!Array.isArray(value)) {\n        throw new TypeError('An array is required');\n    }\n    return value.join(':');\n}\n\nexport function avoidAreas(value) {\n    if (!Array.isArray(value)) {\n        throw new TypeError('An array is required');\n    }\n    return {\n        rectangles: value.map((area) => {\n            return {\n                southWestCorner: convertPointToLatitudeLongitude(castAndNormalizePoint(area.southWestCorner)),\n                northEastCorner: convertPointToLatitudeLongitude(castAndNormalizePoint(area.northEastCorner))\n            };\n        })\n    };\n}\n\nexport function commaSeparated(value) {\n    if (Array.isArray(value)) {\n        return value.join();\n    } else {\n        throw new TypeError('An array is required');\n    }\n}\n\nexport function array(value) {\n    return castArray(value);\n}\n\nexport function removeWhitespaces(value) {\n    if (typeof value === 'string') {\n        return value.replace(/\\s/g, '');\n    } else {\n        throw new TypeError('A string is required');\n    }\n}\n\n","export const SEARCH = 'search';\nexport const POI_SEARCH = 'poiSearch';\nexport const CATEGORY_SEARCH = 'categorySearch';\nexport const GEOMETRY_SEARCH = 'geometrySearch';\nexport const NEARBY_SEARCH = 'nearbySearch';\nexport const SEARCH_ALONG_ROUTE = 'searchAlongRoute';\n\n","/* eslint-disable max-len */\n/**\n * Makes a search request using the TomTom\n * [Search API - Along Route Search](ALONG_ROUTE_SEARCH_URL).\n *\n * The Search Along Route endpoint allows you to perform a fuzzy search for\n * POIs along a specified route. This search is constrained by specifying the\n * Detour Time limiting measure.\n *\n * To send the route points, this service will use a POST request with the  {{#crossLink \"Services.services.alongRouteSearch/route:parameter\"}}{{/crossLink}} encoded as a JSON payload.\n * The minimum number of route points is 2.\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts along route search data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n *```js\n * tt.services.alongRouteSearch({\n *     key: <Your API key>,\n *     limit: 20,\n *     maxDetourTime: 120,\n *     query: 'gas station',\n *     route: [\n *         {\n *             'lat': 37.7524152343544,\n *             'lon':-122.43576049804686\n *         },\n *         {\n *             'lat': 37.70660472542312,\n *             'lon':-122.43301391601562\n *         },\n *         [-122.36434936523438, 37.712059855877314], // Another valid format\n *     ]\n *   }).then(function(response) {\n *     console.log('SUMMARY:');\n *     console.table(response.summary);\n *     console.log('RESULTS:');\n *     console.table(response.results);\n *   });\n * ```\n *\n * For a list of all available formats for routes, read the documentation for the\n * {{#crossLink \"Services.services.alongRouteSearch/route:parameter\"}}{{/crossLink}} option.\n *\n * @class alongRouteSearch\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses QueryMixin\n * @uses BatchMixin\n * @uses BrandSetMixin\n * @uses OpeningHoursMixin\n * @uses CategorySetMixin\n * @uses ConnectorSetMixin\n * @uses TimeZoneMixin\n * @uses MapcodesMixin\n * @uses FuelSetMixin\n * @uses TrackingIdMixin\n * @uses MaxPowerKwMixin\n * @uses MinPowerKwMixin\n * @uses ViewMixin\n * @uses AbortSignalMixin\n * @constructor\n *\n * @param {Object} [options]\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n/* eslint-enable max-len */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    bool as validateBool, string as validateString, key as validateKey, trackingId as validateTrackingId,\n    oneOfValue as validateOneOfValue, number as validateNumber, integerInInterval as validateIntegerInInterval,\n    route as validateRoute, connectorSet as validateConnectorSet\n} from '../validators';\nimport {route as convertRoute} from '../converters';\nimport { SEARCH_ALONG_ROUTE } from '../../common/searchTypes';\nimport parameterApplications from '../../common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {searchModel} from '../../model/search/search';\nimport {\n    singleRequestServiceFactory, batchRequestServiceFactory, serviceFactory\n} from '../../core';\n\nconst searchType = SEARCH_ALONG_ROUTE;\n\nconst fields = {\n    key: {\n        validators: [validateKey]\n    },\n\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n\n    /**\n     * The maximum allowed value is 3600.\n     *\n     * @attribute maxDetourTime\n     * @param {Number} [options.maxDetourTime] New maximum detour time in seconds.\n     */\n    maxDetourTime: {\n        validators: [validateIntegerInInterval(1, 3600)],\n        required: true\n    },\n\n    /**\n     * @attribute spreadingMode\n     * @param {String} [options.spreadingMode] Enables the spreading of returned results evenly along the route.\n     */\n    spreadingMode: {\n        validators: [validateOneOfValue(['auto'], 'spreading mode')]\n    },\n\n    /**\n     * The following formats are supported:\n     *\n     * - **String[]** (longitude/latitude pairs)\n     *   - `[\"4.8,52.3\", \"4.8,52.3\"]`\n     * - **Array[]** (longitude/latitude pairs)\n     *   - `[ [4.8,52.3], [4.8,52.3] ]`\n     * - **Object[]**\n     *   - `{lon: 4.8, lat: 52.3}`\n     *   - `{lng: 5.8, lat: 53.3}`\n     *   - `{x: 53.3, y: 5.8}`\n     *   - `{longitude: 5.8, latitude: 53.3}`\n     *   - `{lng: Function, lat: Function}` The functions should return a numeric value.\n     *\n     * @example\n     *```js\n     * function callbackFn(response) {\n     *   console.log(response);\n     * }\n     *\n     * tomtom.alongRouteSearch({\n     *   route:[\n     *     {\n     *         lat: 37.7524152343544,\n     *         lon:-122.43576049804686\n     *     },\n     *     {\n     *         lat: 37.70660472542312,\n     *         lon:-122.43301391601562\n     *     }\n     *   ]\n     * })\n     *\n     * .then(callbackFn);\n     *```\n     *\n     * @attribute route\n     * @param {Array} [options.route] Route representation.\n     */\n    route: {\n        required: true,\n        converters: [convertRoute],\n        validators: [validateRoute],\n        application: parameterApplications.POST\n    },\n\n    query: {\n        required: true,\n        validators: [validateString],\n        application: parameterApplications.PATH\n    },\n\n    // A custom \"limit\" docblock is used because the max limit value differs from the one used on the\n    // other services (100).\n    /**\n     * @attribute limit\n     * @param {Number} [options.limit=10] The maximum number of elements in the response. The maximum number is 20.\n     */\n    limit: {\n        validators: [validateIntegerInInterval(1, 20)]\n    },\n\n    type: {\n        validators: [validateString],\n        defaultValue: searchType,\n        application: parameterApplications.PATH\n    },\n\n    brandSet: {\n        validators: [validateString]\n    },\n\n    categorySet: {\n        validators: [validateString]\n    },\n\n    connectorSet: {\n        validators: [validateConnectorSet]\n    },\n\n    minPowerKW: {\n        validators: [validateNumber]\n    },\n\n    maxPowerKW: {\n        validators: [validateNumber]\n    },\n\n    openingHours: {\n        validators: [validateOneOfValue(['nextSevenDays'], 'openingHours parameter')]\n    },\n\n    timeZone: {\n        validators: [validateOneOfValue(['iana'], 'timeZone parameter')]\n    },\n\n    /**\n     * @attribute sortBy\n     * @param {String} [options.sortBy='detourTime']  Parameter which provides possibility to sort returned results.\n     * Values: `detourTime`, `detourDistance`, `detourOffset`\n     *\n     * * Detour distance will be calculated as a difference between the original distance and the distance of a new\n     * route with Point Of Interest location.\n     * * `detourDistance` field will be present in every response regardless of sorting parameter.\n     * * If detour offset is set to false `detourOffset=false` and sorting parameter is set to detourOffset\n     * `sortBy=detourOffset` then detour offset will be calculated and results will be sorted as expected, but\n     * detourOffset value will not be present in the response.\n     */\n    sortBy: {\n        validators: [validateOneOfValue(['detourTime', 'detourOffset', 'detourDistance'], 'sortBy')]\n    },\n\n    /**\n     * @attribute detourOffset\n     * @param {Boolean} [options.detourOffset=false] Parameter which turns on calculation of the distance between the\n     * start of the route and the starting point of the detour to a POI.\n     *\n     * * Detour offset is also calculated when `sortBy` parameter is set to `detourOffset`.\n     * * Value is provided in a response only when `detourOffset` is set to `true`.\n     */\n    detourOffset: {\n        validators: [validateBool]\n    },\n\n    view: {\n        validators: [validateString]\n    }\n};\n\nexport function alongRouteSearch(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('searchEndpoint'));\n    const batchRequest = batchRequestServiceFactory(100, {\n        single: endpoints.resolve('batchSearchQueryEndpoint'),\n        batchSync: endpoints.resolve('batchSyncSearchEndpoint'),\n        batch: endpoints.resolve('batchSearchEndpoint')\n    });\n\n    const handleServiceCall = (data, abortSignal) => {\n        return singleRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, searchModel));\n    };\n    const handleBatchServiceCall = (data, abortSignal) => {\n        return batchRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, searchModel));\n    };\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.SEARCH,\n        'alongRouteSearch',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","import isString from 'lodash/isString';\nimport isEmpty from 'lodash/isEmpty';\nimport {isValidValue} from './utils';\n\nconst engineType = {\n    combustion: 'combustion',\n    electric: 'electric',\n    any: 'any'\n};\n\nfunction validateIfPointsGreaterOrEqual(speedsAndConsumptions) {\n    const sortedKeys = Object.keys(speedsAndConsumptions).sort(function(x, y) {\n        return parseFloat(x) > parseFloat(y);\n    });\n    const keysLength = sortedKeys.length;\n\n    if (speedsAndConsumptions[sortedKeys[keysLength - 2]] > speedsAndConsumptions[sortedKeys[keysLength - 1]]) {\n        throw new Error('Consumption for two highest speeds should be increasing');\n    }\n}\n\nfunction validateFloat(val) {\n    if (isNaN(parseFloat(val)) || !isFinite(val)) {\n        throw new Error('A value parsable to float is expected, but ' + val + ' [' + typeof val + '] given');\n    }\n}\n\n/**\n * @param {String[]} arr\n */\nfunction consumptionPairsValidator(arr) {\n    const speedsAndConsumptions = {};\n    arr.forEach(function(element) {\n        const pair = element.split(',');\n        if (pair.length !== 2) {\n            throw new Error('Invalid number of parameters in the pair around ' + element);\n        }\n        if (pair[0].trim().length === 0) {\n            throw new Error('Speed value must not be empty.');\n        }\n        if (pair[1].trim().length === 0) {\n            throw new Error('Consumption value must not be empty.');\n        }\n        validateFloat(pair[0]);\n        validateFloat(pair[1]);\n        if (Object.prototype.hasOwnProperty.call(speedsAndConsumptions, parseFloat(pair[0]))) {\n            throw new Error('Duplicate speed: ' + pair[0]);\n        } else {\n            speedsAndConsumptions[parseFloat(pair[0])] = parseFloat(pair[1]);\n        }\n    });\n    if (Object.keys(speedsAndConsumptions).length > 1) {\n        validateIfPointsGreaterOrEqual(speedsAndConsumptions);\n    }\n}\n\nfunction checkIfCorrectEngineType(obj, type) {\n    if (obj.vehicleEngineType && obj.vehicleEngineType !== type && type !== engineType.any) {\n        throw new Error('Expecting vehicleEngineType set to ' + type);\n    }\n}\n\nfunction efficiencyParameterRequired(obj, paramName) {\n    if (!(isValidValue(obj.accelerationEfficiency) &&\n        isValidValue(obj.decelerationEfficiency) &&\n        isValidValue(obj.uphillEfficiency) &&\n        isValidValue(obj.downhillEfficiency))) {\n        throw new Error('Efficiency parameters are required when using ' + paramName);\n    }\n}\n\nfunction hasEfficiencyParameterSet(obj) {\n    return obj.accelerationEfficiency ||\n        obj.decelerationEfficiency ||\n        obj.uphillEfficiency ||\n        obj.downhillEfficiency;\n}\n\nfunction validateDependantParameters(obj, paramName1, paramName2) {\n    if (!(obj[paramName1] && obj[paramName2])) {\n        throw new Error('Missing dependant parameter. Expecting both defined: ' + paramName1 + ', ' + paramName2);\n    }\n}\n\nfunction validateEfficiencyParameters(obj, paramName1, paramName2) {\n    if (obj[paramName1] * obj[paramName2] > 1) {\n        throw new Error('Product of ' + paramName1 + ' and ' + paramName2 + ' cannot exceed 1');\n    }\n}\n\n/**\n * @ignore\n * Consumption Model cannot be used with travelMode values bicycle and pedestrian.\n * @param {Object} obj\n */\nfunction validateTravelMode(obj) {\n    if (obj.travelMode === 'bicycle' || obj.travelMode === 'pedestrian') {\n        throw new Error('Consumption model parameters cannot be set if travelMode is set to bicycle or pedestrian');\n    }\n}\n\n/**\n * @ignore\n * All parameters require constantSpeedConsumption* to be specified by the user. It is an\n * error to specify any other consumption model parameter (with the exception of vehicleWeight)\n * if constantSpeedConsumption* is not specified.\n * @param {Object} obj\n */\nfunction hasConstantSpeedConsumption(obj) {\n    if (!obj.constantSpeedConsumptionInLitersPerHundredkm && !obj.constantSpeedConsumptionInkWhPerHundredkm) {\n        throw new Error('Consumption model cannot be used without setting constant speed consumption parameter');\n    }\n}\n\n/**\n * @ignore\n * The list must contain between 1 and 25 points (inclusive), and may not contain\n * duplicate points for the same speed. If it only contains a single point, then the\n * consumption rate of that point is used without further processing.\n * Consumption specified for the highest speed must be greater than or equal to\n * that of the penultimate highest speed. This ensures that extrapolation does not\n * lead to negative consumption rates. Similarly, consumption values specified for the\n * two lowest speeds in the list cannot lead to a negative consumption rate for any lower speed.\n * The minimum and maximum values described here refer to the valid range for the consumption\n * values (expressed in l/100km).\n * @param {Number} engineType\n * @param {Object} obj\n * @return {Function} function\n */\nexport function constantSpeedConsumption(engineType) {\n    return (value, obj) => {\n        if (value === undefined || value === null) {\n            return;\n        }\n        validateTravelMode(obj);\n        checkIfCorrectEngineType(obj, engineType);\n        if (!isString(value)) {\n            throw new TypeError('Expecting a String like \"15.2,12.2:8.0,9.0\"');\n        }\n        const speedPairs = value.split(':');\n        if (speedPairs.length < 1 || speedPairs.length > 25) {\n            throw new Error('Incorrect amount of speed-consumption pairs provided. Expecting 1-25, but got ' +\n                value.length);\n        }\n        consumptionPairsValidator(speedPairs);\n    };\n}\n\nexport function vehicleWeight(value, obj) {\n    if (hasEfficiencyParameterSet(obj) && value === undefined) {\n        throw new Error('vehicleWeight parameter must be set if any efficiency parameters is present');\n    }\n}\n\nexport function floatAndEngineType(engineType, paramName) {\n    return function(value, obj) {\n        if (!value) {\n            return;\n        }\n        validateTravelMode(obj);\n        hasConstantSpeedConsumption(obj);\n        checkIfCorrectEngineType(obj, engineType);\n        validateFloat(value);\n        if (value < 0) {\n            throw new Error(paramName + ': Expecting positive value');\n        }\n    };\n}\n\nexport function fuelEnergyDensityInMJoulesPerLiter(value, obj) {\n    if (!value) {\n        return;\n    }\n    validateTravelMode(obj);\n    validateFloat(value);\n    hasConstantSpeedConsumption(obj);\n    checkIfCorrectEngineType(obj, 'combustion');\n    efficiencyParameterRequired(obj, 'fuelEnergyDensityInMJoulesPerLiter');\n}\n\n/**\n * @ignore\n * accelerationEfficiency and decelerationEfficiency must always be specified as a pair (i.e., both or none).\n * uphillEfficiency and downhillEfficiency must always be specified as a pair (i.e., both or none).\n * If accelerationEfficiency and decelerationEfficiency are specified, the\n * product of their values must not be greater than 1 (to prevent perpetual motion).\n * If uphillEfficiency and downhillEfficiency are specified, the product of their\n * values must not be greater than 1 (to prevent perpetual motion).\n * @param {Number} paramName1\n * @param {Number} paramName2\n * @return {undefined} undefined\n */\nexport function efficiencyParameter(paramName1, paramName2) {\n    return function(value, obj) {\n        if (!value) {\n            return;\n        }\n        validateTravelMode(obj);\n        hasConstantSpeedConsumption(obj);\n        checkIfCorrectEngineType(obj, engineType.any);\n        validateDependantParameters(obj, paramName1, paramName2);\n        /**\n         * @ignore\n         * If *Efficiency parameters are specified by the user, then vehicleWeight must also be specified.\n         */\n        validateDependantParameters(obj, paramName1, 'vehicleWeight');\n        /**\n         * @ignore\n         * When vehicleEngineType is combustion, fuelEnergyDensityInMJoulesPerLiter must be specified as well.\n         */\n        if (obj.vehicleEngineType === engineType.combustion) {\n            validateDependantParameters(obj, paramName1, 'fuelEnergyDensityInMJoulesPerLiter');\n        }\n        validateEfficiencyParameters(obj, paramName1, paramName2);\n        validateFloat(value);\n    };\n}\n\nexport function chargeParameter(paramName1, paramName2) {\n    return function(value, obj) {\n        if (!value) {\n            return;\n        }\n        validateTravelMode(obj);\n        hasConstantSpeedConsumption(obj);\n        checkIfCorrectEngineType(obj, engineType.electric);\n        validateDependantParameters(obj, paramName1, paramName2);\n        validateFloat(value);\n    };\n}\n\nexport function budgetInRange(_, data) {\n    let maxBudget;\n    let currentBudgetProvided;\n    const electricEngine = data.vehicleEngineType === 'electric';\n    if (electricEngine) {\n        maxBudget = data.currentChargeInkWh;\n        currentBudgetProvided = data.energyBudgetInkWh;\n        if (currentBudgetProvided > maxBudget) {\n            throw new Error('Energy budget may not be greater than current energy.');\n        }\n    } else {\n        maxBudget = data.currentFuelInLiters;\n        currentBudgetProvided = data.fuelBudgetInLiters;\n        if (currentBudgetProvided > maxBudget) {\n            throw new Error('Fuel budget may not be greater than current fuel.');\n        }\n    }\n    if (currentBudgetProvided < 0) {\n        throw new Error('Budget may not be negative.');\n    }\n}\n\nexport function requiredBudget(_, data) {\n    const liters = 'fuelBudgetInLiters' in data;\n    const watts = 'energyBudgetInkWh' in data;\n    const seconds = 'timeBudgetInSec' in data;\n    const meters = 'distanceBudgetInMeters' in data;\n    const numberOfSetParams = [liters, watts, seconds, meters].filter(budget => budget).length;\n    if (numberOfSetParams === 0 || numberOfSetParams > 1) {\n        throw new Error('Exactly one of fuelBudgetInLiters, energyBudgetInkWh, ' +\n            'timeBudgetInSec and distanceBudgetInMeters must be set.');\n    }\n}\n\nexport function requiredWithSpecificEngineType(value, data, key) {\n    const consumptionInLiters = 'constantSpeedConsumptionInLitersPerHundredkm' in data;\n    const consumptionInWatts = 'constantSpeedConsumptionInkWhPerHundredkm' in data;\n    const electricEngine = data.vehicleEngineType === 'electric';\n\n    if (key === 'energyBudgetInkWh' && value) {\n        if (!electricEngine) {\n            throw new Error('Engine type should be \"electric\" when energyBudgetInkWh is set');\n        }\n        if (!consumptionInWatts) {\n            throw new Error('Missing constant speed consumption for electric engine.');\n        }\n    } else if (key === 'fuelBudgetInLiters' && value) {\n        if (electricEngine) {\n            throw new Error('Engine type should be \"combustion\" or undefined when fuelBudgetInLiters is set');\n        }\n        if (!consumptionInLiters) {\n            throw new Error('Missing constant speed consumption for combustion engine.');\n        }\n    }\n}\n\nexport function notCommon(_, data) {\n    const forbiddenAvoid = 'alreadyUsedRoads';\n    const forbiddenModes = ['bicycle', 'pedestrian'];\n\n    if ('avoid' in data && data.avoid.indexOf(forbiddenAvoid) > -1) {\n        throw new Error(forbiddenAvoid + ' is not allowed value for avoid parameter ' +\n            'in Calculate Reachable Route request.');\n    }\n\n    if ('travelMode' in data && forbiddenModes.indexOf(data.travelMode) > -1) {\n        throw new Error(data.travelMode + ' is not allowed value for travelMode parameter ' +\n            'in Calculate Reachable Route request.');\n    }\n\n    if ('arriveAt' in data) {\n        throw new Error('arriveAt parameter is not allowed in Calculate Reachable Route request.');\n    }\n}\n\nexport function firstParamCannotBeUsedWithSecond(paramNameUsed, paramNameToAvoid) {\n    return function(value, obj) {\n        if (!value) {\n            return;\n        }\n        if (Object.prototype.hasOwnProperty.call(obj, paramNameToAvoid) &&\n            isValidValue(obj[paramNameToAvoid])) {\n            throw new Error(paramNameUsed + ' parameter cannot be used in conjunction with ' +\n                paramNameToAvoid);\n        }\n    };\n}\n\nexport function requiresDependantParameter(parameterName, dependantParameter) {\n    return function(value, obj) {\n        if (!value) {\n            return;\n        }\n        if (!Object.prototype.hasOwnProperty.call(obj, dependantParameter)) {\n            throw new Error(dependantParameter + ' must be specified when using with ' + parameterName);\n        }\n    };\n}\n\nexport function notRequiredWithCategoryNorBrandSet(_, data) {\n    const isQueryAbsent = isEmpty(data.query);\n    const isBrandSetAbsent = isEmpty(data.brandSet);\n    const isCategorySetAbsent = isEmpty(data.categorySet);\n    if (isQueryAbsent && isBrandSetAbsent && isCategorySetAbsent) {\n        throw new Error('Empty query parameter is only allowed when used with brandSet or categorySet filters');\n    }\n}\n\nexport function consumptionRecuperationAltitudeParameter(_, data) {\n    const recuperationInkWhPerkmAltitudeLoss = data.recuperationInkWhPerkmAltitudeLoss;\n    const consumptionInkWhPerkmAltitudeGain = data.consumptionInkWhPerkmAltitudeGain;\n\n    validateFloat(recuperationInkWhPerkmAltitudeLoss);\n    validateFloat(consumptionInkWhPerkmAltitudeGain);\n\n    if (consumptionInkWhPerkmAltitudeGain < recuperationInkWhPerkmAltitudeLoss) {\n        throw new Error('consumptionInkWhPerkmAltitudeGain must be greater than ' +\n        'recuperationInkWhPerkmAltitudeLoss');\n    }\n\n    if (consumptionInkWhPerkmAltitudeGain > 500) {\n        throw new Error('recuperationInkWhPerkmAltitudeLoss and less than 500.0');\n    }\n\n    if (recuperationInkWhPerkmAltitudeLoss < 0) {\n        throw new Error('recuperationInkWhPerkmAltitudeLoss must be greater than 0.0');\n    }\n}\n","import {\n    validateBoundingBox,\n    bool as validateBool, string as validateString, trackingId as validateTrackingId,\n    oneOfValue as validateOneOfValue, naturalInteger as validateNaturalInteger,\n    languageCode as validateLanguageCode, point as validatePoint, countrySet as validateCountrySet,\n    number as validateNumber, mapcodes as validateMapcodes, limit as validateLimit,\n    connectorSet as validateConnectorSet, fuelSet as validateFuelSet, offset as validateOffset\n} from '../../services/validators';\nimport {\n    convertBoundingBox, searchLanguage as convertLanguage, point as convertPoint\n} from '../../services/converters';\n\nimport { SEARCH } from '../../common/searchTypes';\nimport parameterApplications from '../../common/parameterApplications';\nimport {notRequiredWithCategoryNorBrandSet} from '../postValidators';\nimport { v4 as uuid } from 'uuid';\n\nexport default {\n    create: () => {\n        return {\n            __all: {\n                validators: [notRequiredWithCategoryNorBrandSet]\n            },\n            key: {\n                validators: [validateString]\n            },\n            trackingId: {\n                validators: [validateTrackingId],\n                application: parameterApplications.HEADER,\n                defaultValue: uuid\n            },\n            query: {\n                validators: [\n                    validateString\n                ],\n                application: parameterApplications.PATH,\n                defaultValue: ''\n            },\n            typeahead: {\n                validators: [validateBool]\n            },\n            limit: {\n                validators: [validateLimit]\n            },\n            offset: {\n                validators: [validateOffset],\n                name: 'ofs'\n            },\n            language: {\n                validators: [validateLanguageCode],\n                converters: [convertLanguage]\n            },\n            countrySet: {\n                validators: [validateCountrySet]\n            },\n            radius: {\n                validators: [validateNaturalInteger]\n            },\n            center: {\n                converters: [convertPoint], validators: [validatePoint],\n                cast: (center, requestOptions) => {\n                    const coordinates = center.split(',');\n                    requestOptions.lat = coordinates[0];\n                    requestOptions.lon = coordinates[1];\n                }\n            },\n            type: {\n                validators: [validateString],\n                defaultValue: SEARCH,\n                application: parameterApplications.PATH\n            },\n            bestResult: {\n                validators: [validateBool],\n                cast: (bestResults, requestOptions) => {\n                    if (!bestResults) {\n                        return;\n                    }\n                    requestOptions.limit = 1;\n                    requestOptions.ofs = 0;\n                }\n            },\n            protocol: {\n                validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n            },\n            extendedPostalCodesFor: {\n                validators: [validateString]\n            },\n            view: {\n                validators: [validateOneOfValue(['IL', 'MA', 'IN', 'PK', 'Unified', 'RU', 'TR', 'AR', 'CN'], 'view')]\n            },\n            brandSet: {\n                validators: [validateString]\n            },\n            categorySet: {\n                validators: [validateString]\n            },\n            connectorSet: {\n                validators: [validateConnectorSet]\n            },\n            minPowerKW: {\n                validators: [validateNumber]\n            },\n            maxPowerKW: {\n                validators: [validateNumber]\n            },\n            openingHours: {\n                validators: [validateOneOfValue(['nextSevenDays'], 'openingHours parameter')]\n            },\n            timeZone: {\n                validators: [validateOneOfValue(['iana'], 'timeZone parameter')]\n            },\n            mapcodes: {\n                validators: [validateMapcodes]\n            },\n            fuelSet: {\n                validators: [validateFuelSet]\n            },\n            relatedPois: {\n                validators: [validateOneOfValue(['off', 'child', 'parent', 'all'], 'relatedPois')]\n            }\n        };\n    }\n};\n\nexport const boundingBox = () => ({\n    validators: [validateBoundingBox],\n    converters: [convertBoundingBox],\n    cast: (boundingBox, requestOptions) => {\n        requestOptions.topLeft = `${boundingBox.maxLat},${boundingBox.minLon}`;\n        requestOptions.btmRight = `${boundingBox.minLat},${boundingBox.maxLon}`;\n    }\n});\n\n","/**\n * Base class for all the Search services.\n *\n * @private\n * @class Search\n * @module Services\n * @uses ProtocolMixin\n * @uses KeyMixin\n * @uses LimitMixin\n * @uses LanguageMixin\n * @uses BatchMixin\n * @uses TimeZoneMixin\n * @uses TrackingIdMixin\n * @uses RelatedPoisMixin\n *\n * @constructor\n * @param {Object} [options] Options to be passed to the search call,\n *     or an array of such options objects to perform a batch request.\n */\n/* jshint nomen:false */\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {clone, addFields} from '../utils';\nimport {searchModel} from '../../model/search/search';\nimport {batchModel} from '../../model/search/batchModel';\nimport searchParams from './searchParameters';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    serviceFactory,\n    singleRequestServiceFactory,\n    batchRequestServiceFactory\n} from '../../core';\n\nexport class Search {\n    constructor(options, additionalOptions) {\n        this.options = options;\n        this.additionalOptions = additionalOptions;\n        this.defaultFields = clone(searchParams.create());\n        this.fields = {};\n    }\n\n    _getRestService() {\n        const endpoints = new Endpoints(this.additionalOptions);\n        return {\n            search: singleRequestServiceFactory(endpoints.resolve('searchEndpoint')),\n            batch: batchRequestServiceFactory(100, {\n                single: endpoints.resolve('batchSearchQueryEndpoint'),\n                batchSync: endpoints.resolve('batchSyncSearchEndpoint'),\n                batch: endpoints.resolve('batchSearchEndpoint')\n            })\n        };\n    }\n\n    handleBatchServiceCall(data, abortSignal) {\n        return this._getRestService().batch(this.fields, data, abortSignal)\n            .then(response => modelResponse(response, batchModel));\n    }\n\n    handleServiceCall(options, abortSignal) {\n        return this._getRestService().search(this.fields, options, abortSignal)\n            .then(({ data, trackingId }) => {\n                return modelResponse({\n                    data: options.bestResult ? data.results[0] : data,\n                    trackingId\n                }, searchModel);\n            });\n    }\n\n    construct(serviceName) {\n        this.fields = addFields(this.fields, this.defaultFields);\n        const service = serviceFactory(\n            this.fields,\n            SERVICE_TYPES.SEARCH,\n            serviceName || 'search',\n            this.handleServiceCall.bind(this),\n            this.handleBatchServiceCall.bind(this)\n        );\n\n        return service(this.options, this.additionalOptions);\n    }\n}\n","/* eslint-disable max-len */\n/**\n * Makes a search request using the TomTom\n * [Search API - Category Search](CATEGORY_SEARCH_URL).\n *\n * Parameters need to be passed to the constructor.\n *\n * The list of all supported category codes are available\n * [here](SEARCH_API_SUPPORTED_CATEGORY_CODES_URL).\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts category search data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(result) {\n *   console.log(result);\n * };\n *\n * tt.services.categorySearch({\n *    key: <Your API key>,\n *    query: 'restaurant'\n * }).then(callbackFn);\n * ```\n * @class categorySearch\n * @namespace Services.services\n * @extends Search\n * @uses ExtendedPostalCodesForMixin\n * @uses CenterMixin\n * @uses RadiusMixin\n * @uses BoundingBoxMixin\n * @uses CountrySetMixin\n * @uses OffsetMixin\n * @uses BestResultMixin\n * @uses QueryMixin\n * @uses TypeaheadMixin\n * @uses ViewMixin\n * @uses BrandSetMixin\n * @uses OpeningHoursMixin\n * @uses CategorySetMixin\n * @uses ConnectorSetMixin\n * @uses MapcodesMixin\n * @uses FuelSetMixin\n * @uses MinPowerKwMixin\n * @uses MaxPowerKwMixin\n * @uses AbortSignalMixin\n * @constructor\n * @module Services\n *\n * @param {Object} [options] Options to be passed to the search call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n */\nimport { Search } from './search';\nimport { boundingBox } from './searchParameters';\nimport { CATEGORY_SEARCH } from '../../common/searchTypes';\n\nclass CategorySearch extends Search {\n    constructor(options, additionalOptions) {\n        super(options, additionalOptions);\n\n        this.fields.type = {\n            defaultValue: CATEGORY_SEARCH,\n            visible: false\n        };\n\n        this.fields.boundingBox = boundingBox();\n    }\n}\n\nexport function categorySearch(options, additionalOptions) {\n    return (new CategorySearch(options, additionalOptions)).construct('categorySearch');\n}\n","/**\n * Get the charging connector data consisting of type and numbers of the existing charging stations,\n * based on EV station ID retrieved from a FuzzySearch request called with connectorSet parameter.\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n *\n * function callbackFn(results) {\n *   console.log(results);\n * }\n *\n * tt.services.fuzzySearch({\n *      key: <Your API key>,\n *      query: 'station',\n *      connectorSet: 'Tesla'\n * }).then(function(response) {\n *      var chargingStationID = response.results[0].dataSources.chargingAvailability.id;\n *      tt.services.evChargingStationsAvailability({\n *          key: <Your API key>,\n *          chargingAvailability: chargingStationID\n *      }).then(callbackFn)\n *   });\n * ```\n *\n * @class evChargingStationsAvailability\n * @namespace Services.services\n * @uses KeyMixin\n * @uses BatchMixin\n * @uses ConnectorSetMixin\n * @uses MinPowerKwMixin\n * @uses MaxPowerKwMixin\n * @uses chargingAvailabilityMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n *\n * @constructor\n * @module Services\n *\n * @param {Object} [options]\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\nimport { SERVICE_TYPES } from 'Core/serviceTypes';\nimport {\n    string as validateString, key as validateKey, trackingId as validateTrackingId,\n    number as validateNumber, connectorSet as validateConnectorSet\n} from '../validators';\nimport { batchModel } from '../../model/search/batchModel';\nimport parameterApplications from '../../common/parameterApplications';\nimport { modelResponse } from '../../model/modelResponse';\nimport { v4 as uuid } from 'uuid';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory,\n    batchRequestServiceFactory,\n    serviceFactory\n} from '../../core';\n\nconst fields = {\n    key: {\n        validators: [validateKey]\n    },\n\n    chargingAvailability: {\n        validators: [validateString],\n        required: true\n    },\n\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    connectorSet: {\n        validators: [validateConnectorSet]\n    },\n\n    minPowerKW: {\n        validators: [validateNumber]\n    },\n\n    maxPowerKW: {\n        validators: [validateNumber]\n    }\n};\n\nexport function evChargingStationsAvailability(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('chargingAvailabilityEndpoint'));\n    const batchRequest = batchRequestServiceFactory(100, {\n        single: endpoints.resolve('batchChargingAvailabilityQueryEndpoint'),\n        batchSync: endpoints.resolve('batchSyncSearchEndpoint'),\n        batch: endpoints.resolve('batchSearchEndpoint')\n    });\n\n    function handleServiceCall(data, abortSignal) {\n        return singleRequest(fields, data, abortSignal).then(modelResponse);\n    }\n    function handleBatchServiceCall(data, abortSignal) {\n        return batchRequest(fields, data, abortSignal).then(response => modelResponse(response, batchModel));\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.EXTENDED_SEARCH,\n        'chargingAvailability',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","/* eslint-disable max-len */\n/**\n * Makes a search request using the TomTom\n * [Search API - Fuzzy Search](FUZZY_SEARCH_URL).\n *\n * Parameters need to be be passed to the constructor.\n *\n *\n * The list of all supported category codes are available\n * [here](SEARCH_API_SUPPORTED_CATEGORY_CODES_URL).\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts fuzzy search data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents single result from the original response. Properties of the result are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(result) {\n *   console.log(result);\n * };\n *\n * tt.services.fuzzySearch({\n *   key: <Your API key>,\n *   query: 'Amsterdam'\n * }).then(callbackFn);\n * ```\n *\n * @class fuzzySearch\n * @namespace Services.services\n * @extends Search\n * @uses ExtendedPostalCodesForMixin\n * @uses CenterMixin\n * @uses RadiusMixin\n * @uses BoundingBoxMixin\n * @uses CountrySetMixin\n * @uses OffsetMixin\n * @uses BestResultMixin\n * @uses QueryMixin\n * @uses TypeaheadMixin\n * @uses MaxFuzzyLevel\n * @uses MinFuzzyLevel\n * @uses IdxSetMixin\n * @uses EntityTypeSetMixin\n * @uses CategorySetMixin\n * @uses ViewMixin\n * @uses BrandSetMixin\n * @uses ConnectorSetMixin\n * @uses OpeningHoursMixin\n * @uses MapcodesMixin\n * @uses FuelSetMixin\n * @uses MinPowerKwMixin\n * @uses MaxPowerKwMixin\n * @uses AbortSignalMixin\n * @constructor\n * @module Services\n *\n * @param {Object} [options] Options to be passed to the search call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\nimport {\n    string as validateString, clientTime as validateClientTime, entityType as validateEntityType,\n    fuzzinessLevel as validateFuzzinessLevel\n} from '../validators';\nimport {commaSeparated as convertCommaSeparated, array as convertArray} from '../converters';\nimport { Search } from './search';\nimport { boundingBox } from './searchParameters';\n\nclass FuzzySearch extends Search {\n    constructor(options, additionalOptions) {\n        super(options, additionalOptions);\n\n        this.fields.minFuzzyLevel = {\n            validators: [validateFuzzinessLevel],\n            defaultValue: 1\n        };\n\n        this.fields.maxFuzzyLevel = {\n            validators: [validateFuzzinessLevel],\n            defaultValue: 2\n        };\n\n        this.fields.idxSet = {\n            validators: [validateString]\n        };\n\n        this.fields.entityTypeSet = {\n            converters: [convertArray, convertCommaSeparated],\n            validators: [validateEntityType]\n        };\n\n        this.fields.sessionId = {\n            validators: [validateString]\n        };\n\n        this.fields.clientTime = {\n            validators: [validateClientTime]\n        };\n\n        this.fields.boundingBox = boundingBox();\n    }\n}\n\nexport function fuzzySearch(options, additionalOptions) {\n    return (new FuzzySearch(options, additionalOptions)).construct('fuzzySearch');\n}\n","/* eslint-disable max-len */\n/**\n * Makes a search request using the TomTom\n * [Search API - Geometry Search](GEOMETRY_SEARCH_URL).\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts geometry search data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * const geometryList = [\n *   {\n *     type: 'POLYGON',\n *     vertices: [\n *       '-122.43576049804686,37.7524152343544',\n *       '-122.43301391601562,37.70660472542312',\n *       '-122.36434936523438,37.712059855877314',\n *       '-122.37396240234374,37.75350561243041'\n *     ]\n *   },\n *   {\n *     type: 'CIRCLE',\n *     position: '-121.36434,37.71205',\n *     radius: 6000\n *   },\n *   {\n *     type: 'CIRCLE',\n *     position: '-121.36434,37.31205',\n *     radius: 1000\n *   }\n * ];\n *\n * function callbackFn(results) {\n *   console.log(results);\n * }\n *\n * tt.services.geometrySearch({\n *   key: <Your API key>,\n *   geometryList: geometryList\n * }).then(callbackFn);\n * ```\n *\n * @class geometrySearch\n * @extends Search\n * @namespace Services.services\n * @uses QueryMixin\n * @uses IdxSetMixin\n * @uses ExtendedPostalCodesForMixin\n * @uses GeometryList\n * @uses ViewMixin\n * @uses OpeningHoursMixin\n * @uses MapcodesMixin\n * @uses ConnectorSetMixin\n * @uses BrandSetMixin\n * @uses CategorySetMixin\n * @uses MinPowerKwMixin\n * @uses MaxPowerKwMixin\n * @uses AbortSignalMixin\n * @constructor\n * @module Services\n *\n * @param {Object} [options] Options to be passed to the search call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n * @param {String|String[]} [options.entityTypeSet]\n * An array or comma-separated list of entity types which can be used to restrict the result\n * to a specific entity type. __Parameter should be used with the idxSet parameter\n * set to the Geography value.__\n * <br><br>\n * Available values:\n *  - `Country`\n *  - `CountrySubdivision`\n *  - `CountrySecondarySubdivision`\n *  - `CountryTertiarySubdivision`\n *  - `Municipality`\n *  - `MunicipalitySubdivision`\n *  - `Neighbourhood`\n *  - `PostalCodeArea`\n */\n/* eslint-enable */\n\nimport {\n    string as validateString, key as validateKey, oneOfValue as validateOneOfValue,\n    languageCode as validateLanguageCode, entityType as validateEntityType, limit as validateLimit,\n    geometryList as validateGeometryList\n} from '../validators';\nimport {\n    geometryList as convertGeometryList, array as convertArray, commaSeparated as convertCommaSeparated\n} from '../converters';\nimport { Search } from './search';\nimport { boundingBox } from './searchParameters';\nimport parameterApplications from '../../common/parameterApplications';\nimport { GEOMETRY_SEARCH } from '../../common/searchTypes';\n\nclass GeometrySearch extends Search {\n    constructor(options, additionalOptions) {\n        super(options, additionalOptions);\n\n        this.fields.type = {\n            defaultValue: GEOMETRY_SEARCH,\n            visible: false,\n            application: parameterApplications.PATH\n        };\n\n        this.fields.key = {\n            validators: [validateKey]\n        };\n\n        this.fields.limit = {\n            validators: [validateLimit]\n        };\n\n        this.fields.language = {\n            validators: [validateLanguageCode]\n        };\n\n        this.fields.geometryList = {\n            validators: [validateGeometryList],\n            converters: [convertGeometryList],\n            application: parameterApplications.POST\n        };\n\n        this.fields.idxSet = {\n            validators: [validateString]\n        };\n\n        this.fields.protocol = {\n            validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n        };\n\n        this.fields.extendedPostalCodesFor = {\n            validators: [validateString]\n        };\n\n        this.fields.entityTypeSet = {\n            converters: [convertArray, convertCommaSeparated],\n            validators: [validateEntityType]\n        };\n\n        this.fields.boundingBox = boundingBox();\n    }\n}\n\nexport function geometrySearch(options, additionalOptions) {\n    return (new GeometrySearch(options, additionalOptions)).construct('geometrySearch');\n}\n","/* eslint-disable max-len */\nimport {numberInInterval as validateNumberInInterval} from '../../services/validators';\n\n/**\n * Makes a search request using the TomTom\n * [Search API - Nearby Search](NEARBY_SEARCH_URL).\n *\n * Parameters need to be be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts nearby search data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(result) {\n *   console.log(result);\n * };\n *\n * tt.services.nearbySearch({\n *   key: <Your API key>,\n *   center: [0,0],\n *   radius: 1000\n * }).then(callbackFn);\n * ```\n *\n * @class nearbySearch\n * @namespace Services.services\n * @extends Search\n * @uses ExtendedPostalCodesForMixin\n * @uses CenterMixin\n * @uses CountrySetMixin\n * @uses OffsetMixin\n * @uses BestResultMixin\n * @uses ViewMixin\n * @uses BrandSetMixin\n * @uses OpeningHoursMixin\n * @uses CategorySetMixin\n * @uses ConnectorSetMixin\n * @uses MapcodesMixin\n * @uses FuelSetMixin\n * @uses MinPowerKwMixin\n * @uses MaxPowerKwMixin\n * @uses AbortSignalMixin\n * @constructor\n * @module Services\n *\n * @param {Object} [options] Options to be passed to the search call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\n/**\n * This option specifies the search radius in meters using the coordinates given to the `center`\n * option as origin.\n *\n * @attribute radius\n * @param {Number} [options.radius=10000] A positive integer value in meters.\n */\nimport { Search } from './search';\nimport { NEARBY_SEARCH } from '../../common/searchTypes';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory, batchRequestServiceFactory\n} from '../../core';\n\nclass NearbySearch extends Search {\n    constructor(options, additionalOptions) {\n        super(options, additionalOptions);\n\n        this.fields.__all = {\n            validators: []\n        };\n\n        this.fields.type = {\n            defaultValue: NEARBY_SEARCH,\n            visible: false\n        };\n        this.fields.query = {\n            visible: false\n        };\n        this.fields.center = {\n            required: true\n        };\n        this.fields.radius = {\n            required: false,\n            validators: [validateNumberInInterval(1, 50000)]\n        };\n        this.fields.typeahead = {\n            visible: false\n        };\n    }\n\n    _getRestService() {\n        const endpoints = new Endpoints(this.additionalOptions);\n        return {\n            search: singleRequestServiceFactory(endpoints.resolve('nearbySearchEndpoint')),\n            batch: batchRequestServiceFactory(100, {\n                single: endpoints.resolve('batchNearbySearchQueryEndpoint'),\n                batchSync: endpoints.resolve('batchSyncSearchEndpoint'),\n                batch: endpoints.resolve('batchSearchEndpoint')\n            })\n        };\n    }\n}\n\nexport function nearbySearch(options, additionalOptions) {\n    return (new NearbySearch(options, additionalOptions)).construct('nearbySearch');\n}\n","/* eslint-disable object-curly-spacing */\n/* eslint-disable max-len */\n/* eslint-disable no-undef */\n/**\n * Makes a placeById request using [Place by Id API](PLACE_BY_ID_URL).\n *\n * The Place by Id service endpoint provides detailed information about the Place found by its identifier (entityId).\n * Currently, Place by Id only supports POI (Points of Interest) ids.\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts place by id data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * tt.services.fuzzySearch({\n *      key: <Your API key>,\n *      query: \"pizza\"\n * }).then(function(response) {\n *      tt.services.placeById({\n *          entityId: response.results[0].id,\n *          key: <Your API key>\n *      }).then(function(placeByIdResult) {\n *          console.log(placeByIdResult);\n *      });\n *   });\n * ```\n *\n * @class placeById\n * @module Services\n * @namespace Services.services\n * @uses KeyMixin\n * @uses TrackingIdMixin\n * @uses LanguageMixin\n * @uses AbortSignalMixin\n * @uses RelatedPoisMixin\n * @uses MapcodesMixin\n * @uses TimeZoneMixin\n * @uses OpeningHoursMixin\n * @uses ViewMixin\n * @constructor\n *\n * @param {Object} [options]\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    string as validateString,\n    trackingId as validateTrackingId,\n    languageCode as validateLanguageCode,\n    oneOfValue as validateOneOfValue,\n    mapcodes as validateMapcodes\n} from '../validators';\n\nimport {searchLanguage as convertLanguage} from '../converters';\nimport { searchModel } from '../../model/search/search';\nimport parameterApplications from '../../common/parameterApplications';\nimport { modelResponse } from '../../model/modelResponse';\nimport { v4 as uuid } from 'uuid';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport { singleRequestServiceFactory, serviceFactory } from '../../core';\n\nconst fields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    /**\n     * @attribute entityId\n     * @param {String} [options.entityId] The identifier of a specific POI,\n     * e.g. `g6Fjo05MRKJpZK81MjgwMDkwMDQyNDY3OTKhdqdVbmlmaWVk`.\n     */\n    entityId: {\n        validators: [validateString],\n        required: true\n    },\n    language: {\n        validators: [validateLanguageCode],\n        converters: [convertLanguage]\n    },\n    relatedPois: {\n        validators: [validateOneOfValue(['off', 'child', 'parent', 'all'], 'relatedPois')]\n    },\n    mapcodes: {\n        validators: [validateMapcodes]\n    },\n    timeZone: {\n        validators: [validateOneOfValue(['iana'], 'timeZone parameter')]\n    },\n    openingHours: {\n        validators: [validateOneOfValue(['nextSevenDays'], 'openingHours parameter')]\n    },\n    view: {\n        validators: [validateOneOfValue(\n            ['AR', 'IL', 'MA', 'IN', 'PK', 'Unified', 'RU', 'TR', 'CN'],\n            'view')]\n    }\n};\n\nexport function placeById(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('placeByIdEndpoint'));\n\n    const handleServiceCall = (data, abortSignal) => {\n        return singleRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, searchModel));\n    };\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.SEARCH,\n        'placeById',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","import {SERVICE_TYPES} from 'Core/serviceTypes';\nimport parameterApplications from '../../common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\nimport {\n    string as validateString, trackingId as validateTrackingId, languageCode as validateLanguageCode\n} from '../validators';\nimport { Endpoints } from '../../endpoints/endpointsManager';\n\nimport { modelResponse } from '../../model/modelResponse';\nimport {\n    singleRequestServiceFactory,\n    serviceFactory\n} from '../../core';\n\n/**\n * The POI Categories service provides a full list of POI (Points of Interest) categories and subcategories together\n * with their translations and synonyms.\n * [Search API - POI Categories](POI_CATEGORIES_URL).\n *\n * Parameters need to be be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(result) {\n *   console.log(result);\n * };\n *\n * tt.services.poiCategories({\n *   key: <Your API key>,\n *   language: 'pl-PL'\n * }).then(callbackFn);\n * ```\n *\n * @class poiCategories\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses LanguageMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n * @constructor\n *\n * @param {Object} [options] Options to be passed to the call.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\nconst fields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    language: {\n        validators: [validateLanguageCode]\n    }\n};\n\nexport function poiCategories(options, additionalOptions) {\n    const handleServiceCall = (data, abortSignal) => {\n        const endpoints = new Endpoints(additionalOptions);\n        const singleRequest = singleRequestServiceFactory(endpoints.resolve('poiCategoriesEndpoint'));\n        return singleRequest(fields, data, abortSignal).then(modelResponse);\n    };\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.SEARCH,\n        'poiCategories',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","/* eslint-disable max-len */\n/**\n * Makes a search request using the TomTom\n * [Search API - Points of Interest Search](POINTS_INTEREST_SEARCH_URL).\n *\n * Parameters need to be be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts points of interests search data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(result) {\n *    console.log(result);\n * };\n *\n * tt.services.poiSearch(({\n *   key: <Your API key>,\n *   query: 'pizza'\n * }).then(callbackFn);\n * ```\n *\n * @class poiSearch\n * @namespace Services.services\n * @extends Search\n * @uses ExtendedPostalCodesForMixin\n * @uses CenterMixin\n * @uses BoundingBoxMixin\n * @uses CountrySetMixin\n * @uses OffsetMixin\n * @uses BestResultMixin\n * @uses QueryMixin\n * @uses TypeaheadMixin\n * @uses CategorySetMixin\n * @uses ViewMixin\n * @uses BrandSetMixin\n * @uses ConnectorSetMixin\n * @uses OpeningHoursMixin\n * @uses MapcodesMixin\n * @uses FuelSetMixin\n * @uses MinPowerKwMixin\n * @uses MaxPowerKwMixin\n * @uses AbortSignalMixin\n * @constructor\n * @module Services\n *\n * @param {Object} [options] Options to be passed to the search call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n\n/**\n * This option specifies the search radius in meters using the coordinates given to the `center`\n * option as origin.\n *\n * @attribute radius\n * @param {Number} [options.radius=0] A positive integer value in meters.\n */\n\n/* eslint-enable */\nimport { Search } from './search';\nimport { boundingBox } from './searchParameters';\nimport { POI_SEARCH } from '../../common/searchTypes';\nclass PoiSearch extends Search {\n    constructor(options, additionalOptions) {\n        super(options, additionalOptions);\n\n        this.fields.type = {\n            defaultValue: POI_SEARCH,\n            visible: false\n        };\n\n        this.fields.boundingBox = boundingBox();\n    }\n}\n\nexport function poiSearch(options, additionalOptions) {\n    return (new PoiSearch(options, additionalOptions)).construct('poiSearch');\n}\n","import {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    string as validateString, trackingId as validateTrackingId, naturalInteger as validateNaturalInteger,\n    point as validatePoint, countrySet as validateCountrySet, languageCode as validateLanguageCode,\n    clientTime as validateClientTime, limit as validateLimit\n} from '../validators';\nimport {searchLanguage as convertLanguage, point as convertPoint} from '../../services/converters';\nimport parameterApplications from '../../common/parameterApplications';\nimport {modelResponse} from '../../model/modelResponse';\nimport { v4 as uuid } from 'uuid';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport { singleRequestServiceFactory, serviceFactory } from '../../core';\n/**\n* The Autocomplete API enables you to make a more meaningful Search API call\n* by recognizing entities inside an input query and offering them as query terms.\n*\n* Makes a search request using the TomTom [Search API - Autocomplete](AUTOCOMPLETE_URL).\n*\n* ### Response\n* The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n* associated with the request.\n*\n* Please refer to {{#crossLinkModule \"Services\"}}Difference between\n* API responses and this library's responses{{/crossLinkModule}} section.\n*\n* @class autocomplete\n* @module Services\n* @namespace Services.services\n* @uses KeyMixin\n* @uses QueryMixin\n* @uses LimitMixin\n* @uses CountrySetMixin\n* @uses RadiusMixin\n* @uses CenterMixin\n* @uses TrackingIdMixin\n* @uses AbortSignalMixin\n* @constructor\n*\n* @param {Object} [options]\n* @param {Object} [additionalOptions] Additional options to be passed to the service.\n*/\nconst fields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    query: {\n        validators: [validateString],\n        required: true,\n        application: parameterApplications.PATH\n    },\n    /**\n     * The value should correspond to one of the supported IETF language codes.\n     * The list is available [here](SEARCH_API_SUPPORTED_LANGS_URL).\n     *\n     * The code is case insensitive.\n     *\n     * @attribute language\n     * @param {String} options.language Language code that decides in which language the search results\n     * should be returned.\n     */\n    language: {\n        validators: [validateLanguageCode],\n        converters: [convertLanguage],\n        required: true\n    },\n    limit: {\n        validators: [validateLimit]\n    },\n    countrySet: {\n        validators: [validateCountrySet]\n    },\n    radius: {\n        validators: [validateNaturalInteger]\n    },\n    /**\n     * A result is only included if at least one segment is of any of the indicated types.\n     *   Value: A comma-separated list that consists of the types of segments.\n     *   Usage examples:\n     *   * resultSet=category\n     *   * resultSet=brand\n     *   * resultSet=category,brand\n     * @attribute resultSet\n     * @param {String} [options.resultSet] Restricts the result space based on their segment types.\n     */\n    resultSet: {\n        validators: [validateString]\n    },\n    center: {\n        converters: [convertPoint],\n        validators: [validatePoint],\n        cast: (center, requestOptions) => {\n            const coordinates = center.split(',');\n            requestOptions.lat = coordinates[0];\n            requestOptions.lon = coordinates[1];\n        }\n    },\n    sessionId: {\n        validators: [validateString]\n    },\n    clientTime: {\n        validators: [validateClientTime]\n    }\n};\n\nexport function autocomplete(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('autocompleteEndpoint'));\n\n    function handleServiceCall(data, abortSignal) {\n        return singleRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response));\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.SEARCH,\n        'autocomplete',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","import {PointFacade} from '../pointFacade';\n\nconst pointFacade = new PointFacade({\n    isLatLon: true\n});\n\nconst convertPoints = elem => {\n    if (elem.position) {\n        elem.position = pointFacade.convert(elem.position);\n    }\n\n    if (elem.address && elem.address.boundingBox) {\n        elem.address.boundingBox.northEast = pointFacade.convert(elem.address.boundingBox.northEast);\n        elem.address.boundingBox.southWest = pointFacade.convert(elem.address.boundingBox.southWest);\n    }\n};\n\nexport function reverseGeocodeModel(json) {\n    // convert points\n    json.addresses.forEach(result => {\n        if (Array.isArray(result)) {\n            result.forEach(r => {\n                convertPoints(r);\n            });\n        }\n        convertPoints(result);\n    });\n    return json;\n}\n","import {reverseGeocodeModel} from './reverseGeocode';\n\nexport function batchModel(data) {\n    if (!(data.batchItems instanceof Array)) {\n        return null;\n    }\n\n    data.batchItems = data.batchItems.map((batchItem) => {\n        if (batchItem.response.error) {\n            return { error: batchItem.response.error};\n        } else {\n            return reverseGeocodeModel(batchItem.response);\n        }\n    });\n\n    return data;\n}\n","import {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {reverseGeocodeModel} from '../../model/reverseGeocode/reverseGeocode';\nimport {batchModel} from '../../model/reverseGeocode/batchReverseGeocode';\nimport {addFields} from '../utils';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory, batchRequestServiceFactory, serviceFactory\n} from '../../core';\n\nconst TYPES = {\n    reverseGeocode: 'reverseGeocode',\n    crossStreetLookup: 'reverseGeocode/crossStreet'\n};\n\nfunction ReverseGeocodeBase(options, additionalOptions) {\n    this.options = options;\n    this.additionalOptions = additionalOptions;\n    this.fields = {};\n}\n\nReverseGeocodeBase.prototype.TYPE = TYPES;\nReverseGeocodeBase.prototype.construct = function(serviceName) {\n    const mergedFields = addFields(this.fields, this.defaultFields);\n\n    const service = serviceFactory(\n        mergedFields,\n        SERVICE_TYPES.SEARCH,\n        serviceName || 'reverseGeocodeBase',\n        this.handleServiceCall.bind(this),\n        this.handleBatchServiceCall.bind(this)\n    );\n\n    return service(this.options, this.additionalOptions);\n\n};\nReverseGeocodeBase.prototype.handleServiceCall = function(data, abortSignal) {\n    const endpoints = new Endpoints(this.additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('reverseGeocodeEndpoint'));\n    return singleRequest(this.fields, data, abortSignal)\n        .then(response => modelResponse(response, reverseGeocodeModel));\n};\n\nReverseGeocodeBase.prototype.handleBatchServiceCall = function(data, abortSignal) {\n    const endpoints = new Endpoints(this.additionalOptions);\n    const batchRequest = batchRequestServiceFactory(100, {\n        single: endpoints.resolve('batchReverseGeocodeQueryEndpoint'),\n        batch: endpoints.resolve('batchSearchEndpoint'),\n        batchSync: endpoints.resolve('batchSyncSearchEndpoint')\n    });\n    return batchRequest(this.fields, data, abortSignal)\n        .then(response => modelResponse(response, batchModel));\n};\n\nfunction reverseGeocodeConstructor(options) {\n    return (new ReverseGeocodeBase(options)).construct();\n}\n\nreverseGeocodeConstructor.prototype.constructor = ReverseGeocodeBase;\n\nexport {reverseGeocodeConstructor as reverseGeocodeBase};\n","export const reverseGeocodeType = 'reverseGeocode';\nexport const crossStreetLookupType = 'reverseGeocode/crossStreet';\n","import {\n    bool as validateBool, string as validateString, trackingId as validateTrackingId, oneOfValue as validateOneOfValue,\n    naturalInteger as validateNaturalInteger, languageCode as validateLanguageCode, point as validatePoint,\n    entityType as validateEntityType, number as validateNumber, roadUse as validateRoadUse,\n    mapcodes as validateMapcodes, dateTime as validateDateTime, limit as validateLimit\n} from '../validators';\nimport {\n    roadUse as convertRoadUse, array as convertArray, point as convertPoint,\n    commaSeparated as convertCommaSeparated\n} from '../converters';\nimport {reverseGeocodeType, crossStreetLookupType} from './types';\nimport parameterApplications from '../../common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\n\nconst geocodeBaseFields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    language: {\n        validators: [validateLanguageCode]\n    },\n    position: {\n        converters: [convertPoint],\n        validators: [validatePoint],\n        required: true,\n        application: parameterApplications.PATH\n    },\n    heading: {\n        validators: [validateNumber]\n    },\n    radius: {\n        validators: [validateNaturalInteger]\n    },\n    protocol: {\n        validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n    },\n    view: {\n        validators: [validateOneOfValue(['AR', 'IL', 'MA', 'IN', 'PK', 'Unified', 'RU', 'TR', 'CN'], 'view')]\n    },\n    allowFreeformNewline: {\n        validators: [validateBool]\n    }\n};\n\nconst additionalGeocodeFields = {\n    type: {\n        defaultValue: reverseGeocodeType,\n        visible: false,\n        application: parameterApplications.PATH\n    },\n\n    entityType: {\n        converters: [convertArray, convertCommaSeparated],\n        validators: [validateEntityType]\n    },\n\n    returnSpeedLimit: {\n        validators: [validateBool]\n    },\n\n    number: {\n        validators: [validateString]\n    },\n\n    returnRoadUse: {\n        validators: [validateBool]\n    },\n\n    roadUse: {\n        converters: [convertRoadUse],\n        validators: [validateRoadUse]\n    },\n\n    streetNumber: {\n        validators: [validateString]\n    },\n\n    returnMatchType: {\n        validators: [validateBool]\n    },\n\n    mapcodes: {\n        validators: [validateMapcodes]\n    },\n\n    dateTime: {\n        validators: [validateDateTime]\n    }\n};\n\nconst crossStreetLookupFields = {\n    type: {\n        defaultValue: crossStreetLookupType,\n        visible: false,\n        application: parameterApplications.PATH\n    },\n\n    limit: {\n        validators: [validateLimit]\n    }\n};\n\nexport function reverseGeocodeParams(type) {\n    if (type === reverseGeocodeType) {\n        return Object.assign({}, geocodeBaseFields, additionalGeocodeFields);\n    } else if (type === crossStreetLookupType) {\n        return Object.assign({}, geocodeBaseFields, crossStreetLookupFields);\n    }\n    throw new Error('Unsupported geocode type: ' + type);\n}\n","/* eslint-disable max-len */\n/**\n * Reverse geocode service implementation.\n *\n * It converts geographical coordinates into a textual address representation using the TomTom\n * [Search API - Reverse Geocode](REVERSE_GEOCODE_URL).\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n *\n * The final response from the service is a JSON object with the following structure:\n *\n * ```js\n * {\n *   address: {\n *     buildingNumber: 19,\n *     streetNumber: 19,\n *     landmark: '',\n *     street: 'N 2nd St',\n *     streetName: 'N 2nd St',\n *     streetNameAndNumber: '',\n *     speedLimit: '',\n *     countryCode: 'U',\n *     countrySubdivision: 'CA',\n *     countrySecondarySubdivision: 'Santa Clara',\n *     countryTertiarySubdivision: '',\n *     municipality: 'San Jose',\n *     postalCode: '95113',\n *     municipalitySubdivision: 'San Francisco Bay Area',\n *     freeformAddress: '19 N 2nd St, San Jose, CA, 95113'\n *   },\n *    position: {\n *     lng: -121.8898',\n *     lat: '37.337083\n *   },\n *   roadUse: ['LocalStreet']\n * }\n * ```\n *\n * The response is also extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(response) {\n *   console.log(response);\n * }\n * tt.services.reverseGeocode({\n *   key: <Your API key>,\n *   position: '19.449: 51.759'\n * }).then(callbackFn);\n * ```\n *\n * @class reverseGeocode\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses ProtocolMixin\n * @uses RadiusMixin\n * @uses PositionMixin\n * @uses HeadingMixin\n * @uses LanguageMixin\n * @uses ViewMixin\n * @uses ReturnMatchTypeMixin\n * @uses AllowFreeformNewlineMixin\n * @uses BatchMixin\n * @uses EntityTypeMixin\n * @uses MapcodesMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n *\n * @constructor\n * @param {Object} [options] Options to be passed to the reverseGeocode call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n/* eslint-enable */\n\n/**\n * Allows, if possible, the receiving of speed limit information at the given location.\n *\n * @attribute returnSpeedLimit\n * @param {Boolean} [options.returnSpeedLimit] Enable or disable the feature.\n */\n\n/**\n * If a street number is sent in along with the request, the response may\n * include the side of the street (Left/Right), and also an offset position for that street number.\n *\n * @attribute number\n * @param {String} [options.number] Street number as a string.\n */\n\n/**\n * Requires including a road use array for reversegeocodes at street level.\n *\n * @attribute returnRoadUse\n * @param {Boolean} [options.returnRoadUse] Enable or disable the feature.\n */\n\n/**\n * Use this option if you want to restrict the result to one, or a group of the following road uses:\n * - `\"LimitedAccess\"`\n * - `\"Arterial\"`\n * - `\"Terminal\"`\n * - `\"Ramp\"`\n * - `\"Rotary\"`\n * - `\"LocalStreet\"`\n *\n * @attribute roadUse\n * @param {String[]|String} [options.roadUse] An array of strings, or just one string with comma-separated values.\n */\n\n/**\n * Represents the street's number for the structured address.\n *\n * @attribute streetNumber\n * @param {String} [options.streetNumber] The street's number.\n */\n\n/**\n * * It allows the service to decide whether the Daylight Saving Time time zone should be used or not.\n * * It must conform to RFC 3339.\n * @attribute dateTime\n * @param {String} [options.dateTime] The date and time used to return time zone information.\n */\n\nimport {reverseGeocodeBase} from './reverseGeocodeBase';\nimport {reverseGeocodeParams} from './reverseGeocodeParameters';\nimport {reverseGeocodeType} from './types';\n\nexport function reverseGeocode(options, additionalOptions) {\n    const ReverseGeocodeBasePrototype = reverseGeocodeBase.prototype.constructor;\n\n    function ReverseGeocode(options, additionalOptions) {\n        ReverseGeocodeBasePrototype.call(this, options, additionalOptions);\n        this.fields = reverseGeocodeParams(reverseGeocodeType);\n    }\n\n    ReverseGeocode.prototype = new ReverseGeocodeBasePrototype();\n    ReverseGeocode.prototype.constructor = ReverseGeocode;\n    return (new ReverseGeocode(options, additionalOptions)).construct('reverseGeocode');\n}\n","import { convertResponsePoints, toGeoJson } from '../modelUtils';\n\nexport function geocodeModel(data) {\n    if (!data) {\n        return data;\n    }\n    // converts location points\n    if (Array.isArray(data.results)) {\n        data.results.forEach(result => {\n            if (Array.isArray(result)) {\n                result.forEach(r => {\n                    convertResponsePoints(r);\n                });\n            } else {\n                convertResponsePoints(result);\n            }\n        });\n    }\n\n    convertResponsePoints(data);\n\n    return Object.assign(data, {\n        toGeoJson: () => toGeoJson(data)\n    });\n}\n","import {geocodeModel} from './geocode';\n\nexport function batchModel(data) {\n    if (!(data.batchItems instanceof Array)) {\n        return null;\n    }\n\n    data.batchItems = data.batchItems.map((batchItem) => {\n        if (batchItem.response.error) {\n            return { error: batchItem.response.error };\n        } else {\n            return geocodeModel(batchItem.response);\n        }\n    });\n    return data;\n}\n","import {\n    bool as validateBool, string as validateString, trackingId as validateTrackingId,\n    validateBoundingBox, oneOfValue as validateOneOfValue,\n    positiveInteger as validatePositiveInteger, naturalInteger as validateNaturalInteger,\n    languageCode as validateLanguageCode, point as validatePoint, countrySet as validateCountrySet,\n    entityType as validateEntityType\n} from 'services/validators';\n\nimport {\n    point as convertPoint, convertBoundingBox, array as convertArray,\n    commaSeparated as convertCommaSeparated\n} from 'services/converters';\nimport parameterApplications from 'common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\n\nexport default {\n    create: () => {\n        return {\n            extendedPostalCodesFor: {\n                validators: [validateString]\n            },\n            type: {\n                defaultValue: 'geocode',\n                application: parameterApplications.PATH\n            },\n            key: {\n                validators: [validateString]\n            },\n            trackingId: {\n                validators: [validateTrackingId],\n                application: parameterApplications.HEADER,\n                defaultValue: uuid\n            },\n            query: {\n                validators: [validateString],\n                required: true,\n                application: parameterApplications.PATH\n            },\n            typeahead: {\n                validators: [validateBool]\n            },\n            limit: {\n                validators: [validatePositiveInteger]\n            },\n            view: {\n                validators: [validateOneOfValue(\n                    ['AR', 'IL', 'MA', 'IN', 'PK', 'Unified', 'RU', 'TR', 'CN'],\n                    'view')]\n            },\n            offset: {\n                validators: [validateNaturalInteger],\n                name: 'ofs'\n            },\n            language: {\n                validators: [validateLanguageCode]\n            },\n            boundingBox: {\n                validators: [validateBoundingBox], converters: [convertBoundingBox],\n                cast: (boundingBox, requestOptions) => {\n                    requestOptions.topLeft = `${boundingBox.maxLat},${boundingBox.minLon}`;\n                    requestOptions.btmRight = `${boundingBox.minLat},${boundingBox.maxLon}`;\n                }\n            },\n            center: {\n                converters: [convertPoint],\n                validators: [validatePoint],\n                cast: (center, requestOptions) => {\n                    const coordinates = center.split(',');\n                    requestOptions.lat = coordinates[0];\n                    requestOptions.lon = coordinates[1];\n                }\n            },\n            countrySet: {\n                validators: [validateCountrySet]\n            },\n            radius: {\n                validators: [validateNaturalInteger]\n            },\n            bestResult: {\n                validators: [validateBool],\n                cast: (bestResults, requestOptions) => {\n                    if (!bestResults) {\n                        return;\n                    }\n                    requestOptions.limit = 1;\n                    requestOptions.ofs = 0;\n                }\n            },\n            protocol: {\n                validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n            },\n            timeZone: {\n                validators: [validateOneOfValue(['iana'], 'timeZone parameter')]\n            },\n            entityTypeSet: {\n                converters: [convertArray, convertCommaSeparated],\n                validators: [validateEntityType]\n            }\n        };\n    }\n};\n","/* eslint-disable max-len */\n/**\n * Allows requests to be made using the TomTom's\n * [Search API - Geocode](GEOCODE_SERVICE_URL).\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts geocode data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties.\n *\n * <div class=\"alert alert-danger\">Deprecation: `score` and `querytype` response fields will be withdrawn following a 12 months deprecation period.\n * The planned withdrawal period is February 20, 2024. After this date, those fields won't be returned by the service.\n * </div>\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * function callbackFn(result) {\n *   console.log(result);\n * };\n * tt.services.geocode({\n *   key: <Your API Key>,\n *   query: 'Amsterdam, The Netherlands'\n * }).then(callbackFn);\n * ```\n *\n * @class geocode\n * @namespace Services.services\n * @module Services\n * @uses BatchMixin\n * @uses KeyMixin\n * @uses QueryMixin\n * @uses TypeaheadDeprecatedMixin\n * @uses LimitMixin\n * @uses OffsetMixin\n * @uses LanguageMixin\n * @uses BoundingBoxMixin\n * @uses CenterMixin\n * @uses CountrySetMixin\n * @uses RadiusMixin\n * @uses BestResultMixin\n * @uses ProtocolMixin\n * @uses ViewMixin\n * @uses ExtendedPostalCodesForMixin\n * @uses TimeZoneMixin\n * @uses MapcodesMixin\n * @uses TrackingIdMixin\n * @uses EntityTypeSetMixin\n * @uses AbortSignalMixin\n * @constructor\n *\n * @param {Object} [options] Options to be passed to the geocode call,\n *     or an array of such option objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n */\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {geocodeModel} from 'model/geocode/geocode';\nimport {batchModel} from 'model/geocode/batchGeocode';\nimport geocodeParams from './geocodeParameters';\nimport { modelResponse } from '../../model/modelResponse';\n\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory, batchRequestServiceFactory, serviceFactory\n} from '../../core';\n\nconst fields = geocodeParams.create();\n\nexport function geocode(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('geocodeEndpoint'));\n    const batchRequest = batchRequestServiceFactory(100, {\n        single: endpoints.resolve('batchSearchQueryEndpoint'),\n        batchSync: endpoints.resolve('batchSyncSearchEndpoint'),\n        batch: endpoints.resolve('batchSearchEndpoint')\n    });\n\n    function handleServiceCall(requestOptions, abortSignal) {\n        return singleRequest(fields, requestOptions, abortSignal)\n            .then(({ data, trackingId }) => {\n                return modelResponse({\n                    data: requestOptions.bestResult ? data.results[0] : data,\n                    trackingId\n                }, geocodeModel);\n            });\n    }\n    function handleBatchServiceCall(data, abortSignal) {\n        return batchRequest(fields, data, abortSignal).then(results => modelResponse(results, batchModel));\n    }\n    return serviceFactory(\n        fields, SERVICE_TYPES.SEARCH,\n        'geocode',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","/* eslint-disable max-len */\n/**\n * It converts geographical coordinates into a textual address representation using the TomTom\n * [Search API - CrossStreet lookup](CROSS_STREET_LOOKUP_URL).\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The final response from the service is a JSON object with the following structure:\n *\n * ```js\n * {\n *   address: {\n *     buildingNumber: 19,\n *     streetNumber: 19,\n *     street: 'N 2nd St',\n *     streetName: 'N 2nd St',\n *     crossStreet: 'E SANTA CLARA ST'\n *     streetNameAndNumber: '',\n *     speedLimit: '',\n *     countryCode: 'US\",\n *     countrySubdivision: \"'A',\n *     countrySecondarySubdivision: 'Santa Clara',\n *     countryTertiarySubdivision: '',\n *     municipality: 'San Jose',\n *     postalCode: '95113',\n *     municipalitySubdivision: \"San Francisco Bay Area',\n *     freeformAddress: 'E SANTA CLARA ST &amp; N 2nd St, San Jose, CA, 95113'\n *   },\n *   position: {\n *     lng: -121.8898',\n *     lat: '37.337083\n *   }\n * }\n * ```\n *\n * The response is also extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @example\n * ```js\n * tt.services.crossStreetLookup({\n *   key: <Your API key>,\n *   position: '19.449,51.759'\n * }).then(function(response) {\n *   console.log(response);\n * });\n * ```\n *\n * @class crossStreetLookup\n * @namespace Services.services\n * @module Services\n * @constructor\n * @uses RadiusMixin\n * @uses ProtocolMixin\n * @uses KeyMixin\n * @uses LimitMixin\n * @uses LanguageMixin\n * @uses PositionMixin\n * @uses HeadingMixin\n * @uses ViewMixin\n * @uses AllowFreeformNewlineMixin\n * @uses BatchMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n *\n * @param {Object} [options]\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n */\n/* eslint-enable max-len */\nimport {reverseGeocodeBase} from './reverseGeocodeBase';\nimport {reverseGeocodeParams} from './reverseGeocodeParameters';\nimport {crossStreetLookupType} from './types';\n\nexport function crossStreetLookup(options, additionalOptions) {\n    const ReverseGeocodeBasePrototype = reverseGeocodeBase.prototype.constructor;\n\n    function CrossStreetLookup(options, additionalOptions) {\n        ReverseGeocodeBasePrototype.call(this, options, additionalOptions);\n\n        this.fields = reverseGeocodeParams(crossStreetLookupType);\n    }\n\n    CrossStreetLookup.prototype = new ReverseGeocodeBasePrototype();\n    CrossStreetLookup.prototype.constructor = CrossStreetLookup;\n    return (new CrossStreetLookup(options, additionalOptions)).construct('crossStreetLookup');\n}\n","/* eslint-disable object-curly-spacing */\n/* eslint-disable no-undef */\n/* eslint-disable max-len */\n/**\n * Makes a request using the TomTom\n * [Search API - Structured Geocode](STRUCTURED_GEOCODE_URL).\n *\n * Parameters can be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Additionally, the response extends API response by providing `toGeoJson()` method, which converts structured geocode data into\n * FeatureCollection with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.2\">Point</a> geometry.\n *\n * Each point feature represents `poi` from the original response. Properties of `poi` are mapped into feature properties.\n *\n * <div class=\"alert alert-danger\">Deprecation: `score` and `querytype` response fields will be withdrawn following a 12 months deprecation period.\n * The planned withdrawal period is February 20, 2024. After this date, those fields won't be returned by the service.\n * </div>\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @class structuredGeocode\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses LimitMixin\n * @uses OffsetMixin\n * @uses LanguageMixin\n * @uses ProtocolMixin\n * @uses BestResultMixin\n * @uses BatchMixin\n * @uses ViewMixin\n * @uses TimeZoneMixin\n * @uses MapcodesMixin\n * @uses TrackingIdMixin\n * @uses ExtendedPostalCodesForMixin\n * @uses EntityTypeSetMixin\n * @uses AbortSignalMixin\n * @constructor\n *\n * @param {Object} [options] Options to be passed to the structured geocoding call,\n *     or an array of such options objects to perform batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n * @param {String} options.countryCode The two-letter code of the country being targeted.\n *\n * @example\n * ```javascript\n * function callbackFn(result) {\n *   console.log(result);\n * };\n * tt.services.structuredGeocode({\n *   key: <Your API key>,\n *   countryCode: 'GB'\n * });\n * ```\n */\n/* eslint-enable max-len */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {geocodeModel} from '../../model/geocode/geocode';\nimport {batchModel} from '../../model/geocode/batchGeocode';\nimport structureGeocodeParameters from './structureGeocodeParameters';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory, batchRequestServiceFactory, serviceFactory\n} from '../../core';\n\nconst fields = structureGeocodeParameters();\n\nfunction checkBestResult(data) {\n    const result = Boolean(data.bestResult);\n    delete data.bestResult;\n    return result;\n}\n\nfunction modifyRequestParams(data) {\n    const bestResult = checkBestResult(data);\n    if (bestResult) {\n        data.limit = 1;\n        data.offset = 0;\n    }\n}\n\nexport function structuredGeocode(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const batchRequest = batchRequestServiceFactory(100, {\n        single: endpoints.resolve('batchStructuredGeocodeQueryEndpoint'),\n        batch: endpoints.resolve('batchSearchEndpoint'),\n        batchSync: endpoints.resolve('batchSyncSearchEndpoint')\n    });\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('structuredGeocodeEndpoint'));\n\n    function handleBatchServiceCall(data, abortSignal) {\n        data.batchItems.forEach(modifyRequestParams);\n        return batchRequest(fields, data, abortSignal).then(response => modelResponse(response, batchModel));\n    }\n\n    function handleServiceCall(data, abortSignal) {\n        const bestResult = Boolean(data.bestResult);\n        modifyRequestParams(data);\n        return singleRequest(fields, data, abortSignal)\n            .then(({ data, trackingId }) => {\n                return modelResponse({\n                    data: bestResult ? data.results[0] : data,\n                    trackingId\n                }, geocodeModel);\n            });\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.SEARCH,\n        'structuredGeocode',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","import parameterApplications from 'common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\nimport {\n    bool as validateBool, string as validateString, trackingId as validateTrackingId, oneOfValue as validateOneOfValue,\n    naturalInteger as validateNaturalInteger, languageCode as validateLanguageCode, entityType as validateEntityType,\n    limit as validateLimit, countryCode as validateCountryCode\n} from '../validators';\nimport {commaSeparated as convertCommaSeparated, array as convertArray} from '../converters';\n\nexport default () => {\n    return {\n        key: {\n            validators: [validateString]\n        },\n        trackingId: {\n            validators: [validateTrackingId],\n            application: parameterApplications.HEADER,\n            defaultValue: uuid\n        },\n        countryCode: {\n            validators: [validateCountryCode],\n            required: true\n        },\n        limit: {\n            validators: [validateLimit]\n        },\n        view: {\n            validators: [validateOneOfValue(\n                ['AR', 'IL', 'MA', 'IN', 'PK', 'Unified', 'RU', 'TR', 'CN'],\n                'view')]\n        },\n        offset: {\n            validator: [validateNaturalInteger],\n            name: 'ofs'\n        },\n        language: {\n            validators: [validateLanguageCode]\n        },\n\n        /**\n         * Represents the street's number for the structured address.\n         *\n         * @attribute streetNumber\n         * @param {String} [options.streetNumber] The street's number.\n         */\n        streetNumber: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the street's name for the structured address.\n         *\n         * @attribute streetName\n         * @param {String} [options.streetName] The street's name.\n         */\n        streetName: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the cross street's name for the structured address.\n         *\n         * @attribute crossStreet\n         * @param {String} [options.crossStreet] The cross street's name.\n         */\n        crossStreet: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the municipality (city/town) for the structured address.\n         *\n         * @attribute municipality\n         * @param {String} [options.municipality] The municipality's name (city/town).\n         */\n        municipality: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the municipality subdivision (sub/super city) for the structured address.\n         *\n         * @attribute municipalitySubdivision\n         * @param {String} [options.municipalitySubdivision] The municipality subdivision (sub/super city).\n         */\n        municipalitySubdivision: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the area's name for the structured address.\n         *\n         * @attribute countryTertiarySubdivision\n         * @param {String} [options.countryTertiarySubdivision] The name of the area.\n         */\n        countryTertiarySubdivision: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the county's name for the structured address.\n         *\n         * @attribute countrySecondarySubdivision\n         * @param {String} [options.countrySecondarySubdivision] The county's name.\n         */\n        countrySecondarySubdivision: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the state or province's name for the structured address.\n         *\n         * @attribute countrySubdivision\n         * @param {String} [options.countrySubdivision] The state or province.\n         */\n        countrySubdivision: {\n            validators: [validateString]\n        },\n\n        /**\n         * Represents the zip code or postal code for the structured address.\n         *\n         * @attribute postalCode\n         * @param {String} [options.postalCode] The zip or postal code.\n         */\n        postalCode: {\n            validators: [validateString]\n        },\n\n        protocol: {\n            validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n        },\n        bestResult: {\n            validators: [validateBool]\n        },\n        timeZone: {\n            validators: [validateOneOfValue(['iana'], 'timeZone parameter')]\n        },\n        extendedPostalCodesFor: {\n            validators: [validateString]\n        },\n        entityTypeSet: {\n            converters: [convertArray, convertCommaSeparated],\n            validators: [validateEntityType]\n        }\n    };\n};\n","import {\n    bool as validateBool, key as validateKey, trackingId as validateTrackingId, oneOfValue as validateOneOfValue,\n    naturalInteger as validateNaturalInteger, numberInInterval as validateNumberInInterval,\n    arrayOfValues as validateArrayOfValues, departAt as validateDepartAt, arriveAt as validateArriveAt,\n    countrySetAlpha3 as validateCountrySetAlpha3\n} from '../validators';\nimport {\n    arrayOfStrings as convertArrayOfStrings, dateTime as convertDateTime,\n    constantSpeedConsumption as convertConstantSpeedConsumption, avoidAreas as convertAvoidAreas\n} from '../converters';\nimport {\n    constantSpeedConsumption, vehicleWeight, floatAndEngineType, fuelEnergyDensityInMJoulesPerLiter,\n    efficiencyParameter, chargeParameter, firstParamCannotBeUsedWithSecond,\n    requiresDependantParameter, consumptionRecuperationAltitudeParameter\n} from '../postValidators';\n\nimport parameterApplications from 'common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @private\n * @class CommonRoutingParameters\n * @module Services\n * @uses KeyMixin\n */\n\nexport const fields = {\n    key: {\n        validators: [validateKey]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n\n    /**\n     * The type of route requested. Notes on specific values:\n     * *    fastest returns the fastest route.\n     * *    shortest returns the shortest route by distance.\n     * *    eco routes balance economy and speed.\n     * *    thrilling routes include interesting or challenging roads and use as few motorways as possible.\n     * You can choose the level of turns included and also the degree of hilliness. See the hilliness and\n     * windingness parameters to see how to set this. There is a limit of 900km on routes planned with\n     * routeType=thrilling.\n     *\n     * The default value is fastest.\n     *\n     * @attribute routeType\n     * @param {String} [options.routeType='fastest'] The route type to be used during route calculation.\n     */\n    routeType: {\n        validators: [validateOneOfValue(['fastest', 'shortest', 'eco', 'thrilling'], 'route type')]\n    },\n\n    /**\n     * Possible values:\n     * - true (do consider all available traffic information during routing)\n     * - false (ignores current traffic data during routing) Note that although the current traffic data is\n     *   ignored during routing, the effect of historic traffic on effective road speeds is still incorporated.\n     *\n     * The default is true.\n     *\n     * @attribute traffic\n     * @param {Boolean} [options.traffic=true] A boolean flag determines if traffic data should be used to calculate the\n     *     route.\n     */\n    traffic: {\n        validators: [validateBool]\n    },\n\n    /**\n     * Specifies something that the route calculation should try to avoid when determining the route. Can be\n     * specified multiple times. Possible values:\n     * *    tollRoads: avoids toll roads.\n     * *    motorways: avoids motorways.\n     * *    ferries: avoids ferries.\n     * *    unpavedRoads: avoids unpaved roads.\n     * *    carpools: avoids routes that require use of a carpool (HOV/ High Occupancy Vehicle) lanes.\n     * *    alreadyUsedRoads: avoids using the same road multiple times.\n     *\n     * Most useful in conjunction with routeType=thrilling.\n     *\n     * @attribute avoid\n     * @param {Array|String} [options.avoid] Specifies something that the route calculation should try to avoid when\n     *     determining the route.\n     */\n    avoid: {\n        validators: [validateArrayOfValues(['tollRoads', 'motorways', 'ferries', 'unpavedRoads', 'carpools',\n            'alreadyUsedRoads'\n        ], 'avoid')],\n        converters: [convertArrayOfStrings]\n    },\n\n    /**\n     * The date and time of departure from the origin point.\n     * Departure times, apart from now, must be specified as a dateTime.\n     * When a time zone offset is not specified, it will be assumed to be that of the origin point.\n     * The departAt value must be in the future. The departAt parameter cannot be used in conjunction with\n     * arriveAt.\n     *\n     * @attribute departAt\n     * @param {String} [options.departAt] The properly formatted date with the time or 'now' value. Date\n     * cannot be in the past and has to follow ISO 8601 standard.\n     */\n    departAt: {\n        validators: [validateDepartAt],\n        converters: [convertDateTime]\n    },\n\n    /**\n     * The date and time of arrival at the destination point.\n     * It must be specified as a dateTime.\n     * When a time zone offset is not specified it will be assumed to be that of the destination point.\n     * The arriveAt value must be in the future. The arriveAt parameter cannot be used in conjunction with\n     * departAt.\n     *\n     * @attribute arriveAt\n     * @param {String} [options.arriveAt] The properly formatted date with a time value. Date cannot be in the past\n     * and has to follow ISO 8601 standard.\n     */\n    arriveAt: {\n        validators: [validateArriveAt],\n        converters: [convertDateTime]\n    },\n\n    /**\n     * The travel mode for the requested route.\n     *\n     * Possible values: _car, truck, taxi, bus, van, motorcycle, bicycle, pedestrian_\n     *\n     * Note that the requested travelMode may not be available for the entire route. Where\n     * the requested travelMode is not available for a particular section, the <travelMode> element of the\n     * response for that section will be 'other'.\n     *\n     * @attribute travelMode\n     * @param {String} [options.travelMode] The primary means of transportation to be used while routing.\n     */\n    travelMode: {\n        validators: [validateOneOfValue(['car', 'truck', 'taxi', 'bus', 'van', 'motorcycle', 'bicycle',\n            'pedestrian'\n        ], 'travel mode')]\n    },\n\n    /**\n     * Degree of hilliness for thrilling route. Possible values: low, normal, high.\n     * This parameter can only be used in conjunction with routeType thrilling.\n     *\n     * @attribute hilliness\n     * @param {String} [options.hilliness] The level of hilliness on a thrilling route.\n     */\n    hilliness: {\n        validators: [validateOneOfValue(['low', 'normal', 'high'], 'hilliness')]\n    },\n\n    /**\n     * Level of turns for thrilling route. Possible values: low, normal, high.\n     * This parameter can only be used in conjunction with routeType thrilling.\n     *\n     * @attribute windingness\n     * @param {String} [options.windingness] The level of windingness on a thrilling route.\n     */\n    windingness: {\n        validators: [validateOneOfValue(['low', 'normal', 'high'], 'windingness')]\n    },\n\n    /**\n     * Specifies which data should be reported for diagnosis purposes.\n     *\n     * Possible values: _effectiveSettings_\n     * Reports the effective parameters or data used when calling the API.\n     *\n     * In the case of defaulted parameters, the default will be reflected where the parameter was not specified\n     * by the caller.\n     *\n     * @attribute report\n     * @param {String} [options.report] The level of a verbose answer from the service, useful for debugging purposes.\n     */\n    report: {\n        validators: [validateOneOfValue(['effectiveSettings'], 'report')]\n    },\n\n    /**\n     * Engine type of the vehicle. This parameter is currently only considered for travelMode truck. Valid\n     * options are: _combustion, electric_\n     *\n     * @attribute vehicleEngineType\n     * @param {String} [options.vehicleEngineType] The vehicle engine type.\n     */\n    vehicleEngineType: {\n        validators: [validateOneOfValue(['combustion', 'electric'], 'vehicle engine type')]\n    },\n\n    /**\n     * Maximum speed of the vehicle in km/hour. A value of 0 means that an appropriate value for the vehicle\n     * will be determined and applied during route planning. A non-zero value may be overridden during route\n     * planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleMaxSpeed\n     * @param {Number} [options.vehicleMaxSpeed] The maximal allowed vehicle speed in km/h.\n     */\n    vehicleMaxSpeed: {\n        validators: [validateNaturalInteger]\n    },\n\n    /**\n     * Weight of the vehicle in kg. A value of 0 means that weight restrictions are not considered during route\n     * planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleWeight\n     * @param {Number} [options.vehicleWeight] The vehicle weight in kg (kilograms).\n     */\n    vehicleWeight: {\n        validators: [\n            validateNaturalInteger,\n            vehicleWeight\n        ]\n    },\n\n    /**\n     * Weight per axle of the vehicle in kg (kilograms). A value of 0 means that weight restrictions per axle are not\n     * considered during route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleAxleWeight\n     * @param {Number} [options.vehicleAxleWeight] The vehicle axle wight in kg (kilograms).\n     */\n    vehicleAxleWeight: {\n        validators: [validateNaturalInteger]\n    },\n\n    /**\n     * Length of the vehicle in meters. A value of 0 means that length restrictions are not considered during\n     * route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleLength\n     * @param {Number} [options.vehicleLength] The vehicle length in meters.\n     */\n    vehicleLength: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)]\n    },\n\n    /**\n     * Width of the vehicle in meters. A value of 0 means that width restrictions are not considered during\n     * route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleWidth\n     * @param {Number} [options.vehicleWidth] The vehicle width in meters.\n     */\n    vehicleWidth: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)]\n    },\n\n    /**\n     * Height of the vehicle in meters. A value of 0 means that height restrictions are not considered\n     * during route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleHeight\n     * @param {Number} [options.vehicleHeight] The vehicle height in meters.\n     */\n    vehicleHeight: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)]\n    },\n\n    /**\n     * The vehicle is used for commercial purposes and thus may not be allowed to drive on some roads. This\n     * parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleCommercial\n     * @param {Boolean} [options.vehicleCommercial] True if the vehicle is used for commercial purposes.\n     */\n    vehicleCommercial: {\n        validators: [validateBool]\n    },\n\n    /**\n     * Types of cargo that may be classified as hazardous materials and restricted from some roads. Available\n     * vehicleLoadType values are US Hazmat classes 1 through 9, plus generic classifications for use in other\n     * countries.\n     *\n     * __Use these for routing in US__\n     * * USHazmatClass1 Explosives\n     * * USHazmatClass2 Compressed gas\n     * * USHazmatClass3 Flammable liquids\n     * * USHazmatClass4 Flammable solids\n     * * USHazmatClass5 Oxidizers\n     * * USHazmatClass6 Poisons\n     * * USHazmatClass7 Radioactive\n     * * USHazmatclass8 Corrosives\n     * * USHazmatClass9 Miscellaneous\n     *\n     * __Use these for routing in all other countries__\n     * * otherHazmatExplosive Explosives\n     * * otherHazmatGeneral Miscellaneous\n     * * otherHazmatHarmfulToWater Harmful to water\n     *\n     * This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleLoadType\n     * @param {Array|String} [options.vehicleLoadType] The array of truck cargo classification.\n     */\n    vehicleLoadType: {\n        validators: [validateArrayOfValues(['USHazmatClass1', 'USHazmatClass2', 'USHazmatClass3',\n            'USHazmatClass4', 'USHazmatClass5', 'USHazmatClass6', 'USHazmatClass7', 'USHazmatClass8',\n            'USHazmatClass9', 'otherHazmatExplosive', 'otherHazmatGeneral', 'otherHazmatHarmfulToWater'\n        ],\n        'vehicle load type')],\n        converters: [convertArrayOfStrings]\n    },\n    /**\n     * Specifies the speed-dependent component of consumption.\n     * Provided as an unordered list of speed/consumption-rate pairs. The list defines points on a\n     * consumption curve.\n     * Consumption rates for speeds not in the list are found as follows:\n     *   *  By linear interpolation, if the given speed lies in between two speeds in the list.\n     *   *  By linear extrapolation otherwise, assuming a constant (ΔConsumption/ΔSpeed) determined by\n     * the nearest two points in the list.\n     *\n     * The list must contain between 1 and 25 points (inclusive), and may not\n     * contain duplicate points for the same speed. If it only contains a single point,\n     * then the consumption rate of that point is used without further processing.\n     * Consumption specified for the largest speed must be greater than or equal to that of the\n     * penultimate highest speed. This ensures that extrapolation does not lead to negative consumption rates.\n     * Similarly, consumption values specified for the two lowest speeds in the list cannot lead to a\n     * negative consumption rate for any smaller speed.\n     * The minimum and maximum values described here refer to the valid range for the consumption values\n     * (expressed in l/100km).\n     * @attribute constantSpeedConsumptionInLitersPerHundredkm\n     * @param {Array} [options.constantSpeedConsumptionInLitersPerHundredkm] Colon-delimited list of\n     * CombustionConstantSpeedConsumptionPairs, e.g., an array of such pairs \"60,7\".\n     */\n    constantSpeedConsumptionInLitersPerHundredkm: {\n        validators: [\n            constantSpeedConsumption('combustion')\n        ],\n        converters: [convertConstantSpeedConsumption]\n    },\n    /**\n     * Specifies the current supply of fuel in liters.\n     * @attribute currentFuelInLiters\n     * @param {Number} [options.currentFuelInLiters]\n     */\n    currentFuelInLiters: {\n        validators: [\n            floatAndEngineType('combustion', 'currentFuelInLiters')\n        ]\n    },\n    /**\n     * Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters\n     *  per hour. It can be used to specify consumption due to devices and systems such as AC systems, radio,\n     * heating, etc.\n     * @attribute auxiliaryPowerInLitersPerHour\n     * @param {Number} [options.auxiliaryPowerInLitersPerHour]\n     */\n    auxiliaryPowerInLitersPerHour: {\n        validators: [\n            floatAndEngineType('combustion', 'auxiliaryPowerInLitersPerHour')\n        ]\n    },\n    /**\n     * Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).\n     * It is used in conjunction with the *Efficiency parameters for conversions between saved\n     * or consumed energy and fuel.\n     * For example, energy density is 34.2 MJ/l for gasoline, and 35.8 MJ/l for Diesel fuel.\n     * @attribute fuelEnergyDensityInMJoulesPerLiter\n     * @param {Number} [options.fuelEnergyDensityInMJoulesPerLiter]\n     */\n    fuelEnergyDensityInMJoulesPerLiter: {\n        validators: [\n            fuelEnergyDensityInMJoulesPerLiter\n        ]\n\n    },\n    /**\n     * Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the\n     * vehicle accelerates (i.e., KineticEnergyGained/ChemicalEnergyConsumed).\n     * ChemicalEnergyConsumed is obtained by converting consumed fuel to chemical energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute accelerationEfficiency\n     * @param {Number} [options.accelerationEfficiency]\n     */\n    accelerationEfficiency: {\n        validators: [\n            efficiencyParameter('accelerationEfficiency', 'decelerationEfficiency')\n        ]\n    },\n    /**\n     * Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the\n     * vehicle decelerates (i.e., ChemicalEnergySaved/KineticEnergyLost).\n     * ChemicalEnergySaved is obtained by converting saved (not consumed) fuel to energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute decelerationEfficiency\n     * @param {Number} [options.decelerationEfficiency]\n     */\n    decelerationEfficiency: {\n        validators: [\n            efficiencyParameter('decelerationEfficiency', 'accelerationEfficiency')\n        ]\n    },\n    /**\n     * Specifies the efficiency of converting chemical energy stored in fuel to potential energy\n     * when the vehicle gains elevation (i.e., PotentialEnergyGained/ChemicalEnergyConsumed).\n     * ChemicalEnergyConsumed is obtained by converting consumed fuel to chemical energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute uphillEfficiency\n     * @param {Number} [options.uphillEfficiency]\n     */\n    uphillEfficiency: {\n        validators: [\n            efficiencyParameter('uphillEfficiency', 'downhillEfficiency')\n        ]\n    },\n    /**\n     * Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the\n     * vehicle loses elevation (i.e., ChemicalEnergySaved/PotentialEnergyLost).\n     * ChemicalEnergySaved is obtained by converting saved (not consumed) fuel to energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute downhillEfficiency\n     * @param {Number} [options.downhillEfficiency]\n     */\n    downhillEfficiency: {\n        validators: [\n            efficiencyParameter('downhillEfficiency', 'uphillEfficiency')\n        ]\n    },\n    /**\n     * Specifies the speed-dependent component of consumption.\n     * Provided as an unordered list of speed/consumption-rate pairs. The list defines points\n     * on a consumption curve.\n     * Consumption rates for speeds not in the list are found as follows:\n     * *    By linear interpolation, if the given speed lies in between two speeds in the list.\n     * *    By linear extrapolation otherwise, assuming a constant (ΔConsumption/ΔSpeed) determined by\n     * the nearest two points in the list.\n     *\n     * The list must contain between 1 and 25 points (inclusive), and may not contain duplicate points\n     * for the same speed. If it only contains a single point, then the consumption rate of that point\n     * is used without further processing. Consumption specified for the largest speed must be greater\n     * than or equal to that of the penultimate highest speed.\n     * This ensures that extrapolation does not lead to negative consumption rates.\n     * Similarly, consumption values specified for the two lowest speeds in the list cannot lead to a\n     * negative consumption rate for any lower speed.\n     * The minimum and maximum values described here refer to the valid range for the consumption values\n     * (expressed in kWh/100km).\n     * @attribute constantSpeedConsumptionInkWhPerHundredkm\n     * @param {Array} [options.constantSpeedConsumptionInkWhPerHundredkm] Colon-delimited list of\n     * ElectricConstantSpeedConsumptionPairs, e.g., an array of such pairs \"60,7\".\n     */\n    constantSpeedConsumptionInkWhPerHundredkm: {\n        validators: [\n            constantSpeedConsumption('electric')\n        ],\n        converters: [convertConstantSpeedConsumption]\n    },\n    /**\n     * Specifies the current electric energy supply in kilowatt hours (kWh).\n     * @attribute currentChargeInkWh\n     * @param {Number} [options.currentChargeInkWh]\n     */\n    currentChargeInkWh: {\n        validators: [\n            chargeParameter('currentChargeInkWh', 'maxChargeInkWh')\n        ]\n    },\n    /**\n     * Specifies the maximum electric energy supply in kilowatt hours (kWh) that may be stored in\n     * the vehicle's battery.\n     * @attribute maxChargeInkWh\n     * @param {Number} [options.maxChargeInkWh]\n     */\n    maxChargeInkWh: {\n        validators: [\n            chargeParameter('maxChargeInkWh', 'currentChargeInkWh')\n        ]\n    },\n    /**\n     * Specifies the amount of power consumed for sustaining auxiliary systems in kilowatts (kW).\n     * It can be used to specify consumption due to devices and systems such as AC systems, radio, heating, etc.\n     * @attribute auxiliaryPowerInkW\n     * @param {Number} [options.auxiliaryPowerInkW]\n     */\n    auxiliaryPowerInkW: {\n        validators: [\n            floatAndEngineType('electric', 'auxiliaryPowerInkW')\n        ]\n    },\n\n    /**\n     * Represents the type of protocol used to perform the service call.\n     *\n     * @attribute protocol\n     * @param {String} [options.protocol] Protocol type, one of _http_ or _https_.\n     */\n    protocol: {\n        validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n    },\n\n    /**\n     * A list of shapes to avoid for planning routes. Supported shapes include rectangles.\n     * Can contain one of each supported shapes element.\n\n     * @example\n     * ```js\n     * tt.services.calculateRoute({\n     *      locations: '52.37173,4.91015:52.36357,4.898046255',\n     *      avoidAreas: [{\n     *      southWestCorner: {latitude: 52.36391, longitude:4.90106},\n     *      northEastCorner: {latitude: 52.36554, longitude:4.90767}\n     * }]);\n     * ```\n     * Supported point formats:\n     * - 'lat,lon'\n     * - {lat:111, lon:111}\n     * - {lat:111, lng:111}\n     * - {latitude:111, longitude:111}\n     * - {x:111, y:111}\n     * - {lat: function(), lng:function()}\n     *\n     * @attribute avoidAreas\n     * @param {Object[]} [options.avoidAreas] A list of shapes to avoid for planning routes.\n     * @throws {TypeError} If the given argument cannot be converted to a valid value.\n     */\n    avoidAreas: {\n        converters: [convertAvoidAreas],\n        application: parameterApplications.POST\n    },\n\n    /**\n     * List of 3-character ISO 3166-1 alpha-3 country codes of countries in which\n     * all toll roads with vignettes are to be avoided.\n     * Toll roads with vignettes in countries not in the list are unaffected.\n     * It is an error to specify both avoidVignette and allowVignette.\n     * @attribute avoidVignette\n     * @param {String|String[]} [options.avoidVignette] An array of country codes.\n     * @throws {TypeError} If the given argument cannot be converted into a valid value.\n     */\n    avoidVignette: {\n        validators: [\n            validateCountrySetAlpha3.bind(this, false),\n            firstParamCannotBeUsedWithSecond('avoidVignette', 'allowVignette')\n        ],\n        converters: [convertArrayOfStrings],\n        application: parameterApplications.POST\n    },\n\n    /**\n     * List of 3-character ISO 3166-1 alpha-3 country codes of countries in which\n     * toll roads with vignettes are allowed.\n     * Specifying allowVignette with some countries X is equivalent to specifying\n     * avoidVignette with all countries but X.\n     * Specifying allowVignette with an empty list is the same as avoiding all toll roads with vignettes.\n     * It is an error to specify both avoidVignette and allowVignette.\n     * @attribute allowVignette\n     * @param {String|String[]} [options.allowVignette] An array of country codes.\n     * @throws {TypeError} If the given argument cannot be converted into a valid value.\n     */\n    allowVignette: {\n        validators: [\n            validateCountrySetAlpha3.bind(this, true),\n            firstParamCannotBeUsedWithSecond('allowVignette', 'avoidVignette')\n        ],\n        converters: [convertArrayOfStrings],\n        application: parameterApplications.POST\n    },\n\n    /**\n     * Specifies the electric energy in kWh gained by the vehicle through losing 1000 meters of elevation.\n     * * Note: It must be paired with `consumptionInkWhPerkmAltitudeGain`.\n     * * Note: It cannot be used with `accelerationEfficiency`, `decelerationEfficiency`, `uphillEfficiency`\n     * or `downhillEfficiency`.\n     *\n     * Minimum value: 0.0\n     * Maximum value: `consumptionInkWhPerkmAltitudeGain`\n     *\n     * @attribute recuperationInkWhPerkmAltitudeLoss\n     * @param {Number} [options.recuperationInkWhPerkmAltitudeLoss] Electric energy in kWh\n     */\n    recuperationInkWhPerkmAltitudeLoss: {\n        validators: [\n            requiresDependantParameter(\n                'recuperationInkWhPerkmAltitudeLoss',\n                'consumptionInkWhPerkmAltitudeGain'\n            ),\n            consumptionRecuperationAltitudeParameter\n        ]\n    },\n\n    /**\n     * Specifies the electric energy in kWh consumed by the vehicle through gaining 1000 meters of elevation.\n     * * Note: It must be paired with `recuperationInkWhPerkmAltitudeLoss`.\n     * * Note: It cannot be used with `accelerationEfficiency`, `decelerationEfficiency`, `uphillEfficiency`\n     * or `downhillEfficiency`.\n     *\n     * Minimum value: `recuperationInkWhPerkmAltitudeLoss`\n     * Maximum value: 500.0\n     *\n     * @attribute consumptionInkWhPerkmAltitudeGain\n     * @param {Number} [options.consumptionInkWhPerkmAltitudeGain] Electric energy in kWh\n     */\n    consumptionInkWhPerkmAltitudeGain: {\n        validators: [\n            requiresDependantParameter(\n                'consumptionInkWhPerkmAltitudeGain',\n                'recuperationInkWhPerkmAltitudeLoss'\n            ),\n            consumptionRecuperationAltitudeParameter\n        ]\n    },\n\n    /**\n     * If specified, the vehicle is subject to ADR tunnel restrictions.\n     * * Vehicles with code B are restricted from roads with ADR tunnel categories B, C, D, and E.\n     * * Vehicles with code C are restricted from roads with ADR tunnel categories C, D, and E.\n     * * Vehicles with code D are restricted from roads with ADR tunnel categories D and E.\n     * * Vehicles with code E are restricted from roads with ADR tunnel category E.\n     * * If `vehicleAdrTunnelRestrictionCode` is not specified, no ADR tunnel restrictions apply.\n     *\n     * Notes:\n     * * If `travelMode` is pedestrian or bicycle, `vehicleAdrTunnelRestrictionCode` is not considered.\n     * * The `vehicleAdrTunnelRestrictionCode` and `vehicleLoadType` parameters are independent; please\n     * provide both if applicable.\n     *\n     * @attribute vehicleAdrTunnelRestrictionCode\n     * @param {String} [options.vehicleAdrTunnelRestrictionCode] An ADR restriction code\n     * @throws {TypeError} If the given argument is not a valid ADR restriction code.\n     */\n    vehicleAdrTunnelRestrictionCode: {\n        validators: [validateOneOfValue(['B', 'C', 'D', 'E'], 'vehicleAdrTunnelRestrictionCode')]\n    }\n};\n","import {\n    point as validatePoint, numberInInterval as validateNumberInInterval\n} from '../validators';\nimport {point as convertPoint} from '../converters';\nimport {\n    budgetInRange, requiredBudget, requiredWithSpecificEngineType, notCommon\n} from '../postValidators';\nimport {fields as commonRoutingParameters} from './commonRoutingParameters';\nimport {extend, clone} from '../utils';\nimport parameterApplications from '../../common/parameterApplications';\n\n/**\n * @private\n * @class CalculateReachableRangeParameters\n * @module Services\n */\n\nlet fields = {\n    __all: {\n        validators: [\n            requiredBudget,\n            notCommon\n        ]\n    },\n    /**\n     * Point from which the range calculation should start.\n     * The following formats are supported:\n     *\n     * - **String** (longitude/latitude pair)\n     *   - `\"4.8,52.3\"`\n     * - **Array** (longitude/latitude pair)\n     *   - `[4.8, 52.3]`\n     * - **Object**\n     *   - `{lon: 4.8, lat: 52.3}`\n     *   - `{lng: 5.8, lat: 53.3}`\n     *   - `{x: 53.3, y: 5.8}`\n     *   - `{longitude: 5.8, latitude: 53.3}`\n     *   - `{lng: Function, lat: Function}` The functions should return a numeric value.\n     *\n     * @attribute origin\n     * @param {String|Array|Object} origin\n     */\n    origin: {\n        validators: [validatePoint],\n        converters: [convertPoint],\n        application: parameterApplications.PATH\n    },\n\n    /**\n     * @attribute fuelBudgetInLiters\n     * @param {Number} fuelBudgetInLiters Fuel budget in liters that\n     * determines the maximal range which can be traveled using the specified\n     * Combustion Consumption Model. Required if _vehicleEngineType_ is _combustion_.\n     * NOTE: _exactly one_ of `fuelBudgetInLiters`, `energyBudgetInkWh`, `timeBudgetInSec` and\n     * `distanceBudgetInMeters` must be set.\n     */\n    fuelBudgetInLiters: {\n        validators: [\n            requiredWithSpecificEngineType,\n            budgetInRange\n        ]\n    },\n\n    /**\n     * @attribute energyBudgetInkWh\n     * @param {Number} energyBudgetInkWh  Electric energy budget in\n     * kilowatt hours (kWh) that determines maximal range which can be\n     * traveled using the specified Electric Consumption Model.\n     * NOTE: _exactly one_ of `fuelBudgetInLiters`, `energyBudgetInkWh`, `timeBudgetInSec` and\n     * `distanceBudgetInMeters` must be set.\n     */\n    energyBudgetInkWh: {\n        validators: [\n            requiredWithSpecificEngineType,\n            budgetInRange\n        ]\n    },\n    /**\n     * @attribute distanceBudgetInMeters\n     * @param {Number} distanceBudgetInMeters  The distance budget in meters\n     * that determines the maximal range which can be traveled.\n     * The Consumption Model will only affect the range when routeType is eco.\n     * NOTE: _exactly one_ of `fuelBudgetInLiters`, `energyBudgetInkWh`, `timeBudgetInSec` and\n     * `distanceBudgetInMeters` must be set.\n     */\n    distanceBudgetInMeters: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)]\n    },\n\n    /**\n     * @attribute timeBudgetInSec\n     * @param {Number} timeBudgetInSec Time budget in seconds that determines maximal\n     * range which can be traveled using driving time.\n     * The consumption parameters will only affect eco-routes and thereby indirectly the driving time.\n     * NOTE: _exactly one_ of `fuelBudgetInLiters`, `energyBudgetInkWh`, `timeBudgetInSec` and\n     * `distanceBudgetInMeters` must be set.\n     */\n    timeBudgetInSec: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)]\n    }\n\n};\n\nfields = extend(fields, commonRoutingParameters);\n\nexport default (fieldsToSkip) => {\n    const result = clone(fields);\n    if (fieldsToSkip instanceof Array) {\n        fieldsToSkip.forEach(function(field) {\n            delete result[field];\n        });\n    }\n\n    return result;\n};\n\n","import {PointFacade} from '../pointFacade';\n\nconst pointFacade = new PointFacade();\n\nconst toGeoJson = (data) => {\n    const coordinates = data.reachableRange.boundary.map(coordinates => [coordinates.lng, coordinates.lat]);\n    return {\n        type: 'Feature',\n        geometry: {\n            type: 'Polygon',\n            coordinates: [coordinates]\n        }\n    };\n};\n\nexport default (data) => {\n    if (data.reachableRange &&\n        data.reachableRange.boundary &&\n        Array.isArray(data.reachableRange.boundary)\n    ) {\n        // convert points\n        data.reachableRange.boundary = pointFacade.convert(data.reachableRange.boundary);\n        data.reachableRange.center = pointFacade.convert(data.reachableRange.center);\n    }\n\n    return Object.assign(data, {\n        toGeoJson: () => toGeoJson(data)\n    });\n};\n","import reachableRangeModel from './calculateReachableRange';\n\nexport default (data) => {\n    if (!Array.isArray(data.batchItems)) {\n        return null;\n    }\n    data.batchItems = data.batchItems.map((batchItem) => {\n        if (batchItem.response.error) {\n            return { error: batchItem.response.error};\n        } else {\n            return reachableRangeModel(batchItem.response);\n        }\n    });\n\n    return data;\n};\n","/* eslint-disable max-len */\n/* jshint ignore:start */\n/**\n * Calculate a reachable range implementation using the TomTom Reachable Range API.\n *\n * Makes a route request using the TomTom [Routing API - Calculate Reachable Range](CALCULATE_REACHABLE_RANGE_URL).\n *\n * Parameters need to be passed to the constructor.\n *\n *\n * The Calculate Reachable Range service calculates a set of locations that can\n * be reached from the origin point, subject to the available fuel or energy\n * budget that is specified in the request.\n *\n * The information returned is a polygon boundary in counterclockwise orientation\n * and the precise polygon center (the result of map-matching the origin point).\n *\n * ### Response\n * This service extends the API response by providing the following methods:\n * * `toGeoJson()`, converts range data into\n * a Feature with <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.6\">Polygon</a> geometry.\n * * `getTrackingId()`, which returns the `Tracking-ID` associated with the request.\n *\n * To read more about services responses take a look at {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n * or dive into <a target=\"_blank\" rel=”noopener”\n * href=\"https://developer.tomtom.com/maps-sdk-web-js/functional-examples#examples,code,reachable-range.html\">\n * Reachable range example</a> code.\n *\n * @class calculateReachableRange\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses CommonRoutingParameters\n * @uses CalculateReachableRangeParameters\n * @uses ProtocolMixin\n * @uses BatchMixin\n * @uses TrackingIdMixin\n * @uses ReturnsToGeoJsonMixin\n * @uses AbortSignalMixin\n *\n * @constructor\n *\n * @param {Object} [options] Options to be passed to the routing call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n * @example\n * ```javascript\n *     tt.services.calculateReachableRange({\n *         key: <Your API key>,\n *         origin: '19.454722,51.776667',\n *         fuelBudgetInLiters: 5,\n *         constantSpeedConsumptionInLitersPerHundredkm: [\"10,20\", \"15,30\"],\n *     }).then(function(rangeData) {\n *           console.log(rangeData.toGeoJson());\n *      })\n *       .catch(function(error) {\n *           console.error(error);\n *       });\n * ```\n *\n */\n/* eslint-enable max-len */\n/* jshint ignore:end */\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport calculateReachableRangeParameters from './calculateReachableRangeParameters';\nimport reachableRangeModel from '../../model/routing/calculateReachableRange';\nimport batchReachableRangeModel from '../../model/routing/batchCalculateReachableRange';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory,\n    batchRequestServiceFactory,\n    serviceFactory\n} from '../../core';\n\nconst fields = calculateReachableRangeParameters();\nconst maxNoOfElementsInBatchRequest = 100;\n\nexport function calculateReachableRange(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('calculateReachableRangeEndpoint'));\n    const batchRequest = batchRequestServiceFactory(maxNoOfElementsInBatchRequest, {\n        batchSync: endpoints.resolve('batchSyncRoutingEndpoint'),\n        batch: endpoints.resolve('batchRoutingEndpoint'),\n        single: endpoints.resolve('batchReachableRangeQueryEndpoint')\n    });\n\n    const handleServiceCall = (data, abortSignal) => {\n        return singleRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, reachableRangeModel));\n    };\n\n    const handleBatchServiceCall = (data, abortSignal) => {\n        return batchRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, batchReachableRangeModel));\n    };\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.ROUTING,\n        'calculateReachableRange',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","function newFeature(route) {\n    return {\n        type: 'Feature',\n        properties: {summary: route.summary, sections: route.sections, segmentSummary: []}\n    };\n}\n\nfunction getCoordinates(points) {\n    const coordinates = [];\n    for (let i = 0; i < points.length; i += 1) {\n        coordinates.push([points[i].lng, points[i].lat]);\n    }\n    return coordinates;\n}\n\nexport function getRouteFeature(route) {\n    const isMultiLineString = route.legs.length > 1;\n\n    const feature = newFeature(route);\n    for (let i = 0; i < route.legs.length; i += 1) {\n        feature.properties.segmentSummary.push(route.legs[i].summary);\n\n        if (route.legs[i].points) {\n            feature.geometry = feature.geometry || {\n                coordinates: []\n            };\n\n            if (isMultiLineString) {\n                feature.geometry.type = 'MultiLineString';\n                feature.geometry.coordinates.push(getCoordinates(route.legs[i].points));\n            } else {\n                feature.geometry.type = 'LineString';\n                feature.geometry.coordinates = getCoordinates(route.legs[i].points);\n            }\n        }\n    }\n    if (route.guidance) {\n        feature.properties.guidance = route.guidance;\n    }\n    return feature;\n}\n","import {PointFacade} from '../pointFacade';\nimport {getRouteFeature} from './helpers/getRouteFeature';\nimport {newFeatureCollection} from '../modelUtils';\n\nconst pointFacade = new PointFacade();\nconst newLineString = () => {\n    return {\n        type: 'Feature',\n        geometry: {\n            type: 'LineString'\n        },\n        properties: {}\n    };\n};\n\nconst setProperty = (properties, propertyName, value) => {\n    if (value) {\n        properties[propertyName] = value;\n    }\n};\n\nconst toGeoJson = (data) => {\n    const result = newFeatureCollection();\n    if (!data || !data.routes) {\n        return result;\n    }\n    for (let i = 0; i < data.routes.length; i += 1) {\n        result.features.push(getRouteFeature(data.routes[i]));\n    }\n    return result;\n};\n\nconst toRouteSectionsCollection = (data) => {\n    const results = [];\n\n    if (!data || !data.routes) {\n        return results;\n    }\n\n    data.routes.forEach(route => {\n        const points = [];\n\n        for (let i = 0; i < route.legs.length; i += 1) {\n            points.push(...route.legs[i].points);\n        }\n\n        const featureCollection = newFeatureCollection();\n        route.sections.forEach(section => {\n            let coordinates = points.slice(section.startPointIndex, section.endPointIndex + 1);\n            coordinates = coordinates.map(lngLat => [lngLat.lng, lngLat.lat]);\n\n            const lineString = newLineString();\n\n            lineString.geometry.coordinates = coordinates;\n\n            setProperty(lineString.properties, 'sectionType', section.sectionType);\n            setProperty(lineString.properties, 'travelMode', section.travelMode);\n            setProperty(lineString.properties, 'countryCode', section.countryCode);\n            setProperty(lineString.properties, 'simpleCategory', section.simpleCategory);\n            setProperty(lineString.properties, 'effectiveSpeedInKmh', section.effectiveSpeedInKmh);\n            setProperty(lineString.properties, 'delayInSeconds', section.delayInSeconds);\n            setProperty(lineString.properties, 'magnitudeOfDelay', section.delayInSeconds);\n            setProperty(lineString.properties, 'tec', section.tec);\n\n            featureCollection.features.push(lineString);\n        });\n\n        results.push(featureCollection);\n    });\n\n    return results;\n};\n\nexport function calculateRouteModel(data) {\n    const routes = data.routes;\n\n    // convert points\n    if (routes && routes.length) {\n        routes.forEach(route => {\n            route.legs.forEach(leg => {\n                leg.points = pointFacade.convert(leg.points);\n            });\n        });\n    }\n\n    return Object.assign(data, {\n        toGeoJson: () => toGeoJson(data),\n        toRouteSectionsCollection: () => toRouteSectionsCollection(data)\n    });\n}\n","import {calculateRouteModel as routingModel} from './calculateRoute';\n\nexport function batchCalculateRouteModel(data) {\n    if (!Array.isArray(data.batchItems)) {\n        return null;\n    }\n\n    data.batchItems = data.batchItems.map((batchItem) => {\n        if (batchItem.response.error) {\n            return { error: batchItem.response.error };\n        } else {\n            return routingModel(batchItem.response);\n        }\n    });\n\n    return data;\n}\n","import {extend, clone} from '../utils';\nimport {bool as validateBool, oneOfValue as validateOneOfValue, naturalInteger as validateNaturalInteger,\n    numberInInterval as validateNumberInInterval, arrayOfValues as validateArrayOfValues,\n    routingLocations as validateRoutingLocations, routingGuidanceLanguage as validateRoutingGuidanceLanguage,\n    integerInInterval as validateIntegerInInterval, supportingPoints as validateSupportingPoints\n} from '../validators';\nimport {\n    routingLocations as convertRoutingLocations, routingGuidanceLanguage as convertRoutingGuidanceLanguage,\n    supportingPoints as convertSupportingPoints, arrayOfStrings as convertArrayOfStrings\n} from '../converters';\nimport {fields as commonRoutingParameters} from './commonRoutingParameters';\nimport {\n    firstParamCannotBeUsedWithSecond, requiresDependantParameter\n} from '../postValidators';\nimport parameterApplications from '../../common/parameterApplications';\n\n/**\n * @private\n * @class RoutingParameters\n * @module Services\n */\n\nlet routingParameters = {\n    /**\n     * Specifies whether to compute alternatives\n     * with the objective to find routes that are significantly different,\n     * or whether to look for routes better than the reference route. Possible values are:\n     *  1. anyRoute: compute alternative routes that are significantly different from the reference route.\n     *  2. betterRoute: return an alternative route only if it is better than the reference\n     *      route according to the given planning criteria.\n     *      If there is a road block on the reference route,\n     *      then any alternative that does not contain blockages is considered as a better route.\n     *\n     * Can only be used when reconstructing a route.\n     *\n     * @attribute alternativeType\n     * @param {String} [options.alternativeType] The type of the alternative route.\n     */\n    alternativeType: {\n        validators: [validateOneOfValue(['anyRoute', 'betterRoute'], 'alternativeType')]\n    },\n    /**\n     * Locations through which the route is calculated. The\n     * following constraints apply:\n     * *    At least two locations must be provided.\n     * *    The first location in the sequence defines the origin and must be of type 'point'.\n     * *    The last location in the sequence defines the destination and must be of type 'point'.\n     * *    One or more optional intermediate locations (known as waypoints) may be provided:\n     *      *   The maximum allowed number of waypoints is 150.\n     *      *   A point waypoint results in an extra leg in the response, a circle waypoint does not.\n     *      *   Circle waypoints cannot be used when computeBestOrder is true.\n     *\n     * The points or circles that will be used to calculate the route. The following input types are allowed:\n     *  1. A string with colon-delimited locations. For example '13.42936,52.50931:13.43872,52.50274'\n     * where comma divides longitude and latitude.\n     *  2. An array containing locations.\n     *     Location can be defined as a string, object, or array.\n     *\n     * <b>Note:</b> Please keep in mind, that `supportingPoints` and 'Waypoints' (meaning more than two `locations`)\n     * are mutually exclusive. If you are using `supportingPoints` you can use only two `locations`.\n     *\n     * @attribute locations\n     * @param {String|Array} [options.locations] These are the specified locations for route calculation.\n     */\n    locations: {\n        validators: [validateRoutingLocations],\n        converters: [convertRoutingLocations],\n        required: true,\n        application: parameterApplications.PATH\n    },\n    /**\n     * The number of desired alternative routes to be calculated. The value provided:\n     * Must be an integer in the range 0-5.\n     * Using a value greater than 0 in conjunction with computeBestOrder set to true is not allowed.\n     * Fewer alternative routes may be returned if either fewer alternatives exist or the requested number of\n     * alternatives is larger than the service can calculate. The default value is 0, the maximum value is 5.\n     *\n     * @attribute maxAlternatives\n     * @param {Number} [options.maxAlternatives] To restrict the maximum alternative routes to be calculated.\n     */\n    maxAlternatives: {\n        validators: [validateNumberInInterval(0, 5)]\n    },\n\n    /**\n     * If specified, guidance instructions will be returned (if available).\n     *\n     * Possible values:\n     * * _coded_ : returns raw instruction data without human-readable messages.\n     * * _text_ : returns raw instructions data with human-readable messages in plain text.\n     * * _tagged_ : returns raw instruction data with tagged human-readable messages to permit formatting.\n     *\n     * Note that the instructionsType parameter cannot be used in conjunction with routeRepresentation=none.\n     * If alternative routes are requested, instructions will be generated for each route returned.\n     *\n     * @attribute instructionsType\n     * @param {String} [options.instructionsType] If a street number is sent in along with the request, the response\n     *     may include the side of the street (Left/Right) and also an offset position for that street number.\n     */\n    instructionsType: {\n        validators: [validateOneOfValue(['coded', 'text', 'tagged'], 'instructions type')]\n    },\n    /* eslint-disable max-len */\n    /**\n     * The language parameter determines the language of the guidance messages. It does not affect proper nouns\n     * (the names of streets, plazas, etc.) It has no effect when instructionsType=coded. Allowed values are (a\n     * subset of) the IETF language tags described here. The currently supported languages are listed in the\n     * supported languages section:\n     *\n     * [Routing supported languages](CALCULATE_ROUTE_SUPPORTED_LANGS_URL)\n     *\n     * @attribute language\n     * @param {String} [options.language] The language value.\n     */\n    /* eslint-enable max-len*/\n    language: {\n        validators: [validateRoutingGuidanceLanguage],\n        converters: [convertRoutingGuidanceLanguage]\n    },\n    /**\n     * Reorders the route waypoints to reduce\n     * the route length. Yields best results when used in conjunction with routeType shortest. Possible values:\n     * *    true (compute a better order, if possible; not allowed to be used in conjunction with a\n     * maxAlternatives value greater than 0; not allowed to be used in conjunction with circle waypoints).\n     * The response will include the optimized waypoint indices.\n     * *    false (use the locations in the given order). Not allowed to be used in conjunction with\n     * routeRepresentation none.\n     *\n     * @attribute computeBestOrder\n     * @param {Boolean} [options.computeBestOrder] A flag to reorder the route waypoints to reduce the route length.\n     */\n    computeBestOrder: {\n        validators: [validateBool]\n    },\n\n    /**\n     * Specifies the representation of the set of routes provided as a response. Possible values:\n     * * _polyline_ includes routes in the response.\n     * * _none_ includes only the optimized waypoint indices but does not include the routes in the response.\n     *\n     * This parameter value can only be used in conjunction with computeBestOrder 'true'.\n     *\n     * @attribute routeRepresentation\n     * @param {String} [options.routeRepresentation] Allows the routing response to omit the actual route and give only\n     *     the best ordered waypoints.\n     */\n    routeRepresentation: {\n        validators: [validateOneOfValue(['polyline', 'none'], 'route representation')]\n    },\n\n    /**\n     * Specifies whether to return additional travel times using different types of traffic information (none,\n     * historic, live) as well as the default best-estimate travel time. Possible values:\n     * * none - do not compute additional travel times.\n     * * all - compute travel times for all types of traffic information. Specifying all results in the fields\n     * noTrafficTravelTimeInSeconds, historicTrafficTravelTimeInSeconds and\n     * liveTrafficIncidentsTravelTimeInSeconds being included in the summaries in the route response.\n     *\n     * @attribute computeTravelTimeFor\n     * @param {String} [options.computeTravelTimeFor] Setting `'all'` provides additional information regarding travel\n     *     times.\n     */\n    computeTravelTimeFor: {\n        validators: [validateOneOfValue(['none', 'all'], 'compute travel time for')]\n    },\n\n    /**\n     * The directional heading of the vehicle in degrees starting at true North and continuing in a clockwise\n     * direction. North is 0 degrees, East is 90 degrees, South is 180 degrees, West is 270 degrees. Possible\n     * values are 0-359.\n     *\n     * @attribute vehicleHeading\n     * @param {Number} [options.vehicleHeading] The angle in which the vehicle is heading.\n     */\n    vehicleHeading: {\n        validators: [validateIntegerInInterval(0, 359)]\n    },\n\n    /**\n     * Defines at least how far **in meters** the alternative routes have to follow the reference route.\n     *\n     * This option cannot be used in conjunction with {{#crossLink \"Routing/arriveAt:method\"}}{{/crossLink}}.\n     *\n     * @attribute minDeviationDistance\n     * @param {Number} [options.minDeviationDistance] Meters represented as a positive integer number.\n     */\n    minDeviationDistance: {\n        validators: [\n            validateNaturalInteger,\n            firstParamCannotBeUsedWithSecond('minDeviationDistance', 'arriveAt'),\n            requiresDependantParameter('minDeviationDistance', 'supportingPoints')\n        ]\n    },\n\n    /**\n     * Defines at least how far **in time (seconds)** the alternative routes have to follow the reference route.\n     *\n     * This option cannot be used in conjunction with {{#crossLink \"Routing/arriveAt:method\"}}{{/crossLink}}.\n     *\n     * @attribute minDeviationTime\n     * @param {Number} [options.minDeviationTime] Seconds represented as a positive integer number.\n     */\n    minDeviationTime: {\n        validators: [\n            validateNaturalInteger,\n            firstParamCannotBeUsedWithSecond('minDeviationTime', 'arriveAt'),\n            requiresDependantParameter('minDeviationTime', 'supportingPoints')\n        ]\n    },\n\n    /* eslint-disable max-len */\n    /**\n     * Can be used to set supporting points for constructing (or reconstructing) a route and for\n     * calculating alternative routes to a base route. The provided sequence of supporting points\n     * is used as input for route reconstruction.\n     *\n     * Pseudo examples:\n     * * If the base route is A > B and we include a supporting point C, the result will be A > C > B;\n     * * Supporting points can be used to entirely reconstruct a route you previously had:\n     * Let us illustrate the problem. To go from A > B you received A > C > D > E > B. If later, you try to generate\n     * the same route (A > B), you might get different middle points. So, if you need to generate the exact same route\n     * you previously had you can do something like routing().locations(A, B).supportingPoints(C, D, E)\n     *\n     * You can use one of the following input formats to define the supporting points:\n     * * String: '4.8,52.3' or '4.8,52.3:4.87,52.37'\n     * * String[]: ['4.8,52.3:4.87,52.37', '4.8,52.3:4.87,52.37']\n     * * Object: {lat: 52.3, lon: 4.8} or {lat: 53.3, lng: 5.8} or {x: 53.3, y: 5.8} or {latitude: 53.3, longitude: 5.8}\n     * * Object[]: [{lat: 52.3, lon: 4.8}] or [{lat: 53.3, lng: 5.8}]\n     *\n     * How 'Supporting Points' differ from 'Waypoints?' - Waypoints are points where the calculated route will go through, but\n     * the resulting route might be different from search to search. The waypoints order might not necessarilly be respected\n     * when calculating the best route. Finally, there is a limit to the number of waypoints you can use in a route calculation.\n     * Supporting points can be used to entirely contruct a previous route, or parts of it, using the previously generated points.\n     * This means that there is no limit to the number of points, and the order of these points will be respected.</br></br>\n     *\n     * <b>Note:</b> Please keep in mind, that `supportingPoints` and 'Waypoints' (meaning more than two `locations`) are mutually\n     * exclusive. If you are using `supportingPoints` you can use only two `locations`.\n     *\n     * For more information please refer to the [Routing API Docs](CALCULATE_ROUTE_URL)\n     *\n     * @attribute supportingPoints\n     * @param {String|String[]|Object|Object[]} [options.supportingPoints] Supporting points for route calculation.\n     * @example\n     * ```js\n     * tt.services.routing({\n     *      locations: '4.8,52.3:4.87,52.37',\n     *      supportingPoints: ['-7.164026,39.319843', '-6.16632,39.342266']\n     * })\n     *   .then(function(routeGeoJson) {\n     *     console.log(routeGeoJson);\n     *   });\n     * ```\n     */\n    /* eslint-enable max-len */\n    supportingPoints: {\n        validators: [validateSupportingPoints],\n        converters: [convertSupportingPoints],\n        application: parameterApplications.POST\n    },\n\n    /**\n     * Specifies which of the section types is reported in the route response.\n     *\n     * Possible values:\n     * - `carTrain`, `ferry`, `tunnel` or `motorway`: get\n     * sections if the route includes car trains, ferries, tunnels, or motorways.\n     * - pedestrian: sections which are only suited for pedestrians.\n     * - tollRoad: sections which require a toll to be payed.\n     * - tollVignette: sections which require a toll vignette to be present.\n     * - country: countries the route has parts in.\n     * - carpool: sections of the route that require use of carpool (HOV/High Occupancy Vehicle) lanes.\n     * - urban: sections of the route that are located within urban areas.\n     * - unpaved: sections of the route that are unpaved.\n     * - travelMode: sections in relation to the request parameter 'travelMode'.\n     *\n     * The default value is travelMode.\n     * @attribute sectionType\n     * @param {String|String[]} [options.sectionType] An array of section types.\n     */\n    sectionType: {\n        validators: [validateArrayOfValues([\n            'carTrain', 'country', 'ferry', 'motorway', 'pedestrian', 'tollRoad', 'tollVignette',\n            'travelMode', 'tunnel', 'traffic', 'carpool', 'urban', 'unpaved'\n        ], 'sectionType')],\n        converters: [convertArrayOfStrings]\n    }\n};\n\nexport function getRoutingParameters(fieldsToSkip) {\n    routingParameters = extend(routingParameters, commonRoutingParameters);\n    const result = clone(routingParameters);\n    if (fieldsToSkip instanceof Array) {\n        fieldsToSkip.forEach(function(field) {\n            delete result[field];\n        });\n    }\n\n    return result;\n}\n","/* eslint-disable max-len */\n/**\n * Calculates a route between two locations using the TomTom\n * [Routing API](CALCULATE_ROUTE_URL);\n *\n * Parameters need to be passed to the constructor.\n *\n * ### The types used in the Routing service:\n *  - point - longitude, latitude pair (in EPSG4326 projection), with the following constraints:\n *    - Longitude values must be in the range -180..+180 inclusive.\n *    - Latitude values must be in the range -90..+90 inclusive.\n *    - Example: 4.89406, 52.37245\n *\n *  - circle - A circle with a center point and a radius (in meters).\n *    - The radius must be a positive integer with the maximum value of 20050000.\n *    - Note that larger integer values will not be rejected but lowered to the maximum value.\n *    - Example: circle(4.89406,52.37245,10000)\n *\n *  - location - A point or a circle.\n *    - Example: 4.89406,52.37245  circle(4.89406,52.37245,10000)\n *\n *  - dateTime - A date and time specified in RFC-3339 format with an optional time zone offset.\n *    - Example: 1996-12-19T16:39:57  1996-12-19T16:39:57-08:00\n *\n * ### Response\n * This service extends the API response by providing the following methods:\n * * `toGeoJson()`, converts route data into a\n * FeatureCollection of <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.4\">LineString</a>\n * or <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.5\">MultiLineString</a> geometries.\n * * `toRouteSectionsCollection()`, provides an array of FeatureCollections. Each FeatureCollection consists of\n * <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.4\">LineStrings </a> representing segments\n * of the route. Take a look at\n * <a target=\"_blank\"  rel=”noopener”\n * href=\"https://developer.tomtom.com/maps-sdk-web-js/functional-examples#examples,code,route-sections.html\">\n * Route sections example</a> to see it in action.\n * * `getTrackingId()`, returns the `Tracking-ID` associated with the request.\n *\n * To read more about services responses take a look at {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n * or dive into <a target=\"_blank\"  rel=”noopener”\n * href=\"https://developer.tomtom.com/maps-sdk-web-js/functional-examples#examples,code,static-route.html\">\n * Static route example</a> code.\n *\n * @class calculateRoute\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses CommonRoutingParameters\n * @uses RoutingParameters\n * @uses BatchMixin\n * @uses TrackingIdMixin\n * @uses ReturnsToGeoJsonMixin\n * @uses AbortSignalMixin\n * @constructor\n * @param {Object|Array} [options] Options to be passed to the routing call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n * @example\n * ```js\n * tt.services.calculateRoute({\n *   key: <Your API key>,\n *   locations: '4.8,52.3:4.87,52.37'\n * }).then(function(routeData) {\n *     console.log(routeData.toGeoJson());\n *   });\n * ```\n */\n/* eslint-enable max-len */\n/* jshint nomen:false */\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {calculateRouteModel} from '../../model/routing/calculateRoute';\nimport {batchCalculateRouteModel} from '../../model/routing/batchCalculateRoute';\nimport {getRoutingParameters} from './routingParameters';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory,\n    batchRequestServiceFactory,\n    serviceFactory\n} from '../../core';\n\nexport function calculateRoute(options, additionalOptions) {\n    const fields = getRoutingParameters();\n    const maxNoOfElementsInBatchRequest = 100;\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('routingEndpoint'));\n    const batchRequest = batchRequestServiceFactory(maxNoOfElementsInBatchRequest, {\n        batchSync: endpoints.resolve('batchSyncRoutingEndpoint'),\n        batch: endpoints.resolve('batchRoutingEndpoint'),\n        single: endpoints.resolve('batchRoutingQueryEndpoint')\n    });\n\n    function handleServiceCall(data, abortSignal) {\n        return singleRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, calculateRouteModel));\n    }\n    function handleBatchServiceCall(data, abortSignal) {\n        return batchRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, batchCalculateRouteModel));\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.ROUTING,\n        'calculateRoute',\n        handleServiceCall,\n        handleBatchServiceCall\n    )(options, additionalOptions);\n}\n","import {\n    oneOfValue as validateOneOfValue, numberInInterval as validateNumberInInterval,\n    chargingModes as validateChargingModes\n} from '../validators';\nimport {\n    constantSpeedConsumption, floatAndEngineType, chargeParameter,\n    requiresDependantParameter, consumptionRecuperationAltitudeParameter\n} from '../postValidators';\nimport {constantSpeedConsumption as convertConstantSpeedConsumption} from '../converters';\nimport {getRoutingParameters} from './routingParameters';\nimport parameterApplications from '../../common/parameterApplications';\nimport {extend} from '../utils';\n\n/**\n * @private\n * @class LongDistanceEVRoutingParameters\n * @module Services\n */\n\nconst fieldsToSkip = ['arriveAt', 'travelMode', 'computeTravelTimeFor', 'alternativeType',\n    'maxAlternatives', 'instructionsType', 'language', 'computeBestOrder', 'routeRepresentation',\n    'supportingPoints', 'minDeviationDistance', 'minDeviationTime', 'constantSpeedConsumptionInLitersPerHundredkm',\n    'currentFuelInLiters', 'fuelEnergyDensityInMJoulesPerLiter', 'hilliness', 'windingness', 'routeType',\n    'vehicleEngineType', 'currentChargeInkWh', 'maxChargeInkWh', 'constantSpeedConsumptionInkWhPerHundredkm'];\n\nconst extendedFields = {\n    /* eslint-disable max-len */\n    /**\n     * Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the\n     * vehicle accelerates (i.e., KineticEnergyGained/ChemicalEnergyConsumed).\n     * ChemicalEnergyConsumed is obtained by converting consumed fuel to chemical energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute accelerationEfficiency\n     * @param {Number} [options.accelerationEfficiency]\n     */\n    /**\n     * List of 3-character ISO 3166-1 alpha-3 country codes of countries in which\n     * all toll roads with vignettes are to be avoided.\n     * Toll roads with vignettes in countries not in the list are unaffected.\n     * It is an error to specify both avoidVignette and allowVignette.\n     * @attribute avoidVignette\n     * @param {String|String[]} [options.avoidVignette] An array of country codes.\n     * @throws {TypeError} If the given argument cannot be converted into a valid value.\n     */\n    /**\n     * Specifies the amount of power consumed for sustaining auxiliary systems in kilowatts (kW).\n     * It can be used to specify consumption due to devices and systems such as AC systems, radio, heating, etc.\n     * @attribute auxiliaryPowerInkW\n     * @param {Number} [options.auxiliaryPowerInkW]\n     */\n    auxiliaryPowerInkW: {\n        validators: [\n            floatAndEngineType('electric', 'auxiliaryPowerInkW')\n        ]\n    },\n    /**\n     * Specifies something that the route calculation should try to avoid when determining the route. Can be\n     * specified multiple times. Possible values:\n     * *    `tollRoads`: avoids toll roads.\n     * *    `motorways`: avoids motorways.\n     * *    `ferries`: avoids ferries.\n     * *    `unpavedRoads`: avoids unpaved roads.\n     * *    `carpools`: avoids routes that require use of a carpool (HOV/ High Occupancy Vehicle) lanes.\n     * *    `alreadyUsedRoads`: avoids using the same road multiple times.\n     *\n     * Most useful in conjunction with `routeType=thrilling`.\n     *\n     * @attribute avoid\n     * @param {Array|String} [options.avoid] Specifies something that the route calculation should try to avoid when\n     *     determining the route.\n     */\n    /**\n     * Supported shapes include rectangles.\n     * Can contain one of each supported shapes element.\n\n     * @example\n     * ```js\n     * tt.services.calculateRoute({\n     *      locations: '52.37173,4.91015:52.36357,4.898046255',\n     *      avoidAreas: [{\n     *      southWestCorner: {latitude: 52.36391, longitude:4.90106},\n     *      northEastCorner: {latitude: 52.36554, longitude:4.90767}\n     * }]);\n     * ```\n     * Supported point formats:\n     * - 'lat,lon'\n     * - {lat:111, lon:111}\n     * - {lat:111, lng:111}\n     * - {latitude:111, longitude:111}\n     * - {x:111, y:111}\n     * - {lat: function(), lng:function()}\n     *\n     * @attribute avoidAreas\n     * @param {Object[]} [options.avoidAreas] A list of shapes to avoid for planning routes.\n     * @throws {TypeError} If the given argument cannot be converted to a valid value.\n     */\n    /**\n     * List of 3-character ISO 3166-1 alpha-3 country codes of countries in which\n     * all toll roads with vignettes are to be avoided.\n     * Toll roads with vignettes in countries not in the list are unaffected.\n     * It is an error to specify both avoidVignette and allowVignette.\n     * @attribute avoidVignette\n     * @param {String|String[]} [options.avoidVignette] An array of country codes.\n     * @throws {TypeError} If the given argument cannot be converted into a valid value.\n     */\n    /**\n     * Specifies the speed-dependent component of consumption.\n     * Provided as an unordered list of speed/consumption-rate pairs. The list defines points\n     * on a consumption curve.\n     * Consumption rates for speeds not in the list are found as follows:\n     * *    By linear interpolation, if the given speed lies in between two speeds in the list.\n     * *    By linear extrapolation otherwise, assuming a constant (ΔConsumption/ΔSpeed) determined by\n     * the nearest two points in the list.\n     *\n     * The list must contain between 1 and 25 points (inclusive), and may not contain duplicate points\n     * for the same speed. If it only contains a single point, then the consumption rate of that point\n     * is used without further processing. Consumption specified for the largest speed must be greater\n     * than or equal to that of the penultimate highest speed.\n     * This ensures that extrapolation does not lead to negative consumption rates.\n     * Similarly, consumption values specified for the two lowest speeds in the list cannot lead to a\n     * negative consumption rate for any lower speed.\n     * The minimum and maximum values described here refer to the valid range for the consumption values\n     * (expressed in kWh/100km).\n     * @attribute constantSpeedConsumptionInkWhPerHundredkm\n     * @param {Array} options.constantSpeedConsumptionInkWhPerHundredkm Colon-delimited list of\n     * ElectricConstantSpeedConsumptionPairs, e.g., an array of such pairs \"60,7\".\n     */\n    constantSpeedConsumptionInkWhPerHundredkm: {\n        validators: [\n            constantSpeedConsumption('electric')\n        ],\n        converters: [convertConstantSpeedConsumption],\n        required: true\n    },\n    /**\n     * Specifies the current electric energy supply in kilowatt hours (kWh).\n     * @attribute currentChargeInkWh\n     * @param {Number} options.currentChargeInkWh\n     */\n    currentChargeInkWh: {\n        validators: [\n            chargeParameter('currentChargeInkWh', 'maxChargeInkWh')\n        ],\n        required: true\n    },\n    /**\n     * Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the\n     * vehicle decelerates (i.e., ChemicalEnergySaved/KineticEnergyLost).\n     * ChemicalEnergySaved is obtained by converting saved (not consumed) fuel to energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute decelerationEfficiency\n     * @param {Number} [options.decelerationEfficiency]\n     */\n    /**\n     * The date and time of departure from the origin point.\n     * Departure times, apart from now, must be specified as a dateTime.\n     * When a time zone offset is not specified, it will be assumed to be that of the origin point.\n     * The departAt value must be in the future. The departAt parameter cannot be used in conjunction with\n     * arriveAt.\n     *\n     * @attribute departAt\n     * @param {String} [options.departAt] The properly formatted date with the time or 'now' value. Date\n     * cannot be in the past and has to follow ISO 8601 standard.\n     */\n    /**\n     * Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the\n     * vehicle loses elevation (i.e., ChemicalEnergySaved/PotentialEnergyLost).\n     * ChemicalEnergySaved is obtained by converting saved (not consumed) fuel to energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute downhillEfficiency\n     * @param {Number} [options.downhillEfficiency]\n     */\n    /**\n     * Specifies the maximum electric energy supply in kilowatt hours (kWh) that may be stored in\n     * the vehicle's battery.\n     * @attribute maxChargeInkWh\n     * @param {Number} options.maxChargeInkWh\n     */\n    maxChargeInkWh: {\n        validators: [\n            chargeParameter('maxChargeInkWh', 'currentChargeInkWh')\n        ],\n        required: true\n    },\n    /**\n     * Represents the type of protocol used to perform the service call.\n     *\n     * @attribute protocol\n     * @param {String} [options.protocol] Protocol type, one of `http` or `https`.\n     */\n    /**\n     * Specifies which data should be reported for diagnosis purposes.\n     *\n     * Possible values: _effectiveSettings_\n     * Reports the effective parameters or data used when calling the API.\n     *\n     * In the case of defaulted parameters, the default will be reflected where the parameter was not specified\n     * by the caller.\n     *\n     * @attribute report\n     * @param {String} [options.report] The level of a verbose answer from the service, useful for debugging purposes.\n     */\n    /**\n     * Specifies which of the section types is reported in the route response.\n     *\n     * Possible values:\n     * - `carTrain`, `ferry`, `tunnel` or `motorway`: get\n     * sections if the route includes car trains, ferries, tunnels, or motorways.\n     * - pedestrian: sections which are only suited for pedestrians.\n     * - tollRoad: sections which require a toll to be payed.\n     * - tollVignette: sections which require a toll vignette to be present.\n     * - country: countries the route has parts in.\n     * - travelMode: sections in relation to the request parameter 'travelMode'.\n     *\n     * The default value is travelMode.\n     * @attribute sectionType\n     * @param {String|String[]} [options.sectionType] An array of section types.\n     */\n    /**\n     * Possible values:\n     * - `true` (do consider all available traffic information during routing)\n     * - `false` (ignores current traffic data during routing) Note that although the current traffic data is\n     *   ignored during routing, the effect of historic traffic on effective road speeds is still incorporated.\n     *\n     * The default is true.\n     *\n     * @attribute traffic\n     * @param {Boolean} [options.traffic=true] A boolean flag determines if traffic data should be used to calculate the\n     *     route.\n     */\n    /**\n     * Weight per axle of the vehicle in kg (kilograms). A value of 0 means that weight restrictions per axle are not\n     * considered during route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleAxleWeight\n     * @param {Number} [options.vehicleAxleWeight] The vehicle axle weight in kg (kilograms).\n     */\n    /**\n     * The vehicle is used for commercial purposes and thus may not be allowed to drive on some roads. This\n     * parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleCommercial\n     * @param {Boolean} [options.vehicleCommercial] True if the vehicle is used for commercial purposes.\n     */\n    /**\n     * Engine type of the vehicle. This parameter is currently only considered for travelMode truck. Valid\n     * options are: `electric`\n     *\n     * @attribute vehicleEngineType\n     * @param {String} options.vehicleEngineType The vehicle engine type.\n     */\n    vehicleEngineType: {\n        validators: [validateOneOfValue(['electric'], 'vehicleEngineType')],\n        required: true\n    },\n    /**\n     * The directional heading of the vehicle in degrees starting at true North and continuing in a clockwise\n     * direction. North is 0 degrees, East is 90 degrees, South is 180 degrees, West is 270 degrees. Possible\n     * values are 0-359.\n     *\n     * @attribute vehicleHeading\n     * @param {Number} [options.vehicleHeading] The angle in which the vehicle is heading.\n     */\n    /**\n     * Height of the vehicle in meters. A value of 0 means that height restrictions are not considered\n     * during route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleHeight\n     * @param {Number} [options.vehicleHeight] The vehicle height in meters.\n     */\n    /**\n     * Length of the vehicle in meters. A value of 0 means that length restrictions are not considered during\n     * route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleLength\n     * @param {Number} [options.vehicleLength] The vehicle length in meters.\n     */\n    /**\n     * Types of cargo that may be classified as hazardous materials and restricted from some roads. Available\n     * vehicleLoadType values are US Hazmat classes 1 through 9, plus generic classifications for use in other\n     * countries.\n     *\n     * __Use these for routing in US__\n     * * `USHazmatClass1 Explosives`\n     * * `USHazmatClass2 Compressed gas`\n     * * `USHazmatClass3 Flammable liquids`\n     * * `USHazmatClass4 Flammable solids`\n     * * `USHazmatClass5 Oxidizers`\n     * * `USHazmatClass6 Poisons`\n     * * `USHazmatClass7 Radioactive`\n     * * `USHazmatclass8 Corrosives`\n     * * `USHazmatClass9 Miscellaneous`\n     *\n     * __Use these for routing in all other countries__\n     * * `otherHazmatExplosive Explosives`\n     * * `otherHazmatGeneral Miscellaneous`\n     * * `otherHazmatHarmfulToWater Harmful to water`\n     *\n     * This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleLoadType\n     * @param {Array|String} [options.vehicleLoadType] The array of truck cargo classification.\n     */\n    /**\n     * Maximum speed of the vehicle in km/hour. A value of 0 means that an appropriate value for the vehicle\n     * will be determined and applied during route planning. A non-zero value may be overridden during route\n     * planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleMaxSpeed\n     * @param {Number} [options.vehicleMaxSpeed] The maximal allowed vehicle speed in km/h.\n     */\n    /**\n     * Weight of the vehicle in kg. A value of 0 means that weight restrictions are not considered during route\n     * planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleWeight\n     * @param {Number} [options.vehicleWeight] The vehicle weight in kg (kilograms).\n     */\n    /**\n     * Width of the vehicle in meters. A value of 0 means that width restrictions are not considered during\n     * route planning. This parameter is currently only considered for travelMode truck.\n     *\n     * @attribute vehicleWidth\n     * @param {Number} [options.vehicleWidth] The vehicle width in meters.\n     */\n    /**\n     * Specifies the efficiency of converting chemical energy stored in fuel to potential energy\n     * when the vehicle gains elevation (i.e., PotentialEnergyGained/ChemicalEnergyConsumed).\n     * ChemicalEnergyConsumed is obtained by converting consumed fuel to chemical energy using\n     * fuelEnergyDensityInMJoulesPerLiter.\n     * @attribute uphillEfficiency\n     * @param {Number} [options.uphillEfficiency]\n     */\n    /**\n     * @attribute chargingModes\n     * @param {Array} options.chargingModes A non-empty list of at most 10 `chargingModes`, which the vehicle is\n     * able to use to charge. Each `chargingConnection` appears in at most one `chargingMode`.\n     */\n    chargingModes: {\n        validators: [validateChargingModes],\n        required: true,\n        application: parameterApplications.POST\n    },\n    /**\n     * @attribute minChargeAtDestinationInkWh\n     * @param {Number} options.minChargeAtDestinationInkWh The battery level upon arrival at the destination\n     * of the resulting route will be at least this much.\n     * *Maximum value:* `maxChargeInkWh`\n     */\n    minChargeAtDestinationInkWh: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)],\n        required: true\n    },\n    /**\n     * @attribute minChargeAtChargingStopsInkWh\n     * @param {Number} options.minChargeAtChargingStopsInkWh The battery level upon arrival at each intermediate\n     * charging stop of the resulting route will be at least this much.\n     * *Maximum value:* `0.2 × maxChargeInkWh`\n     */\n    minChargeAtChargingStopsInkWh: {\n        validators: [validateNumberInInterval(0, Number.MAX_VALUE)],\n        required: true\n    },\n    /**\n     * Specifies the electric energy in kWh gained by the vehicle through losing 1000 meters of elevation.\n     * * Note: It must be paired with `consumptionInkWhPerkmAltitudeGain`.\n     * * Note: It cannot be used with `accelerationEfficiency`, `decelerationEfficiency`, `uphillEfficiency`\n     * or `downhillEfficiency`.\n     *\n     * Minimum value: 0.0\n     * Maximum value: `consumptionInkWhPerkmAltitudeGain`\n     *\n     * @attribute recuperationInkWhPerkmAltitudeLoss\n     * @param {Number} [options.recuperationInkWhPerkmAltitudeLoss] Electric energy in kWh\n     */\n    recuperationInkWhPerkmAltitudeLoss: {\n        validators: [\n            requiresDependantParameter(\n                'recuperationInkWhPerkmAltitudeLoss',\n                'consumptionInkWhPerkmAltitudeGain'\n            ),\n            consumptionRecuperationAltitudeParameter\n        ]\n    },\n\n    /**\n     * Specifies the electric energy in kWh consumed by the vehicle through gaining 1000 meters of elevation.\n     * * Note: It must be paired with `recuperationInkWhPerkmAltitudeLoss`.\n     * * Note: It cannot be used with `accelerationEfficiency`, `decelerationEfficiency`, `uphillEfficiency`\n     * or `downhillEfficiency`.\n     *\n     * Minimum value: `vehicleAdrTunnelRestrictionCode`\n     * Maximum value: 500.0\n     *\n     * @attribute consumptionInkWhPerkmAltitudeGain\n     * @param {Number} [options.consumptionInkWhPerkmAltitudeGain] Electric energy in kWh\n     */\n    consumptionInkWhPerkmAltitudeGain: {\n        validators: [\n            requiresDependantParameter(\n                'consumptionInkWhPerkmAltitudeGain',\n                'recuperationInkWhPerkmAltitudeLoss'\n            ),\n            consumptionRecuperationAltitudeParameter\n        ]\n    },\n\n    /**\n     * If specified, the vehicle is subject to ADR tunnel restrictions.\n     * * Vehicles with code B are restricted from roads with ADR tunnel categories B, C, D, and E.\n     * * Vehicles with code C are restricted from roads with ADR tunnel categories C, D, and E.\n     * * Vehicles with code D are restricted from roads with ADR tunnel categories D and E.\n     * * Vehicles with code E are restricted from roads with ADR tunnel category E.\n     * * If `vehicleAdrTunnelRestrictionCode` is not specified, no ADR tunnel restrictions apply.\n     *\n     * Notes:\n     * * If `travelMode` is pedestrian or bicycle, `vehicleAdrTunnelRestrictionCode` is not considered.\n     * * The `vehicleAdrTunnelRestrictionCode` and `vehicleLoadType` parameters are independent; please\n     * provide both if applicable.\n     *\n     * @attribute vehicleAdrTunnelRestrictionCode\n     * @param {String} [options.vehicleAdrTunnelRestrictionCode] An ADR restriction code\n     * @throws {TypeError} If the given argument is not a valid ADR restriction code.\n     */\n    vehicleAdrTunnelRestrictionCode: {\n        validators: [validateOneOfValue(['B', 'C', 'D', 'E'], 'vehicleAdrTunnelRestrictionCode')]\n    },\n\n    /**\n     * The travel mode for the requested route.\n     * The only possible value is `car`.\n     *\n     * @attribute travelMode\n     * @param {String} [options.travelMode] The primary means of transportation to be used while routing.\n     */\n    travelMode: {\n        validators: [validateOneOfValue(['car'], 'travel mode')]\n    }\n};\n\nexport function getLongDistanceEVRoutingParameters() {\n    const fields = getRoutingParameters(fieldsToSkip);\n    return extend(fields, extendedFields);\n}\n","/* eslint-disable max-len */\n/**\n * The Long Distance EV Routing service calculates a route between a given origin and\n * destination. The route contains charging stops that have been added automatically\n * based on the vehicle's consumption and charging model.\n *\n * * Each charging stop results in an additional leg in the route response.\n * * Each additional leg contains a `chargingInformationAtEndOfLeg` element in its leg summary.\n * * Both the route summary and the leg summary include a `remainingChargeAtArrivalInkWh` element.\n * * The route summary includes a `totalChargingTimeInSeconds` element.\n *\n * The `chargingInformationAtEndOfLeg` field consists of:\n *\n * * target battery charge\n * * charging time\n * * details about the charging stop\n *\n *  ### The types used in the Long Distance EV Routing service:\n *\n *  - **chargingMode** - An object that contains `chargingConnections` and a `chargingCurve` that describes the\n    charging behavior of the vehicle using the specified charging connections.\n *\n *  - **chargingConnections** - A non-empty array of at most 20 unique `chargingConnections` which\n *  result in the same charging curve.\n *\n *  - **chargingConnection** - Contains one `facilityType` and one `plugType` which are compatible\n *  with the vehicle.\n *\n *      ```js\n *      {\n *          \"facilityType\" : \"Charge_380_to_480V_3_Phase_at_32A\",\n *          \"plugType\" : \"IEC_62196_Type_2_Outlet\"\n *      }\n *      ```\n *\n *  - **facilityType** - A string matching a `facilityType` in the values table, which\n *  can be found in <a href=\"https://developer.tomtom.com/routing-api/routing-api-documentation/long-distance-ev-routing\">\n *  Distance EV Routing API documentation</a>.\n *\n *  - **plugType** - A string matching a `plugType` in the values table, which\n * can be found in <a href=\"https://developer.tomtom.com/routing-api/routing-api-documentation/long-distance-ev-routing\">\n * Distance EV Routing API documentation</a>.\n *\n *  - **chargingCurve** - A piecewise-linear function which maps a target charge level to\n *  the time it takes to charge an empty battery to this level, that is used to compute charging times of\n * the vehicle. It has to follow these rules:\n *      1. It is given by a sequence of at most 10 non-duplicate `chargingCurveSupportPoints` that are totally,\n *      increasingly ordered in `timeToChargeInSeconds` and `chargeInkWh`.\n *      2. The last `chargeInkWh` is `maxChargeInkWh`.\n *      3. The curve is given by connecting the given points in order after adding the first point:\n *\n *\n *  - **chargingCurveSupportPoint** - A supporting point of a charging curve consisting\n * of `chargeInkWh` and `timeToChargeInSeconds` such that the time it takes to charge the battery from\n * `0` kWh to `chargeInkWh` kWh is given by `timeToChargeInSeconds`.\n *\n *      ```js\n *      {\n *          \"chargeInkWh\" : 6,\n *          \"timeToChargeInSeconds\" : 300\n *      }\n *      ```\n *\n * - **timeToChargeInSeconds** - A time span in seconds. A non-negative integer.\n *\n * - **chargeInkWh** - A battery charge level in kWh. A float in the range (0, `maxChargeInkWh`>.\n *\n * ### Response\n * This service extends the API response by providing the following methods:\n * * `toGeoJson()`, converts route data into\n * a Feature Collection of <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.4\">LineString</a>\n * or <a target=\"_blank\" rel=”noopener” href=\"https://tools.ietf.org/html/rfc7946#section-3.1.5\">MultiLineString</a> geometries.\n * * `getTrackingId()`, returns the `Tracking-ID` associated with the request.\n *\n * To read more about services responses take a look at {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @class longDistanceEVRouting\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses CommonRoutingParameters\n * @uses LongDistanceEVRoutingParameters\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n * @constructor\n * @param {Object|Array} [options] Options to be passed to the routing call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n * @example\n * ```js\n * tt.services.longDistanceEVRouting({\n *   key: <Your API key>,\n *   locations: '4.878,52.367:4.879,52.367',\n *   vehicleEngineType: 'electric',\n *   avoid: 'unpavedRoads',\n *   constantSpeedConsumptionInkWhPerHundredkm: ['50.0,6.5', '100.0,8.5'],\n *   currentChargeInkWh: 10,\n *   maxChargeInkWh: 40,\n *   minChargeAtDestinationInkWh: 5.2,\n *   minChargeAtChargingStopsInkWh: 1.5,\n *   chargingModes: [\n *       {\n *           chargingConnections: [\n *               {\n *                   facilityType: 'Charge_380_to_480V_3_Phase_at_32A',\n *                   plugType: 'IEC_62196_Type_2_Outlet'\n *               }\n *           ],\n *           chargingCurve: [\n *               {\n *                   chargeInkWh: 6,\n *                   timeToChargeInSeconds: 300\n *               },\n *               {\n *                   chargeInkWh: 12,\n *                   timeToChargeInSeconds: 720\n *               }\n *           ]\n *       }\n *   ]\n * }).then(function(routeData) {\n *     console.log(routeData.toGeoJson());\n *   });\n * ```\n */\n/* eslint-enable max-len */\n/* jshint nomen:false */\nimport { SERVICE_TYPES } from 'Core/serviceTypes';\nimport {getLongDistanceEVRoutingParameters} from './longDistanceEVRoutingParameters';\nimport {calculateRouteModel} from '../../model/routing/calculateRoute';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    singleRequestServiceFactory,\n    serviceFactory\n} from '../../core';\n\nexport function longDistanceEVRouting(options, additionalOptions) {\n    const fields = getLongDistanceEVRoutingParameters();\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('longDistanceEVRoutingEndpoint'));\n    const handleServiceCall = (data, abortSignal) => {\n        return singleRequest(fields, data, abortSignal)\n            .then(response => modelResponse(response, calculateRouteModel));\n    };\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.ROUTING,\n        'longDistanceEVRouting',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","export function matrixRoutingModel(data) {\n    if (data.error) {\n        return { error: data.error };\n    }\n    if (data.matrix) {\n        return data;\n    }\n    return null;\n}\n","/* eslint-disable max-len */\nimport {\n    arrayOf as validateArrayOf, objectOf as validateObjectOf, latitude as validateLatitude,\n    longitude as validateLongitude, waitTimeSeconds as validateWaitTimeSeconds\n} from '../validators';\nimport {\n    arrayOf as convertArrayOf, latitude as convertLatitude, longitude as convertLongitude,\n    objectOf as convertObjectOf\n} from '../converters';\n\nimport {getRoutingParameters} from './routingParameters';\nimport {clone} from '../utils';\nimport parameterApplications from '../../common/parameterApplications';\n\n/**\n * Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the\n * vehicle accelerates (i.e., KineticEnergyGained/ChemicalEnergyConsumed).\n * ChemicalEnergyConsumed is obtained by converting consumed fuel to chemical energy using\n * fuelEnergyDensityInMJoulesPerLiter.\n * @attribute accelerationEfficiency\n * @param {Number} [options.accelerationEfficiency]\n*/\n\n/**\n * Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters\n *  per hour. It can be used to specify consumption due to devices and systems such as AC systems, radio,\n * heating, etc.\n * @attribute auxiliaryPowerInLitersPerHour\n * @param {Number} [options.auxiliaryPowerInLitersPerHour]\n*/\n\n/**\n * Specifies the amount of power consumed for sustaining auxiliary systems in kilowatts (kW).\n * It can be used to specify consumption due to devices and systems such as AC systems, radio, heating, etc.\n * @attribute auxiliaryPowerInkW\n * @param {Number} [options.auxiliaryPowerInkW]\n*/\n\n/**\n * Specifies the speed-dependent component of consumption.\n * Provided as an unordered list of speed/consumption-rate pairs. The list defines points\n * on a consumption curve.\n * Consumption rates for speeds not in the list are found as follows:\n * *    By linear interpolation, if the given speed lies in between two speeds in the list.\n * *    By linear extrapolation otherwise, assuming a constant (ΔConsumption/ΔSpeed) determined by\n * the nearest two points in the list.\n *\n * The list must contain between 1 and 25 points (inclusive), and may not contain duplicate points\n * for the same speed. If it only contains a single point, then the consumption rate of that point\n * is used without further processing. Consumption specified for the largest speed must be greater\n * than or equal to that of the penultimate highest speed.\n * This ensures that extrapolation does not lead to negative consumption rates.\n * Similarly, consumption values specified for the two lowest speeds in the list cannot lead to a\n * negative consumption rate for any lower speed.\n * The minimum and maximum values described here refer to the valid range for the consumption values\n * (expressed in kWh/100km).\n * @attribute constantSpeedConsumptionInkWhPerHundredkm\n * @param {Array} [options.constantSpeedConsumptionInkWhPerHundredkm] Colon-delimited list of\n * ElectricConstantSpeedConsumptionPairs, e.g., an array of such pairs \"60,7\".\n*/\n\n/**\n * Specifies the speed-dependent component of consumption.\n * Provided as an unordered list of speed/consumption-rate pairs. The list defines points on a\n * consumption curve.\n * Consumption rates for speeds not in the list are found as follows:\n *   *  By linear interpolation, if the given speed lies in between two speeds in the list.\n *   *  By linear extrapolation otherwise, assuming a constant (ΔConsumption/ΔSpeed) determined by\n * the nearest two points in the list.\n *\n * The list must contain between 1 and 25 points (inclusive), and may not\n * contain duplicate points for the same speed. If it only contains a single point,\n * then the consumption rate of that point is used without further processing.\n * Consumption specified for the largest speed must be greater than or equal to that of the\n * penultimate highest speed. This ensures that extrapolation does not lead to negative consumption rates.\n * Similarly, consumption values specified for the two lowest speeds in the list cannot lead to a\n * negative consumption rate for any smaller speed.\n * The minimum and maximum values described here refer to the valid range for the consumption values\n * (expressed in l/100km).\n * @attribute constantSpeedConsumptionInLitersPerHundredkm\n * @param {Array} [options.constantSpeedConsumptionInLitersPerHundredkm] Colon-delimited list of\n * CombustionConstantSpeedConsumptionPairs, e.g., an array of such pairs \"60,7\".\n*/\n\n/**\n * Specifies the current electric energy supply in kilowatt hours (kWh).\n * @attribute currentChargeInkWh\n * @param {Number} [options.currentChargeInkWh]\n */\n\n/**\n * Specifies the current supply of fuel in liters.\n * @attribute currentFuelInLiters\n * @param {Number} [options.currentFuelInLiters]\n */\n\n/**\n * Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the\n * vehicle decelerates (i.e., ChemicalEnergySaved/KineticEnergyLost).\n * ChemicalEnergySaved is obtained by converting saved (not consumed) fuel to energy using\n * fuelEnergyDensityInMJoulesPerLiter.\n * @attribute decelerationEfficiency\n * @param {Number} [options.decelerationEfficiency]\n */\n\n/**\n * Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the\n * vehicle loses elevation (i.e., ChemicalEnergySaved/PotentialEnergyLost).\n * ChemicalEnergySaved is obtained by converting saved (not consumed) fuel to energy using\n * fuelEnergyDensityInMJoulesPerLiter.\n * @attribute downhillEfficiency\n * @param {Number} [options.downhillEfficiency]\n */\n\n/**\n * Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).\n * It is used in conjunction with the *Efficiency parameters for conversions between saved\n * or consumed energy and fuel.\n * For example, energy density is 34.2 MJ/l for gasoline, and 35.8 MJ/l for Diesel fuel.\n * @attribute fuelEnergyDensityInMJoulesPerLiter\n * @param {Number} [options.fuelEnergyDensityInMJoulesPerLiter]\n */\n\n/**\n * Specifies the maximum electric energy supply in kilowatt hours (kWh) that may be stored in\n * the vehicle's battery.\n * @attribute maxChargeInkWh\n * @param {Number} [options.maxChargeInkWh]\n */\n\n/**\n * Specifies the efficiency of converting chemical energy stored in fuel to potential energy\n * when the vehicle gains elevation (i.e., PotentialEnergyGained/ChemicalEnergyConsumed).\n * ChemicalEnergyConsumed is obtained by converting consumed fuel to chemical energy using\n * fuelEnergyDensityInMJoulesPerLiter.\n * @attribute uphillEfficiency\n * @param {Number} [options.uphillEfficiency]\n */\n\n/**\n * If specified, the vehicle is subject to ADR tunnel restrictions.\n * * Vehicles with code B are restricted from roads with ADR tunnel categories B, C, D, and E.\n * * Vehicles with code C are restricted from roads with ADR tunnel categories C, D, and E.\n * * Vehicles with code D are restricted from roads with ADR tunnel categories D and E.\n * * Vehicles with code E are restricted from roads with ADR tunnel category E.\n * * If `vehicleAdrTunnelRestrictionCode` is not specified, no ADR tunnel restrictions apply.\n *\n * Notes:\n * * If `travelMode` is pedestrian or bicycle, `vehicleAdrTunnelRestrictionCode` is not considered.\n * * The `vehicleAdrTunnelRestrictionCode` and `vehicleLoadType` parameters are independent; please\n * provide both if applicable.\n *\n * @attribute vehicleAdrTunnelRestrictionCode\n * @param {String} [options.vehicleAdrTunnelRestrictionCode] An ADR restriction code\n * @throws {TypeError} If the given argument is not a valid ADR restriction code.\n */\n\n/**\n * A setter and getter for the `routeType` attribute.\n *\n * Represents the type of route requested.\n *\n * Notes on specific values:\n *  - `fastest` returns the fastest route.\n *  - `shortest` returns the shortest route by distance.\n *  - `eco` routes balance economy and speed.\n *  - thrilling routes include interesting or challenging roads and use as few motorways as possible. You can\n * choose the level of turns included and also the degree of hilliness. See the hilliness and windingness\n * parameters to set this. There is a limit of 900km on routes planned with routeType=thrilling\n * The default value is fastest.\n *\n * @attribute routeType\n * @param {String} [options.routeType] The route type to be used during route calculation.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'traffic' attribute.\n * Possible values:\n * true (do consider all available traffic information during routing).\n * false (ignore current traffic data during routing). Note that although the current traffic data is\n * ignored during routing, the effect of historic traffic on effective road speeds is still incorporated.\n * The default is true.\n *\n * @attribute traffic\n * @param {String|Boolean} [options.traffic] A boolean flag to determine if traffic data should be used to calculate the\n *     route.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the `avoid` attribute.\n *\n * Specifies something that the route calculation should try to avoid when determining the route.\n * Can be specified multiple times. Possible values:\n *  - `tollRoads` avoids toll roads.\n *  - `motorways` avoids motorways.\n *  - `ferries` avoids ferries.\n *  - `unpavedRoads` avoids unpaved roads.\n *  - `carpools` avoids routes that require use of carpool (HOV/ High Occupancy Vehicle) lanes.\n *  - `alreadyUsedRoads` avoids using the same road multiple times.\n *\n * Most useful in conjunction with `routeType=thrilling`.\n *\n * @attribute avoid\n * @param {Array|String} [options.avoid] Specifies something that the route calculation should try to avoid when\n *     determining the route.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'departAt' attribute.\n * The date and time of departure from the origin point.\n * Departure times apart from now must be specified as a dateTime.\n * When a time zone offset is not specified, it will be assumed to be that of the origin point.\n * The departAt value must be in the future. The departAt parameter cannot be used in conjunction with\n * arriveAt.\n *\n * @attribute departAt\n * @param {String} [options.departAt] The properly formatted date with the time or 'now' value. Date cannot be in the\n *     past and has to follow ISO 8601 standard.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'arriveAt' attribute.\n * The date and time of arrival at the destination point.\n * It must be specified as a dateTime.\n * When a time zone offset is not specified it will be assumed to be that of the destination point.\n * The arriveAt value must be in the future. The arriveAt parameter cannot be used in conjunction with\n * departAt.\n *\n * @attribute arriveAt\n * @param {String} [options.arriveAt] The properly formatted date with a time value. Date cannot be in the past\n * and has to follow ISO 8601 standard.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'travelMode' attribute.\n * The mode of travel for the requested route. Possible values: _car, truck, taxi, bus, van, motorcycle,\n * bicycle, pedestrian_. Note that the requested travelMode may not be available for the entire route. Where\n * the requested travelMode is not available for a particular section, the <travelMode> element of the\n * response for that section will be 'other'.\n *\n * @attribute travelMode\n * @param {String} [options.travelMode] The primary means of transportation to be used while routing.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'hilliness' attribute.\n * The degree of hilliness for thrilling route. Possible values: low, normal, high.\n * This parameter can only be used in conjunction with routeType thrilling.\n *\n * @attribute hilliness\n * @param {String} [options.hilliness] The level of hilliness on a thrilling route.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'windingness' attribute.\n * The level of turns for thrilling route. Possible values: low, normal, high.\n * This parameter can only be used in conjunction with routeType thrilling.\n *\n * @attribute windingness\n * @param {String} [options.windingness] The level of windingness on a thrilling route.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'computeTravelTimeFor' attribute.\n * Specifies whether to return additional travel times using different types of traffic information (none,\n * historic, live) as well as the default best-estimate travel time. Possible values:\n * * none - do not compute additional travel times.\n * * all - compute travel times for all types of traffic information. Specifies all results in the fields\n * noTrafficTravelTimeInSeconds, historicTrafficTravelTimeInSeconds and\n * liveTrafficIncidentsTravelTimeInSeconds being included in the summaries in the route response.\n *\n * @attribute computeTravelTimeFor\n * @param {String} [options.computeTravelTimeFor] Setting `'all'` provides additional information regarding travel\n *     times.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for 'vehicleEngineType' attribute.\n * Engine type of the vehicle. This parameter is currently only considered for travelMode truck. Valid\n * options are: _combustion, electric_.\n *\n * @attribute vehicleEngineType\n * @param {String} [options.vehicleEngineType] The vehicle engine type.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'vehicleMaxSpeed' attribute.\n * Maximum speed of the vehicle in km/hour. A value of 0 means that an appropriate value for the vehicle\n * will be determined and applied during route planning. A non-zero value may be overridden during route\n * planning. This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleMaxSpeed\n * @param {Number} [options.vehicleMaxSpeed] The maximal allowed vehicle speed in km/h (kilometers per hour).\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for 'vehicleWeight' attribute.\n * Weight of the vehicle in kg. A value of 0 means that weight restrictions are not considered during route\n * planning. This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleWeight\n * @param {Number} [options.vehicleWeight] The vehicle weight in kg (kilograms).\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for 'vehicleAxleWeight' attribute.\n * Weight per axle of the vehicle in kg. A value of 0 means that weight restrictions per axle are not\n * considered during route planning. This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleAxleWeight\n * @param {Number} [options.vehicleAxleWeight] The vehicle axle wight in kg.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'vehicleLength' attribute.\n * Length of the vehicle in meters. A value of 0 means that length restrictions are not considered during\n * route planning. This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleLength\n * @param {Number} [options.vehicleLength] The vehicle length in meters.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'vehicleWidth' attribute.\n * Width of the vehicle in meters. A value of 0 means that width restrictions are not considered during\n * route planning. This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleWidth\n * @param {Number} [options.vehicleWidth] The vehicle width in meters.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'vehicleHeight' attribute.\n * Height of the vehicle in meters. A value of 0 means that height restrictions are not considered\n * during route planning. This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleHeight\n * @param {Number} [options.vehicleHeight] The vehicle height in meters.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'vehicleCommercial' attribute.\n * Vehicle is used for commercial purposes and thus may not be allowed to drive on some roads. This\n * parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleCommercial\n * @param {Boolean} [options.vehicleCommercial] True if the vehicle is used for commercial purposes.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\n/**\n * A setter and getter for the 'vehicleLoadType' attribute.\n * Types of cargo that may be classified as hazardous materials and restricted from some roads. Available\n * vehicleLoadType values are US Hazmat classes 1 through 9, plus generic classifications for use in other\n * countries.\n *\n * __Use these for routing in US__\n * * USHazmatClass1 Explosives\n * * USHazmatClass2 Compressed gas\n * * USHazmatClass3 Flammable liquids\n * * USHazmatClass4 Flammable solids\n * * USHazmatClass5 Oxidizers\n * * USHazmatClass6 Poisons\n * * USHazmatClass7 Radioactive\n * * USHazmatclass8 Corrosives\n * * USHazmatClass9 Miscellaneous\n *\n * __Use these for routing in all other countries__\n * * otherHazmatExplosive Explosives\n * * otherHazmatGeneral Miscellaneous\n * * otherHazmatHarmfulToWater Harmful to water\n *\n * This parameter is currently only considered for travelMode truck.\n *\n * @attribute vehicleLoadType\n * @param {Array|String} [options.vehicleLoadType] The array of truck cargo classifications.\n * @throws {TypeError} If the given argument cannot be converted to a valid value.\n */\n\nconst fieldsToSkip = ['locations', 'maxAlternatives', 'instructionsType',\n    'language', 'computeBestOrder', 'routeRepresentation', 'vehicleHeading', 'report',\n    'callback', 'minDeviationTime', 'minDeviationDistance', 'alternativeType',\n    'sectionType', 'supportingPoints', 'allowVignette', 'avoidAreas', 'batchMode',\n    'consumptionInkWhPerkmAltitudeGain', 'recuperationInkWhPerkmAltitudeLoss'\n];\n\nconst latLonFieldDescription = {\n    validators: [validateArrayOf({\n        point: {\n            validators: [validateObjectOf({\n                latitude: {\n                    validators: [validateLatitude],\n                    required: true\n                },\n                longitude: {\n                    validators: [validateLongitude],\n                    required: true\n                }\n            })]\n        }\n    })],\n    converters: [convertArrayOf({\n        point: {\n            converters: [convertObjectOf({\n                latitude: {\n                    converters: [convertLatitude],\n                    required: true\n                },\n                longitude: {\n                    converters: [convertLongitude],\n                    required: true\n                }\n            })]\n        }\n    })],\n    required: true,\n    application: parameterApplications.POST\n};\n\nexport function matrixParameters(fieldsToSkipProps) {\n    const fields = getRoutingParameters(fieldsToSkip);\n    /**\n     * A setter and getter for the 'origins' attribute.\n     * A set of origin locations represented by points (latitude/longitude object). At least one origin is required.\n     *\n     * @attribute origins\n     * @param {Array} [options.origins] A set of origin locations represented by points (latitude/longitude object).\n     * @throws {TypeError} If the given argument cannot be converted to a valid value.\n     */\n    fields.origins = latLonFieldDescription;\n\n    /**\n     * A setter and getter for the 'destinations' attribute.\n     * A set of destination locations represented by points (latitude/longitude object).\n     * At least one destination is required.\n     *\n     * @attribute destinations\n     * @param {Array} [options.destinations] A set of destination locations represented by points\n     * (latitude/longitude object).\n     * @throws {TypeError} If the given argument cannot be converted to a valid value.\n     */\n    fields.destinations = latLonFieldDescription;\n\n    /**\n     * This option lets you manually set how a matrix request should be performed. Otherwise we decide for you if you should\n     * use sync, async, or redirect mode. For a further explanation please refer to the Matrix Routing docs\n     * [here](MATRIX_ROUTING_URL).\n     *\n     * @attribute batchMode\n     * @param {String} [options.batchMode] Possible values: sync, async, redirect\n     */\n    fields.batchMode = {\n        application: parameterApplications.OTHER\n    };\n\n    /**\n     * Maximum waiting time for batch download response.\n     * This option only works with 'async' and 'redirect' batch modes. Accepts 120 or an integer between 5 and 60.\n     *\n     * @attribute waitTimeSeconds\n     * @param {Number} [options.waitTimeSeconds] Accepts 120 or an integer between 5 and 60.\n     */\n    fields.waitTimeSeconds = {\n        application: parameterApplications.QUERY,\n        validators: [validateWaitTimeSeconds]\n    };\n    const result = clone(fields);\n    if (fieldsToSkipProps instanceof Array) {\n        fieldsToSkipProps.forEach(function(field) {\n            delete result[field];\n        });\n    }\n\n    return result;\n}\n","/**\n * @deprecated\n *\n * The matrixRouting service has been deprecated.\n * <ul>\n * <li>This service will be withdrawn following a 12 months deprecation period.</li>\n * <li>The planned withdrawal period is October 1, 2023.</li>\n * <li>Following withdrawal, requests to this service may receive an HTTP 404 error in response.</li>\n * </ul>\n *\n * @description\n *\n * ### **New version [matrixRouting V2](MATRIX_ROUTING2_URL)**\n * **To use the recommended version of Matrix Routing API, please refer to its documentation\n * [here](MATRIX_ROUTING2_URL).**\n *\n * Matrix Routing service implementation using using the TomTom\n * [Routing API - Matrix Routing](MATRIX_ROUTING_URL).\n *\n * The Routing API Matrix Routing service allows the calculation of a matrix of route summaries for a set of routes\n * which are defined with origin and destination locations.\n *\n * For every given origin this service calculates\n * the cost of routing from that origin to every given destination. The set of origins and the set of destinations\n * can be thought of as the column and row headers of a table, and each cell in the table contains the costs of routing\n * from the origin to the destination for that cell.\n *\n * The following costs are computed for each route:\n * - Travel times\n * - Distances\n *\n * Parameters need to be passed to the constructor.\n *\n * If you want to explicitly decide which batch mode you want to use, add a property 'batchMode' with its value\n * set to one of the properties: sync, async, or redirect.\n *\n * The response is also extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * For more information, please refer to the Matrix Routing documentation\n * [here](MATRIX_ROUTING_URL).\n *\n *\n * @class matrixRouting\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses TrackingIdMixin\n * @uses CommonRoutingParameters\n * @uses AbortSignalMixin\n *\n * @constructor\n * @param {Object|Array} [options] Options to be passed to the routing call,\n *     or an array of such options objects to perform a batch request.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n * @example\n * ```js\n * var origins = [\n *   { point: { latitude: 51.63685, longitude: 19.4171 } },\n *   { point: { latitude: 51.63685, longitude: 19 } }\n * ];\n * var destinations = [\n *   { point: { latitude: 52.23498, longitude: 21.00849 } },\n *   { point: { latitude: 52.63685, longitude: 18 } }\n * ];\n * function callbackFn(routeGeoJson) {\n *   console.log(routeGeoJson);\n * }\n * tt.services.matrixRouting({\n *   key: <Your API key>,\n *   origins: origins,\n *   destinations: destinations,\n *   traffic: true\n * }).then(callbackFn);\n * ```\n */\n/* jshint nomen:false */\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {matrixRoutingModel} from 'model/routing/matrixRouting';\nimport {matrixParameters} from './matrixParameters';\nimport {modelResponse} from '../../model/modelResponse';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {\n    matrixFactory,\n    serviceFactory\n} from '../../core';\n\nexport function matrixRouting(options, additionalOptions) {\n    const fields = matrixParameters();\n    const maxNoOfElementsInBatchRequest = 100;\n    const endpoints = new Endpoints(additionalOptions);\n    const matrixRequest = matrixFactory(maxNoOfElementsInBatchRequest, {\n        sync: endpoints.resolve('matrixSyncRoutingEndpoint'),\n        async: endpoints.resolve('matrixRoutingEndpoint')\n    });\n    const handleServiceCall = (data, abortSignal) => {\n        return matrixRequest(fields, data, abortSignal).then(response => modelResponse(response, matrixRoutingModel));\n    };\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.ROUTING,\n        'matrixRouting',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","/**\n * Provides the current traffic model ID which is the traffic model number for the viewport needed for the Traffic API -\n * Incidents Layer, and the {{#crossLink \"IncidentDetails\"}}Traffic API - Incident Details{{/crossLink}}\n * calls.\n *\n * It is updated every minute, and is valid for two minutes before it times out.\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @class incidentViewport\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses ProtocolMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n * @constructor\n * @param {Object} [options]\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n * @example\n * ```js\n * function callbackFn(response) {\n *   console.log(response);\n * }\n * tt.services.incidentViewport({\n *   key: <Your API key>\n * }).then(callbackFn);\n * ```\n */\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport parameterApplications from 'common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\nimport { modelResponse } from '../model/modelResponse';\nimport { Endpoints } from '../endpoints/endpointsManager';\nimport {singleRequestServiceFactory, serviceFactory } from '../core';\nimport {\n    key as validateKey, trackingId as validateTrackingId, oneOfValue as validateOneOfValue,\n    string as validateString\n} from './validators';\n\nconst fields = {\n    key: {\n        validators: [validateKey]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n    protocol: {\n        validators: [validateOneOfValue(['http', 'https'], 'protocol')]\n    },\n    sessionId: {\n        validators: [validateString]\n    }\n};\n\nexport function incidentViewport(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('incidentViewportEndpoint'));\n\n    function handleServiceCall(data, abortSignal) {\n        return singleRequest(fields, data, abortSignal).then(modelResponse);\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.TRAFFIC_INCIDENTS,\n        'incidentViewport',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","export function flowSegmentDataModel(data) {\n    const coordinates = data.flowSegmentData.coordinates.coordinate.map(coordinate => {\n        return {\n            lat: coordinate.latitude,\n            lng: coordinate.longitude\n        };\n    });\n\n    return Object.assign(data, { flowSegmentData: {...data.flowSegmentData, coordinates: {coordinate: coordinates} }});\n}\n","/**\n * The Flow Segment Data service provides information about the speeds and travel times of the road\n * fragment closest to the given coordinates.\n *\n * ### Response\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * Please refer to {{#crossLinkModule \"Services\"}}Difference between\n * API responses and this library's responses{{/crossLinkModule}} section.\n *\n * @class trafficFlowSegmentData\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n * @param {Object} options Options to be passed to the flowSegmentData call.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n * @constructor\n */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    numberInInterval as validateNumberInInterval, zoomLevel as validateZoomLevel, trackingId as validateTrackingId,\n    oneOfValue as validateOneOfValue, string as validateString, point as validatePoint, bool as validateBool\n} from './validators';\nimport {point as convertPoint} from './converters';\nimport {flowSegmentDataModel} from '../model/traffic/flowSegmentData';\nimport parameterApplications from '../common/parameterApplications';\nimport { modelResponse } from '../model/modelResponse';\nimport { v4 as uuid } from 'uuid';\nimport { Endpoints } from '../endpoints/endpointsManager';\nimport { singleRequestServiceFactory, serviceFactory } from '../core';\n\nconst fields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n\n    /**\n     * @attribute zoom\n     * @param {Number} options.zoom Zoom level. This will affect traffic incident coordinates\n     * to separately present both road sides. Should be in the range from 0 to 18.\n     */\n    zoom: {\n        validators: [validateZoomLevel],\n        required: true,\n        application: parameterApplications.PATH\n    },\n\n    /**\n     * @attribute style\n     * @param {String} options.style The type of flow data to be displayed on the tile. Available options: absolute,\n     * relative, and relative-delay.\n     */\n    style: {\n        validators: [validateOneOfValue([\n            'absolute',\n            'relative',\n            'relative-delay',\n            'relative0',\n            'relative0-dark',\n            'reduced-sensitivity'\n        ], 'traffic flow style')],\n        required: true,\n        application: parameterApplications.PATH\n    },\n\n    /**\n     * @attribute point\n     * @param {String} options.point Coordinates of the point close to the road segment.\n     * They have to be comma-separated and calculated using the EPSG4326 projection.\n     */\n    point: {\n        converters: [convertPoint],\n        validators: [validatePoint],\n        required: true\n    },\n\n    /**\n     * @attribute unit\n     * @param {String} [options.unit] Unit of speed. Avilable values: KMPH and MPH.\n     */\n    unit: {\n        validators: [validateOneOfValue(['KMPH', 'MPH'])]\n    },\n\n    /**\n     * @attribute thickness\n     * @param {Number} [options.thickness] The segment width multiplier. Value should be in the range from 1 to 20.\n     */\n    thickness: {\n        validators: [validateNumberInInterval(1, 20)]\n    },\n\n    /**\n     * @attribute openLr\n     * @param {Boolean} [options.openLr] Specifies if the Response includes OpenLR code.\n     */\n    openLr: {\n        validators: [validateBool]\n    }\n};\n\nexport function trafficFlowSegmentData(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('flowSegmentDataEndpoint'));\n\n    const handleServiceCall = (data, abortSignal) => {\n        return singleRequest(fields, data, abortSignal).then(response => modelResponse(response, flowSegmentDataModel));\n    };\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.TRAFFIC_FLOW,\n        'trafficFlowSegmentData',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","/* eslint-disable max-len */\n/**\n * Provides detailed information about traffic incidents in the requested area\n * using the TomTom [Traffic API - Traffic Incidents Details](TRAFFIC_INCIDENT_DETAILS_URL).\n * This is a new version of the {{#crossLink \"Services.services.incidentDetails\"}}incidentDetails{{/crossLink}}\n * method with simpler options and a more readable response object.\n *\n * The current road situation is updated every minute.\n *\n * ### Response\n *\n * The fields that appear in the response depend on the value of the `fields` request parameter.\n *\n * The response is extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * @class incidentDetailsV5\n * @namespace Services.services\n * @module Services\n * @uses KeyMixin\n * @uses TrackingIdMixin\n * @uses ProtocolMixin\n * @uses AbortSignalMixin\n * @constructor\n * @param {Object} options Options object.\n * @param {Object} [additionalOptions] Additional options to be passed to the service.\n *\n * @example\n * ```javascript\n * tt.services.incidentDetailsV5({\n *   key: '<Your API key>',\n *   boundingBox: '4.8854592519716675,52.36934334773164,4.897883244144765,52.37496348620152'\n * }).then(function(response) {\n *   console.log(response);\n * });\n * ```\n */\n\nimport {\n    validateBoundingBox,\n    string as validateString,\n    validIncidentDetailsV5Fields,\n    languageCode as validateLanguageCode,\n    key as validateKey,\n    trackingId as validateTrackingId\n} from './validators';\nimport {\n    removeWhitespaces,\n    convertBoundingBox,\n    incidentDetailsV5Language as convertIncidentDetailsV5Language\n} from './converters';\nimport { singleRequestServiceFactory, serviceFactory } from '../core';\nimport { v4 as uuid } from 'uuid';\nimport parameterApplications from '../common/parameterApplications';\nimport { SERVICE_TYPES } from 'Core/serviceTypes';\nimport { Endpoints } from '../endpoints/endpointsManager';\nimport { modelResponse } from '../model/modelResponse';\n\nconst fields = {\n    key: {\n        validators: [validateKey]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    },\n\n    /**\n     * The bounding box is a limited area within the search results.\n     * Maximum area of bounding box is 10000km2.</br>\n     *\n     * This option is able to convert a number of popular formats into the bounding box.\n     * The supported formats are listed below:\n     *  -  {{#crossLink \"Maps.LngLatBounds\"}}{{/crossLink}} class instance\n     *  - `{minLon: 0, minLat: 0, maxLon: 1, maxLat: 1}` A plain object with the keys minLon, minLat, maxLon, maxLat.\n     *  - `[0, 0, 1, 1]` An array of numbers describing the bounding box following the order: minLon, minLat,\n     *     maxLon, maxLat.\n     *  - `[[0, 0], [1, 1]]` A two-dimensional array with two indexes [southWest, northEast], each one with\n     *     longitude and latitude values.\n     *  - `\"0,0,1,1\"` A comma-separated string with numbers in the order: minLon, minLat, maxLon, maxLat.\n     *  - `[{lon: 0, lat: 0},{lon: 1, lat: 1}]` A one-dimensional array with two objects in the order: southWest,\n     *     northEast, and each object with a `lat` and `lon` key.\n     *  - `[{lng: 0, lat: 0},{lng: 1, lat: 1}]` A one-dimensional array with two objects in the order: southWest,\n     *     northEast and each object with a `lat` and `lon` key.\n     *  - `[{{#crossLink \"Maps.LngLat\"}}{{/crossLink}}, {{#crossLink \"Maps.LngLat\"}}{{/crossLink}}]`\n     *      A one-dimensional array with two {{#crossLink \"Maps.LngLat\"}}{{/crossLink}}\n     *      instances in the order: southWest and northEast.\n     * @attribute boundingBox\n     * @param {Maps.LngLatBounds|Number[]|Object[]|String} options.boundingBox Bounding box area in one of the supported formats.\n     */\n    boundingBox: {\n        required: true,\n        validators: [validateBoundingBox],\n        converters: [convertBoundingBox],\n        cast: (boundingBox, requestOptions) => {\n            requestOptions.bbox = `${boundingBox.minLon},${boundingBox.minLat},${boundingBox.maxLon},${boundingBox.maxLat}`;\n        }\n    },\n\n    /**\n     * The fields to be included in the response, nested as in the response schema.\n     * In order to obtain all data, it is necessary to place the whole object in the query.\n     *\n     * ```javascript\n     * `{\n     *   incidents {\n     *     type,\n     *     geometry {\n     *       type,\n     *       coordinates\n     *     },\n     *     properties {\n     *       id,\n     *       iconCategory,\n     *       magnitudeOfDelay,\n     *       events {\n     *         description,\n     *         code,\n     *         iconCategory\n     *       },\n     *       startTime,\n     *       endTime,\n     *       from,\n     *       to,\n     *       length,\n     *       delay,\n     *       roadNumbers,\n     *       aci {\n     *         probabilityOfOccurrence\n     *         numberOfReports\n     *         lastReportTime\n     *       }\n     *     }\n     *   }\n     * }`\n     * ```\n     * @attribute fields\n     * @param {String} [options.fields='{ incidents { type, geometry { type, coordinates }, properties { iconCategory } } }']\n     */\n    fields: {\n        validators: [validateString, validIncidentDetailsV5Fields],\n        converters: [removeWhitespaces]\n    },\n\n    /**\n     * The Traffic Model ID is the reference value for the state of traffic at a particular time.\n     * It is updated every minute, and is valid for two minutes before it times out.\n     * If not provided the current traffic model ID is used.\n     *\n     * @attribute t\n     * @param {String} [options.t] A valid, not older than two minutes, traffic model ID.\n     */\n    t: {\n        validators: [validateString]\n    },\n\n    /**\n     * The ISO 639-1 code for the output language.\n     *\n     * * Affects the `description` field in the response.\n     * * When an invalid language code is provided the response is returned in English.\n     * * When an incident description does not have a translation, an English description is returned.\n     * @attribute language\n     * @param {String} [options.language='en-GB'] Language code that decides in which language the results\n     * should be returned.\n     */\n    language: {\n        validators: [validateLanguageCode],\n        converters: [convertIncidentDetailsV5Language]\n    }\n};\n\nexport function incidentDetailsV5(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('incidentDetailsV5Endpoint'));\n    function handleServiceCall(requestOptions, abortSignal) {\n        return singleRequest(fields, requestOptions, abortSignal).then(modelResponse);\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.TRAFFIC_INCIDENTS,\n        'incidentDetailsV5',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","/**\n * This Class makes it easy to generate a URL string to request a static map image using the TomTom\n * [Maps API - Static Image](MAPS_RASTER_STATIC_IMAGE_URL).\n *\n * Parameters need to be passed to the method, which generates the URL string.\n *\n * @example\n * ```js\n * // Passing an object with all the configuration\n * function callbackFn(urlString) {\n *   console.log(urlString);\n * }\n * tt.services.staticImage({\n*   key: <Your API key>,\n*   zoom: 15,\n *   bbox: [\n *     [40.712, -74.227],\n *     [40.774, -74.125]\n *   ]\n * }).then(callbackFn);\n * ```\n *\n * @class staticImage\n * @namespace Services.services\n * @uses KeyMixin\n * @uses ViewMixin\n * @module Services\n * @constructor\n * @param {Object} [options] Options to be passed to the routing call,\n *     or an array of such options objects to perform a batch request.\n */\nimport { isValidNumber } from 'services/utils';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    key as validateKey, validateBoundingBox, oneOfValue as validateOneOfValue,\n    point as validatePoint, integerInInterval as validateIntegerInInterval, mapsLanguage as validateMapsLanguage\n} from 'services/validators';\nimport {integer as convertInteger, point as convertPoint, convertBoundingBox} from 'services/converters';\nimport { serviceFactory } from '../../core';\n\n/**\n * @ignore\n * Static Map API endpoint.\n */\nconst MAX_WIDTH = 8192;\nconst MAX_HEIGHT = 8192;\nconst SUPPORTED_IMAGE_FORMATS_PER_LAYER = {\n    'basic': ['jpg', 'jpeg', 'png'],\n    'hybrid': ['png'],\n    'labels': ['png']\n};\n\nconst fields = {\n    /**\n     * @attribute layer\n     * @param {\"basic\"|\"hybrid\"|\"labels\"} [options.layer=\"basic\"] The base map's layer to be used.\n     */\n    layer: {\n        validators: [validateOneOfValue(['basic', 'hybrid', 'labels'], 'layers')],\n        defaultValue: 'basic'\n    },\n\n    /**\n     * @attribute style\n     * @param {\"main\"|\"night\"} [options.style=\"main\"] The base map style to be used.\n     */\n    style: {\n        validators: [validateOneOfValue(['main', 'night'], 'styles')],\n        defaultValue: 'main'\n    },\n\n    /**\n     * @attribute format\n     * @param {\"png\"|\"jpg\"|\"jpeg\"} [options.format=\"png\"] The format of the image to be requested.\n     */\n    format: {\n        validators: [validateOneOfValue(['png', 'jpg', 'jpeg'], 'formats')],\n        defaultValue: 'png'\n    },\n\n    key: {\n        validators: [validateKey]\n    },\n\n    /**\n     * @attribute zoom\n     * @param {Number} [options.zoom=12] Positive integer between 0 and 22.\n     */\n    zoom: {\n        validators: [validateIntegerInInterval(0, 23)],\n        converters: [convertInteger]\n    },\n\n    /**\n     * @attribute center\n     * @param {Maps.LngLat} [options.center] Coordinates to the center of the view.\n     */\n    center: {\n        converters: [convertPoint],\n        validators: [validatePoint]\n    },\n\n    /**\n     * @attribute width\n     * @param {Number} [options.width] Width of the image in pixels.\n     */\n    width: {\n        validators: [validateIntegerInInterval(1, MAX_WIDTH)]\n    },\n\n    /**\n     * @attribute height\n     * @param {Number} [options.height] Height of the image in pixels.\n     */\n    height: {\n        validators: [validateIntegerInInterval(1, MAX_HEIGHT)]\n    },\n\n    /**\n     * @attribute bbox\n     * @param {Maps.LngLatBounds} [options.bbox] Bounding box.\n     */\n    bbox: {\n        validators: [validateBoundingBox],\n        converters: [convertBoundingBox]\n    },\n\n    view: {\n        validators: [validateOneOfValue(\n            ['Unified', 'IL', 'IN', 'MA', 'PK', 'AR', 'Arabic', 'TR', 'RU', 'CN'],\n            'view')]\n    },\n\n    /* eslint-disable max-len */\n    /**\n     * You can find the list of supported languages [here](MAPS_VECTOR_TILE_SUPPORTED_LANGS_URL).\n     * @attribute language\n     * @param {String} [options.language=\"NGT\"] Language to use for the labels.\n     *\n     */\n    /* eslint-disable max-len */\n    language: {\n        validators: [validateMapsLanguage]\n    }\n};\n\n/**\n * @ignore\n * Validate a combination of properties. Done here because chain.js does not support such behaviour.\n * @throws Error\n * @param {Object} data\n */\nfunction validateCombineProperties(data) {\n\n    // Executing additional more complex validations\n    if (!SUPPORTED_IMAGE_FORMATS_PER_LAYER[data.layer] ||\n        SUPPORTED_IMAGE_FORMATS_PER_LAYER[data.layer].indexOf(data.format) === -1) {\n        throw new Error('Unsupported layer. Please change to PNG or use basic layer.');\n    }\n\n    if (data.bbox && data.center) {\n        // If both are used - service will return a HTTP 400 response.\n        throw new Error('The bbox and center properties cannot be used together');\n    }\n\n    if (!data.bbox && !data.center) {\n        throw new Error('Either bbox or center property must be provided');\n    }\n\n    if (data.bbox && (isValidNumber(data.width) || isValidNumber(data.height))) {\n        // If both are used - service will return a HTTP 400 response.\n        throw new Error('The bbox, width and height properties cannot be used together');\n    }\n}\n\nfunction convertBBoxToString(bbox) {\n    return bbox.minLon + ',' + bbox.minLat + ',' + bbox.maxLon + ',' + bbox.maxLat;\n}\n\nfunction serializeToStringIfNecessary(propertyName, propertyValue) {\n    if (propertyName === 'bbox') {\n        propertyValue = convertBBoxToString(propertyValue);\n    } else if (propertyName === 'zoom') {\n        return String(parseInt(propertyValue, 10));\n    } else if (propertyName === 'center') {\n        const splitCenter = propertyValue.split(',');\n        const lngLatCenter = [parseFloat(splitCenter[1]), parseFloat(splitCenter[0])];\n        return lngLatCenter[0] + ',' + lngLatCenter[1];\n    }\n    return propertyValue;\n}\n\n/**\n * @ignore\n * Build the URL string using the available configuration.\n * @param {string} baseUrl\n * @param {Object} data\n * @return {String}\n */\nfunction toUrl(baseUrl, data) {\n    const querySegments = Object.keys(fields).reduce(function(segments, propertyName) {\n        let propertyValue = data[propertyName];\n        if (propertyValue !== undefined) {\n            propertyValue = serializeToStringIfNecessary(propertyName, propertyValue);\n            segments.push(propertyName + '=' + encodeURI(propertyValue));\n        }\n        return segments;\n    }, []);\n    return baseUrl + '?' + querySegments.join('&');\n}\n\nexport function staticImage(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    function handleServiceCall(data) {\n        validateCombineProperties(data);\n        return toUrl(endpoints.resolve('staticMapImageEndpoint'), data);\n    }\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.MAP,\n        'staticImage',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","/**\n * The Copyrights service implementation provides a full copyrights notice in a HTML format that can be displayed to\n * the user when the copyrights link is clicked.\n *\n * Parameters need to be passed to the constructor.\n *\n * ### Response\n * The response from the service is a HTML string with the copyrights information that have to be displayed.\n * The whole respose is wrapped into a div element with the id copyrightMessage.\n * ```html\n * <div id=\"copyrightMessage\"><h4>General Copyrights:</h4>\n *  <p>© 1992 - 2021 TomTom. All rights reserved. This\n *  material is proprietary and the subject of copyright protection, database\n *  right protection and other intellectual property rights owned by TomTom\n *  or its suppliers. The use of this material is subject to the terms of\n *  a license agreement. Any unauthorized copying or disclosure of this\n *  material will lead to criminal and civil liabilities.,</p>\n *  <p>Data Source © 2021 TomTom,</p>\n *  <p>based on https://www.tomtom.com/en_gb/thirdpartyproductterms/</p>\n * </div>\n * ```\n *\n * The response is also extended by `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * @example\n * ```js\n * tt.services.copyrightsV2({\n *   key: <Your API key>\n * }).then(function(response) {\n *    console.log(response);\n * });\n * ```\n *\n * @class copyrightsV2\n * @namespace Services.services\n * @module Services\n * @constructor\n * @uses KeyMixin\n * @uses TrackingIdMixin\n * @uses AbortSignalMixin\n *\n * @param {Object} [options] Options to be passed to the call\n */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport {\n    string as validateString, trackingId as validateTrackingId\n} from '../validators';\nimport parameterApplications from '../../common/parameterApplications';\nimport { v4 as uuid } from 'uuid';\nimport { singleRequestServiceFactory, serviceFactory } from '../../core';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport { modelResponse } from '../../model/modelResponse';\n\nconst fields = {\n    key: {\n        validators: [validateString]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    }\n};\n\nexport function copyrightsV2(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('copyrightsV2Endpoint'));\n\n    function handleServiceCall(requestOptions, abortSignal) {\n        requestOptions.contentType = 'text';\n        return singleRequest(fields, requestOptions, abortSignal).then(modelResponse);\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.MAP,\n        'copyrights',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","/**\n * The copyright caption service implementation provides a caption that is supposed to be displayed on a link\n * that provides the full copyright notice. The response is not changed often.\n *\n * This service is supposed to be called once when user has the map displayed for the first time.\n *\n * ### Response\n * ```\n * {\n *  \"formatVersion\": \"0.0.1\"\n *  \"copyrightsCaption\": \"© 1992 - 2021 TomTom.\"\n * }\n * ```\n *\n * The response is also extended with `getTrackingId()` method, which returns the `Tracking-ID`\n * associated with the request.\n *\n * This text (\"© 1992 - 2021 TomTom.\") has to be displayed as a copyrights prompt when using TomTom services.\n * The caption should be clickable. A user should be presented with the full copyrights notice when\n * the caption is clicked. Full copyright notice can be retrieved from the\n * {{#crossLink \"Services.services.copyrightsV2\"}}CopyrightsV2 service{{/crossLink}}.\n *\n * @example\n * ```js\n * tt.services.copyrightsCaptionV2({\n *   key: <Your API key>\n*  }).then(function(response) {\n *   console.log(response);\n * });\n * ```\n *\n * @class copyrightsCaptionV2\n * @namespace Services.services\n * @module Services\n * @uses TrackingIdMixin\n * @constructor\n * @uses KeyMixin\n * @uses AbortSignalMixin\n *\n * @param {Object} [options]\n */\n\nimport {SERVICE_TYPES} from 'Core/serviceTypes';\nimport { singleRequestServiceFactory, serviceFactory } from '../../core';\nimport { modelResponse } from '../../model/modelResponse';\nimport parameterApplications from '../../common/parameterApplications';\nimport {\n    key as validateKey, trackingId as validateTrackingId\n} from '../validators';\nimport { Endpoints } from '../../endpoints/endpointsManager';\nimport { v4 as uuid } from 'uuid';\n\nconst fields = {\n    key: {\n        validators: [validateKey]\n    },\n    trackingId: {\n        validators: [validateTrackingId],\n        application: parameterApplications.HEADER,\n        defaultValue: uuid\n    }\n};\n\nexport function copyrightsCaptionV2(options, additionalOptions) {\n    const endpoints = new Endpoints(additionalOptions);\n    const singleRequest = singleRequestServiceFactory(endpoints.resolve('captionV2Endpoint'));\n    function handleServiceCall(data, abortSignal) {\n        return singleRequest(fields, data, abortSignal).then(modelResponse);\n    }\n\n    return serviceFactory(\n        fields,\n        SERVICE_TYPES.MAP,\n        'copyrightsCaptionV2',\n        handleServiceCall\n    )(options, additionalOptions);\n}\n","import mainConfig from 'mainConfig';\nimport { setProductInfo } from './requester/analytics';\n\nimport * as searchService from './search';\nimport * as routingService from './routing';\nimport * as trafficService from './traffic';\nimport * as mapDisplayService from './mapDisplay';\nimport * as _endpoints from './endpoints/endpoints';\n\nconst sdkInfo = {\n    version: mainConfig['sdk.version']\n};\n\nconst services = {\n    ...searchService,\n    ...routingService,\n    ...trafficService,\n    ...mapDisplayService,\n    _endpoints\n};\n\n/**\n * <h3 id=\"overview\">Overview</h3>\n * The Services library provides the necessary tools to integrate all Tomtom services with your application.\n * We take care of all the aspects required to make the calls to the Tomtom APIs, such as the construction of the URL,\n * validation, and error handling. It is worth noting that by using our help, you avoid making mistakes and extra calls\n * to the service.\n *\n * We provide three different bundles of the library:\n *\n * - __services-web.min.js__ - use this file if you want to include the library directly on a web page,\n * it can be imported in the `<head>` of your HTML document.\n * The `tt` global object  will be created and attached to the `window`.\n * - __services.min.js__ - use this file if you are using a module bundler. It conforms the\n * <a target=\"_blank\" rel=”noopener” href=\"https://github.com/umdjs/umd\">UMD standard</a>.\n * In case you use ES6 imports all you need is: <br/>`import tt from 'services.min.js'`\n * - __services-node.min.js__ - use this file if you want to use our services in Node.js.\n *\n * <div class=\"alert alert-info margin-top-16\">\n * If you want to display a map on the webpage, go to\n * {{#crossLinkModule \"Maps\"}}Maps library documentation{{/crossLinkModule}}.\n *  </div>\n *\n * <h3 id=\"difference_between_api_responses_and_this_librarys_responses\">Difference\n * between API responses and this library's responses</h3>\n * _Services library_ provides an easy way to get responses from APIs like\n * <a href=\"https://developer.tomtom.com/search-api/search-api-documentation\"\n * target=\"_blank\" rel=”noopener”>Search API</a>,\n * <a href=\"https://developer.tomtom.com/routing-api/routing-api-documentation\"\n * target=\"_blank\" rel=”noopener”>Routing API</a>\n * or <a href=\"https://developer.tomtom.com/traffic-api/traffic-api-documentation\"\n * target=\"_blank\" rel=”noopener”>Traffic API</a>.\n * In order to maintain consistency between data types returned by those APIs, and\n * to make it more convenient to use those responses and data types with the\n * {{#crossLinkModule \"Maps\"}}Maps library{{/crossLinkModule}}, **_Services library_ alters\n * original responses**:\n * * point representations like `[lat, lon]`, `'lat, lon'`, `{lon, lat}`, `{latitude, longitude}`, `{x, y}`\n * are mapped to `{lng, lat}` Object type.\n * * some services responses are extended by additional methods like `toGeoJson()`\n * ({{#crossLink \"Services.services.calculateRoute\"}}calculateRoute{{/crossLink}},\n * {{#crossLink \"Services.services.calculateReachableRange\"}}calculateReachableRange{{/crossLink}},\n * {{#crossLink \"Services.services.alongRouteSearch\"}}alongRouteSearch{{/crossLink}},\n * {{#crossLink \"Services.services.placeById\"}}placeById{{/crossLink}},\n * {{#crossLink \"Services.services.fuzzySearch\"}}fuzzySearch{{/crossLink}},\n * {{#crossLink \"Services.services.geometrySearch\"}}geometrySearch{{/crossLink}},\n * {{#crossLink \"Services.services.nearbySearch\"}}nearbySearch{{/crossLink}},\n * {{#crossLink \"Services.services.categorySearch\"}}categorySearch{{/crossLink}},\n * {{#crossLink \"Services.services.poiSearch\"}}poiSearch{{/crossLink}},\n * {{#crossLink \"Services.services.structuredGeocode\"}}structuredGeocode{{/crossLink}},\n * {{#crossLink \"Services.services.geocode\"}}geocode{{/crossLink}}).\n\n * Usage of this method is presented on the documentation page of each service mentioned.\n * * The `getTrackingId()` method is also available as part of the service response\n * in order to obtain the `Tracking-ID` associated with the request.\n *\n * Most services are asynchronous and return\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"\n * target=\"_blank\" rel=”noopener”>Promise</a>\n * except for {{#crossLink \"Services.services.staticImage\"}}staticImage{{/crossLink}}, which return URL string.\n *\n * @module Services\n * @main Services\n */\n\n/**\n * This object aggregates all the services available in TomTom.\n *\n * Please refer to the following documentation to check what properties are on the tt object,\n * and how you can make calls to TomTom services.\n *\n * @class tt\n * @namespace Services\n */\n\n/**\n * @property services\n * @type services\n * @description An object, which contains all supported services.\n */\n\n/**\n * @method sdkInfo\n * @type function\n * @description Returns SDK details (e.g., version).\n * @return {Object}\n */\n\n/**\n * @method setProductInfo\n * @type function\n * @description This method sets the content of the TomTom-User-Agent header. We are collecting anonymous data for\n * statistics of the usage of our services in order to increase the quality of our products.\n * @param {String} productId Identifier (e.g., a name) of your application e.g.,&nbsp;MyApplication\n * @param {String} productVersion Version of your application e.g.,&nbsp;1.0.2\n * @example\n * ```javascript\n * tt.setProductInfo('your-product-id', 'your-product-version');\n * ```\n */\n\nexport default {\n    sdkInfo,\n    setProductInfo,\n    services\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}