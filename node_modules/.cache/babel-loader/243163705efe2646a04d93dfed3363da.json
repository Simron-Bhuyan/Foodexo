{"ast":null,"code":"import _slicedToArray from\"F:/PROGRAM/REACT/Foodexo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useEffect,useState}from'react';import*as tt from'@tomtom-international/web-sdk-maps';import*as ttapi from'@tomtom-international/web-sdk-services';import'./App.css';import'@tomtom-international/web-sdk-maps/dist/maps.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){var mapElement=useRef();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];var _useState3=useState(-0.112869),_useState4=_slicedToArray(_useState3,2),longitude=_useState4[0],setLongitude=_useState4[1];var _useState5=useState(51.504),_useState6=_slicedToArray(_useState5,2),latitude=_useState6[0],setLatitude=_useState6[1];var convertToPoints=function convertToPoints(lngLat){return{point:{latitude:lngLat.lat,longitude:lngLat.lng}};};var drawRoute=function drawRoute(geoJson,map){if(map.getLayer('route')){map.removeLayer('route');map.removeSource('route');}map.addLayer({id:'route',type:'line',source:{type:'geojson',data:geoJson},paint:{'line-color':'#4a90e2','line-width':6}});};var addDeliveryMarker=function addDeliveryMarker(lngLat,map){var element=document.createElement('div');element.className='marker-delivery';new tt.Marker({element:element}).setLngLat(lngLat).addTo(map);};useEffect(function(){var origin={lng:longitude,lat:latitude};var destinations=[];var map=tt.map({key:process.env.REACT_APP_TOM_TOM_API_KEY,container:mapElement.current,stylesVisibility:{trafficIncidents:true,trafficFlow:true},center:[longitude,latitude],zoom:14});setMap(map);var addMarker=function addMarker(){var popupOffset={bottom:[0,-25]};var popup=new tt.Popup({offset:popupOffset}).setHTML('This is you!');var element=document.createElement('div');element.className='marker';var marker=new tt.Marker({draggable:true,element:element}).setLngLat([longitude,latitude]).addTo(map);marker.on('dragend',function(){var lngLat=marker.getLngLat();setLongitude(lngLat.lng);setLatitude(lngLat.lat);});marker.setPopup(popup).togglePopup();};addMarker();var sortDestinations=function sortDestinations(locations){var pointsForDestinations=locations.map(function(destination){return convertToPoints(destination);});var callParameters={key:process.env.REACT_APP_TOM_TOM_API_KEY,destinations:pointsForDestinations,origins:[convertToPoints(origin)]};return new Promise(function(resolve,reject){ttapi.services.matrixRouting(callParameters).then(function(matrixAPIResults){var results=matrixAPIResults.matrix[0];var resultsArray=results.map(function(result,index){return{location:locations[index],drivingtime:result.response.routeSummary.travelTimeInSeconds};});resultsArray.sort(function(a,b){return a.drivingtime-b.drivingtime;});var sortedLocations=resultsArray.map(function(result){return result.location;});resolve(sortedLocations);});});};var recalculateRoutes=function recalculateRoutes(){sortDestinations(destinations).then(function(sorted){sorted.unshift(origin);ttapi.services.calculateRoute({key:process.env.REACT_APP_TOM_TOM_API_KEY,locations:sorted}).then(function(routeData){var geoJson=routeData.toGeoJson();drawRoute(geoJson,map);});});};map.on('click',function(e){destinations.push(e.lngLat);addDeliveryMarker(e.lngLat,map);recalculateRoutes();});return function(){return map.remove();};},[longitude,latitude]);return/*#__PURE__*/_jsx(_Fragment,{children:map&&/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"div\",{ref:mapElement,className:\"map\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Where to?\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"longitude\",className:\"longitude\",placeholder:\"Put in Longitude\",onChange:function onChange(e){setLongitude(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"latitude\",className:\"latitude\",placeholder:\"Put in latitude\",onChange:function onChange(e){setLatitude(e.target.value);}})]})]})});};export default App;","map":{"version":3,"names":["useRef","useEffect","useState","tt","ttapi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mapElement","_useState","_useState2","_slicedToArray","map","setMap","_useState3","_useState4","longitude","setLongitude","_useState5","_useState6","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","origin","destinations","key","process","env","REACT_APP_TOM_TOM_API_KEY","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","addMarker","popupOffset","bottom","popup","Popup","offset","setHTML","marker","draggable","on","getLngLat","setPopup","togglePopup","sortDestinations","locations","pointsForDestinations","destination","callParameters","origins","Promise","resolve","reject","services","matrixRouting","then","matrixAPIResults","results","matrix","resultsArray","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","recalculateRoutes","sorted","unshift","calculateRoute","routeData","toGeoJson","e","push","remove","children","ref","placeholder","onChange","target","value"],"sources":["F:/PROGRAM/REACT/Foodexo/src/App.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport * as tt from '@tomtom-international/web-sdk-maps'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport './App.css'\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\n\nconst App = () => {\n  const mapElement = useRef()\n  const [map, setMap] = useState({})\n  const [longitude, setLongitude] = useState(-0.112869)\n  const [latitude, setLatitude] = useState(51.504)\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n  \n      }\n    })\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    })\n    .setLngLat(lngLat)\n    .addTo(map)\n  }\n\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    }\n    const destinations = []\n\n    let map = tt.map({\n      key: process.env.REACT_APP_TOM_TOM_API_KEY,\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n      center: [longitude, latitude],\n      zoom: 14,\n    })\n    setMap(map)\n\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25]\n      }\n      const popup = new tt.Popup({ offset: popupOffset }).setHTML('This is you!')\n      const element = document.createElement('div')\n      element.className = 'marker'\n\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element,\n      })\n        .setLngLat([longitude, latitude])\n        .addTo(map)\n      \n      marker.on('dragend', () => {\n        const lngLat = marker.getLngLat()\n        setLongitude(lngLat.lng)\n        setLatitude(lngLat.lat)\n      })\n\n      marker.setPopup(popup).togglePopup()\n      \n    }\n    addMarker()\n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return convertToPoints(destination)\n      })\n      const callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)],\n      }\n\n    return new Promise((resolve, reject) => {\n      ttapi.services\n        .matrixRouting(callParameters)\n        .then((matrixAPIResults) => {\n          const results = matrixAPIResults.matrix[0]\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds,\n            }\n          })\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime\n          })\n          const sortedLocations = resultsArray.map((result) => {\n            return result.location\n          })\n          resolve(sortedLocations)\n        })\n      })\n    }\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then((sorted) => {\n        sorted.unshift(origin)\n\n        ttapi.services\n          .calculateRoute({\n            key: process.env.REACT_APP_TOM_TOM_API_KEY,\n            locations: sorted,\n          })\n          .then((routeData) => {\n            const geoJson = routeData.toGeoJson()\n            drawRoute(geoJson, map)\n        })\n      })\n    }\n\n\n    map.on('click', (e) => {\n      destinations.push(e.lngLat)\n      addDeliveryMarker(e.lngLat, map)\n      recalculateRoutes()\n    })\n\n    return () => map.remove()\n  }, [longitude, latitude])\n\n  return (\n    <>\n      {map && (\n        <div className=\"app\">\n          <div ref={mapElement} className=\"map\" />\n          <div className=\"search-bar\">\n            <h1>Where to?</h1>\n            <input\n              type=\"text\"\n              id=\"longitude\"\n              className=\"longitude\"\n              placeholder=\"Put in Longitude\"\n              onChange={(e) => {\n                setLongitude(e.target.value)\n              }}\n            />\n            <input\n              type=\"text\"\n              id=\"latitude\"\n              className=\"latitude\"\n              placeholder=\"Put in latitude\"\n              onChange={(e) => {\n                setLatitude(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}